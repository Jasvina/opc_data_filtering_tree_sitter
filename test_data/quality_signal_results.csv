ext,text,filename,lang,file_size_in_byte,program_lang,doc_type,quality_signal
h,"/****************************************************************************
 ****************************************************************************
 ***
 ***   This header was automatically generated from a Linux kernel header
 ***   of the same name, to make information necessary for userspace to
 ***   call into the kernel available to libc.  It contains only constants,
 ***   structures, and macros generated from the original header, and thus,
 ***   contains no copyrightable information.
 ***
 ****************************************************************************
 ****************************************************************************/
#ifndef _LINUX_BLKPG_H
#define _LINUX_BLKPG_H

#include <linux/compiler.h>
#include <linux/ioctl.h>

#define BLKPG _IO(0x12,105)

struct blkpg_ioctl_arg {
 int op;
 int flags;
 int datalen;
 void __user *data;
};

#define BLKPG_ADD_PARTITION 1
#define BLKPG_DEL_PARTITION 2

#define BLKPG_DEVNAMELTH 64
#define BLKPG_VOLNAMELTH 64

struct blkpg_partition {
 long long start;
 long long length;
 int pno;
 char devname[BLKPG_DEVNAMELTH];
 char volname[BLKPG_VOLNAMELTH];
};

#endif
",blkpg,en,1189,c,code,"{""qsc_syntax_c"": 0}"
h,"/****************************************************************************
 ****************************************************************************
 ***
 ***   This header was automatically generated from a Linux kernel header
 ***   of the same name, to make information necessary for userspace to
 ***   call into the kernel available to libc.  It contains only constants,
 ***   structures, and macros generated from the original header, and thus,
 ***   contains no copyrightable information.
 ***
 ****************************************************************************
 ****************************************************************************/
#ifndef _LINUX_COMPAT_H
#define _LINUX_COMPAT_H

#endif
",compat,en,738,c,code,"{""qsc_syntax_c"": 1}"
h,"// Copyright (c) 2012 The LevelDB Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file. See the AUTHORS file for names of contributors.
//
// A filter block is stored near the end of a Table file.  It contains
// filters (e.g., bloom filters) for all data blocks in the table combined
// into a single filter block.

#ifndef STORAGE_LEVELDB_TABLE_FILTER_BLOCK_H_
#define STORAGE_LEVELDB_TABLE_FILTER_BLOCK_H_

#include <stddef.h>
#include <stdint.h>
#include <string>
#include <vector>
#include ""leveldb/slice.h""
#include ""util/hash.h""

namespace leveldb {

class FilterPolicy;

// A FilterBlockBuilder is used to construct all of the filters for a
// particular Table.  It generates a single string which is stored as
// a special block in the Table.
//
// The sequence of calls to FilterBlockBuilder must match the regexp:
//      (StartBlock AddKey*)* Finish
class FilterBlockBuilder {
 public:
  explicit FilterBlockBuilder(const FilterPolicy*);

  void StartBlock(uint64_t block_offset);
  void AddKey(const Slice& key);
  Slice Finish();

 private:
  void GenerateFilter();

  const FilterPolicy* policy_;
  std::string keys_;              // Flattened key contents
  std::vector<size_t> start_;     // Starting index in keys_ of each key
  std::string result_;            // Filter data computed so far
  std::vector<Slice> tmp_keys_;   // policy_->CreateFilter() argument
  std::vector<uint32_t> filter_offsets_;

  // No copying allowed
  FilterBlockBuilder(const FilterBlockBuilder&);
  void operator=(const FilterBlockBuilder&);
};

class FilterBlockReader {
 public:
 // REQUIRES: ""contents"" and *policy must stay live while *this is live.
  FilterBlockReader(const FilterPolicy* policy, const Slice& contents);
  bool KeyMayMatch(uint64_t block_offset, const Slice& key);

 private:
  const FilterPolicy* policy_;
  const char* data_;    // Pointer to filter data (at block-start)
  const char* offset_;  // Pointer to beginning of offset array (at block-end)
  size_t num_;          // Number of entries in offset array
  size_t base_lg_;      // Encoding parameter (see kFilterBaseLg in .cc file)
};

}

#endif  // STORAGE_LEVELDB_TABLE_FILTER_BLOCK_H_
",filter_block,en,2316,c,code,"{""qsc_syntax_c"": 0}"
h,"/****************************************************************************
 ****************************************************************************
 ***
 ***   This header was automatically generated from a Linux kernel header
 ***   of the same name, to make information necessary for userspace to
 ***   call into the kernel available to libc.  It contains only constants,
 ***   structures, and macros generated from the original header, and thus,
 ***   contains no copyrightable information.
 ***
 ****************************************************************************
 ****************************************************************************/
#ifndef LINUX_LOCKD_NLM_H
#define LINUX_LOCKD_NLM_H

#define NLM_OFFSET_MAX ((s32) 0x7fffffff)
#define NLM4_OFFSET_MAX ((s64) ((~(u64)0) >> 1))

enum {
 NLM_LCK_GRANTED = 0,
 NLM_LCK_DENIED = 1,
 NLM_LCK_DENIED_NOLOCKS = 2,
 NLM_LCK_BLOCKED = 3,
 NLM_LCK_DENIED_GRACE_PERIOD = 4,
};

#define NLM_PROGRAM 100021

#define NLMPROC_NULL 0
#define NLMPROC_TEST 1
#define NLMPROC_LOCK 2
#define NLMPROC_CANCEL 3
#define NLMPROC_UNLOCK 4
#define NLMPROC_GRANTED 5
#define NLMPROC_TEST_MSG 6
#define NLMPROC_LOCK_MSG 7
#define NLMPROC_CANCEL_MSG 8
#define NLMPROC_UNLOCK_MSG 9
#define NLMPROC_GRANTED_MSG 10
#define NLMPROC_TEST_RES 11
#define NLMPROC_LOCK_RES 12
#define NLMPROC_CANCEL_RES 13
#define NLMPROC_UNLOCK_RES 14
#define NLMPROC_GRANTED_RES 15
#define NLMPROC_NSM_NOTIFY 16  
#define NLMPROC_SHARE 20
#define NLMPROC_UNSHARE 21
#define NLMPROC_NM_LOCK 22
#define NLMPROC_FREE_ALL 23

#endif
",nlm,en,1611,c,code,"{""qsc_syntax_c"": 1}"
h,"// Copyright (c) 2014 The Bitcoin developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#ifndef BITCOIN_CRYPTO_SHA256_H
#define BITCOIN_CRYPTO_SHA256_H

#include <stdint.h>
#include <stdlib.h>

/** A hasher class for SHA-256. */
class CSHA256
{
private:
    uint32_t s[8];
    unsigned char buf[64];
    size_t bytes;

public:
    static const size_t OUTPUT_SIZE = 32;

    CSHA256();
    CSHA256& Write(const unsigned char* data, size_t len);
    void Finalize(unsigned char hash[OUTPUT_SIZE]);
    CSHA256& Reset();
};

#endif // BITCOIN_CRYPTO_SHA256_H
",sha256,en,681,c,code,"{""qsc_syntax_c"": 0}"
h,"// Copyright (c) 2017 The PIVX developers
// Distributed under the MIT/X11 software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#ifndef WIRE_CSPORKDB_H
#define WIRE_CSPORKDB_H

#include <boost/filesystem/path.hpp>
#include ""leveldbwrapper.h""
#include ""spork.h""

class CSporkDB : public CLevelDBWrapper
{
public:
    CSporkDB(size_t nCacheSize, bool fMemory = false, bool fWipe = false);

private:
    CSporkDB(const CSporkDB&);
    void operator=(const CSporkDB&);

public:
    bool WriteSpork(const int nSporkId, const CSporkMessage& spork);
    bool ReadSpork(const int nSporkId, CSporkMessage& spork);
    bool SporkExists(const int nSporkId);
};


#endif //WIRE_CSPORKDB_H
",sporkdb,en,763,c,code,"{""qsc_syntax_c"": 0}"
h,"// Copyright (c) 2009-2010 Satoshi Nakamoto
// Copyright (c) 2009-2013 The Bitcoin developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#ifndef BITCOIN_UNDO_H
#define BITCOIN_UNDO_H

#include ""compressor.h""
#include ""primitives/transaction.h""
#include ""serialize.h""

/** Undo information for a CTxIn
 *
 *  Contains the prevout's CTxOut being spent, and if this was the
 *  last output of the affected transaction, its metadata as well
 *  (coinbase or not, height, transaction version)
 */
class CTxInUndo
{
public:
    CTxOut txout;   // the txout data before being spent
    bool fCoinBase; // if the outpoint was the last unspent: whether it belonged to a coinbase
    bool fCoinStake;
    unsigned int nHeight; // if the outpoint was the last unspent: its height
    int nVersion;         // if the outpoint was the last unspent: its version

    CTxInUndo() : txout(), fCoinBase(false), fCoinStake(false), nHeight(0), nVersion(0) {}
    CTxInUndo(const CTxOut& txoutIn, bool fCoinBaseIn = false, bool fCoinStakeIn = false, unsigned int nHeightIn = 0, int nVersionIn = 0) : txout(txoutIn), fCoinBase(fCoinBaseIn), fCoinStake(fCoinStakeIn), nHeight(nHeightIn), nVersion(nVersionIn) {}

    unsigned int GetSerializeSize(int nType, int nVersion) const
    {
        return ::GetSerializeSize(VARINT(nHeight * 4 + (fCoinBase ? 2 : 0) + (fCoinStake ? 1 : 0)), nType, nVersion) +
               (nHeight > 0 ? ::GetSerializeSize(VARINT(this->nVersion), nType, nVersion) : 0) +
               ::GetSerializeSize(CTxOutCompressor(REF(txout)), nType, nVersion);
    }

    template <typename Stream>
    void Serialize(Stream& s, int nType, int nVersion) const
    {
        ::Serialize(s, VARINT(nHeight * 4 + (fCoinBase ? 2 : 0) + (fCoinStake ? 1 : 0)), nType, nVersion);
        if (nHeight > 0)
            ::Serialize(s, VARINT(this->nVersion), nType, nVersion);
        ::Serialize(s, CTxOutCompressor(REF(txout)), nType, nVersion);
    }

    template <typename Stream>
    void Unserialize(Stream& s, int nType, int nVersion)
    {
        unsigned int nCode = 0;
        ::Unserialize(s, VARINT(nCode), nType, nVersion);
        nHeight = nCode >> 2;
        fCoinBase = nCode & 2;
        fCoinStake = nCode & 1;
        if (nHeight > 0)
            ::Unserialize(s, VARINT(this->nVersion), nType, nVersion);
        ::Unserialize(s, REF(CTxOutCompressor(REF(txout))), nType, nVersion);
    }
};

/** Undo information for a CTransaction */
class CTxUndo
{
public:
    // undo information for all txins
    std::vector<CTxInUndo> vprevout;

    ADD_SERIALIZE_METHODS;

    template <typename Stream, typename Operation>
    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion)
    {
        READWRITE(vprevout);
    }
};

#endif // BITCOIN_UNDO_H
",undo,en,2961,c,code,"{""qsc_syntax_c"": 0}"
h,"// Copyright (c) 2011-2014 The Bitcoin developers
// Distributed under the MIT/X11 software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#ifndef BITCOIN_QT_WALLETMODEL_H
#define BITCOIN_QT_WALLETMODEL_H

#include ""paymentrequestplus.h""
#include ""walletmodeltransaction.h""

#include ""allocators.h"" /* for SecureString */
#include ""swifttx.h""
#include ""wallet.h""

#include <map>
#include <vector>

#include <QObject>

class AddressTableModel;
class OptionsModel;
class RecentRequestsTableModel;
class TransactionTableModel;
class WalletModelTransaction;

class CCoinControl;
class CKeyID;
class COutPoint;
class COutput;
class CPubKey;
class CWallet;
class uint256;

QT_BEGIN_NAMESPACE
class QTimer;
QT_END_NAMESPACE

class SendCoinsRecipient
{
public:
    explicit SendCoinsRecipient() : amount(0), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}
    explicit SendCoinsRecipient(const QString& addr, const QString& label, const CAmount& amount, const QString& message) : address(addr), label(label), amount(amount), message(message), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}

    // If from an insecure payment request, this is used for storing
    // the addresses, e.g. address-A<br />address-B<br />address-C.
    // Info: As we don't need to process addresses in here when using
    // payment requests, we can abuse it for displaying an address list.
    // Todo: This is a hack, should be replaced with a cleaner solution!
    QString address;
    QString label;
    AvailableCoinsType inputType;
    bool useSwiftTX;
    CAmount amount;
    // If from a payment request, this is used for storing the memo
    QString message;

    // If from a payment request, paymentRequest.IsInitialized() will be true
    PaymentRequestPlus paymentRequest;
    // Empty if no authentication or invalid signature/cert/etc.
    QString authenticatedMerchant;

    static const int CURRENT_VERSION = 1;
    int nVersion;

    ADD_SERIALIZE_METHODS;

    template <typename Stream, typename Operation>
    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion)
    {
        std::string sAddress = address.toStdString();
        std::string sLabel = label.toStdString();
        std::string sMessage = message.toStdString();
        std::string sPaymentRequest;
        if (!ser_action.ForRead() && paymentRequest.IsInitialized())
            paymentRequest.SerializeToString(&sPaymentRequest);
        std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();

        READWRITE(this->nVersion);
        nVersion = this->nVersion;
        READWRITE(sAddress);
        READWRITE(sLabel);
        READWRITE(amount);
        READWRITE(sMessage);
        READWRITE(sPaymentRequest);
        READWRITE(sAuthenticatedMerchant);

        if (ser_action.ForRead()) {
            address = QString::fromStdString(sAddress);
            label = QString::fromStdString(sLabel);
            message = QString::fromStdString(sMessage);
            if (!sPaymentRequest.empty())
                paymentRequest.parse(QByteArray::fromRawData(sPaymentRequest.data(), sPaymentRequest.size()));
            authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);
        }
    }
};

/** Interface to Bitcoin wallet from Qt view code. */
class WalletModel : public QObject
{
    Q_OBJECT

public:
    explicit WalletModel(CWallet* wallet, OptionsModel* optionsModel, QObject* parent = 0);
    ~WalletModel();

    enum StatusCode // Returned by sendCoins
    {
        OK,
        InvalidAmount,
        InvalidAddress,
        AmountExceedsBalance,
        AmountWithFeeExceedsBalance,
        DuplicateAddress,
        TransactionCreationFailed, // Error returned when wallet is still locked
        TransactionCommitFailed,
        AnonymizeOnlyUnlocked,
        InsaneFee
    };

    enum EncryptionStatus {
        Unencrypted,                 // !wallet->IsCrypted()
        Locked,                      // wallet->IsCrypted() && wallet->IsLocked()
        Unlocked,                    // wallet->IsCrypted() && !wallet->IsLocked()
        UnlockedForAnonymizationOnly // wallet->IsCrypted() && !wallet->IsLocked() && wallet->fWalletUnlockAnonymizeOnly
    };

    OptionsModel* getOptionsModel();
    AddressTableModel* getAddressTableModel();
    TransactionTableModel* getTransactionTableModel();
    RecentRequestsTableModel* getRecentRequestsTableModel();

    CAmount getBalance(const CCoinControl* coinControl = NULL) const;
    CAmount getUnconfirmedBalance() const;
    CAmount getImmatureBalance() const;
    CAmount getLockedBalance() const;
    CAmount getZerocoinBalance() const;
    CAmount getUnconfirmedZerocoinBalance() const;
    CAmount getImmatureZerocoinBalance() const;
    bool haveWatchOnly() const;
    CAmount getWatchBalance() const;
    CAmount getWatchUnconfirmedBalance() const;
    CAmount getWatchImmatureBalance() const;
    EncryptionStatus getEncryptionStatus() const;
    CKey generateNewKey() const; //for temporary paper wallet key generation
    bool setAddressBook(const CTxDestination& address, const string& strName, const string& strPurpose);
    void encryptKey(const CKey key, const std::string& pwd, const std::string& slt, std::vector<unsigned char>& crypted);
    void decryptKey(const std::vector<unsigned char>& crypted, const std::string& slt, const std::string& pwd, CKey& key);
    void emitBalanceChanged(); // Force update of UI-elements even when no values have changed

    // Check address for validity
    bool validateAddress(const QString& address);

    // Return status record for SendCoins, contains error id + information
    struct SendCoinsReturn {
        SendCoinsReturn(StatusCode status = OK) : status(status) {}
        StatusCode status;
    };

    // prepare transaction for getting txfee before sending coins
    SendCoinsReturn prepareTransaction(WalletModelTransaction& transaction, const CCoinControl* coinControl = NULL);

    // Send coins to a list of recipients
    SendCoinsReturn sendCoins(WalletModelTransaction& transaction);

    // Wallet encryption
    bool setWalletEncrypted(bool encrypted, const SecureString& passphrase);
    // Passphrase only needed when unlocking
    bool setWalletLocked(bool locked, const SecureString& passPhrase = SecureString(), bool anonymizeOnly = false);
    bool changePassphrase(const SecureString& oldPass, const SecureString& newPass);
    // Is wallet unlocked for anonymization only?
    bool isAnonymizeOnlyUnlocked();
    // Wallet backup
    bool backupWallet(const QString& filename);

    // RAI object for unlocking wallet, returned by requestUnlock()
    class UnlockContext
    {
    public:
        UnlockContext(bool valid, bool relock);
        ~UnlockContext();

        bool isValid() const { return valid; }

        // Copy operator and constructor transfer the context
        UnlockContext(const UnlockContext& obj) { CopyFrom(obj); }
        UnlockContext& operator=(const UnlockContext& rhs)
        {
            CopyFrom(rhs);
            return *this;
        }

    private:
        bool valid;
        mutable bool relock; // mutable, as it can be set to false by copying

        void CopyFrom(const UnlockContext& rhs);
    };

    UnlockContext requestUnlock(bool relock = false);

    bool getPubKey(const CKeyID& address, CPubKey& vchPubKeyOut) const;
    bool isMine(CBitcoinAddress address);
    void getOutputs(const std::vector<COutPoint>& vOutpoints, std::vector<COutput>& vOutputs);
    bool isSpent(const COutPoint& outpoint) const;
    void listCoins(std::map<QString, std::vector<COutput> >& mapCoins) const;

    bool isLockedCoin(uint256 hash, unsigned int n) const;
    void lockCoin(COutPoint& output);
    void unlockCoin(COutPoint& output);
    void listLockedCoins(std::vector<COutPoint>& vOutpts);

    void listZerocoinMints(std::list<CZerocoinMint>& listMints, bool fUnusedOnly = false, bool fMaturedOnly = false, bool fUpdateStatus = false);

    void loadReceiveRequests(std::vector<std::string>& vReceiveRequests);
    bool saveReceiveRequest(const std::string& sAddress, const int64_t nId, const std::string& sRequest);

private:
    CWallet* wallet;
    bool fHaveWatchOnly;
    bool fHaveMultiSig;
    bool fForceCheckBalanceChanged;

    // Wallet has an options model for wallet-specific options
    // (transaction fee, for example)
    OptionsModel* optionsModel;

    AddressTableModel* addressTableModel;
    TransactionTableModel* transactionTableModel;
    RecentRequestsTableModel* recentRequestsTableModel;

    // Cache some values to be able to detect changes
    CAmount cachedBalance;
    CAmount cachedUnconfirmedBalance;
    CAmount cachedImmatureBalance;
    CAmount cachedZerocoinBalance;
    CAmount cachedUnconfirmedZerocoinBalance;
    CAmount cachedImmatureZerocoinBalance;
    CAmount cachedWatchOnlyBalance;
    CAmount cachedWatchUnconfBalance;
    CAmount cachedWatchImmatureBalance;
    EncryptionStatus cachedEncryptionStatus;
    int cachedNumBlocks;
    int cachedTxLocks;
    int cachedZeromintPercentage;

    QTimer* pollTimer;

    void subscribeToCoreSignals();
    void unsubscribeFromCoreSignals();
    void checkBalanceChanged();

signals:
    // Signal that balance in wallet changed
    void balanceChanged(const CAmount& balance, const CAmount& unconfirmedBalance, const CAmount& immatureBalance, 
                        const CAmount& zerocoinBalance, const CAmount& unconfirmedZerocoinBalance, const CAmount& immatureZerocoinBalance, 
                        const CAmount& watchOnlyBalance, const CAmount& watchUnconfBalance, const CAmount& watchImmatureBalance);

    // Encryption status of wallet changed
    void encryptionStatusChanged(int status);

    // Signal emitted when wallet needs to be unlocked
    // It is valid behaviour for listeners to keep the wallet locked after this signal;
    // this means that the unlocking failed or was cancelled.
    void requireUnlock();

    // Fired when a message should be reported to the user
    void message(const QString& title, const QString& message, unsigned int style);

    // Coins sent: from wallet, to recipient, in (serialized) transaction:
    void coinsSent(CWallet* wallet, SendCoinsRecipient recipient, QByteArray transaction);

    // Show progress dialog e.g. for rescan
    void showProgress(const QString& title, int nProgress);

    // Watch-only address added
    void notifyWatchonlyChanged(bool fHaveWatchonly);

    // MultiSig address added
    void notifyMultiSigChanged(bool fHaveMultiSig);
public slots:
    /* Wallet status might have changed */
    void updateStatus();
    /* New transaction, or transaction changed status */
    void updateTransaction();
    /* New, updated or removed address book entry */
    void updateAddressBook(const QString& address, const QString& label, bool isMine, const QString& purpose, int status);
    /* Zerocoin update */
    void updateAddressBook(const QString &pubCoin, const QString &isUsed, int status);
    /* Watch-only added */
    void updateWatchOnlyFlag(bool fHaveWatchonly);
    /* MultiSig added */
    void updateMultiSigFlag(bool fHaveMultiSig);
    /* Current, immature or unconfirmed balance might have changed - emit 'balanceChanged' if so */
    void pollBalanceChanged();
};

#endif // BITCOIN_QT_WALLETMODEL_H
",walletmodel,en,11682,c,code,"{""qsc_syntax_c"": 0}"
h,"/****************************************************************************
 ****************************************************************************
 ***
 ***   This header was automatically generated from a Linux kernel header
 ***   of the same name, to make information necessary for userspace to
 ***   call into the kernel available to libc.  It contains only constants,
 ***   structures, and macros generated from the original header, and thus,
 ***   contains no copyrightable information.
 ***
 ****************************************************************************
 ****************************************************************************/
#ifndef _XT_ESP_H
#define _XT_ESP_H

struct xt_esp
{
 u_int32_t spis[2];
 u_int8_t invflags;
};

#define XT_ESP_INV_SPI 0x01  
#define XT_ESP_INV_MASK 0x01  

#endif
",xt_esp,en,857,c,code,"{""qsc_syntax_c"": 1}"
h,"/****************************************************************************
 ****************************************************************************
 ***
 ***   This header was automatically generated from a Linux kernel header
 ***   of the same name, to make information necessary for userspace to
 ***   call into the kernel available to libc.  It contains only constants,
 ***   structures, and macros generated from the original header, and thus,
 ***   contains no copyrightable information.
 ***
 ****************************************************************************
 ****************************************************************************/
#ifndef _XT_QUOTA_H
#define _XT_QUOTA_H

enum xt_quota_flags {
 XT_QUOTA_INVERT = 0x1,
};
#define XT_QUOTA_MASK 0x1

struct xt_quota_info {
 u_int32_t flags;
 u_int32_t pad;
 aligned_u64 quota;
 struct xt_quota_info *master;
};

#endif
",xt_quota,en,930,c,code,"{""qsc_syntax_c"": 1}"
cpp,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include ""cmdLineParser.h""

#ifdef WIN32
int strcasecmp(char* c1,char* c2){return stricmp(c1,c2);}
#endif

cmdLineReadable::cmdLineReadable(void){set=0;}
int cmdLineReadable::read(char**,int){
	set=1;
	return 0;
}

cmdLineInt::cmdLineInt(void){value=0;}
int cmdLineInt::read(char** argv,int argc){
	if(argc>0){
		value=atoi(argv[0]);
		set=1;
		return 1;
	}
	else{return 0;}
}

cmdLineIntArray::cmdLineIntArray(int cnt){
	value=new int[cnt];
	assert(value);
	count=cnt;
	for(int i=0;i<count;i++){value[i]=0;}
}
cmdLineIntArray::~cmdLineIntArray(void){
	if(value){
		delete[] value;
		value=NULL;
	}
}
int cmdLineIntArray::read(char** argv,int argc){
	if(argc>=count){
		set=1;
		for(int i=0;i<count;i++){
			value[i]=atoi(argv[i]);
		}
		return count;
	}
	else{return 0;}
}

cmdLineFloat::cmdLineFloat(void){value=0;}
int cmdLineFloat::read(char** argv,int argc){
	if(argc>0){
		value=(float)atof(argv[0]);
		set=1;
		return 1;
	}
	else{return 0;}
}

cmdLineFloatArray::cmdLineFloatArray(int cnt){
	value=new float[cnt];
	assert(value);
	count=cnt;
	for(int i=0;i<cnt;i++){value[i]=0;}
}
cmdLineFloatArray::~cmdLineFloatArray(void){
	if(value){
		delete[] value;
		value=NULL;
	}
}
int cmdLineFloatArray::read(char** argv,int argc){
	if(argc>=count){
		set=1;
		for(int i=0;i<count;i++){
			value[i]=(float)atof(argv[i]);
		}
		return count;
	}
	else{return 0;}
}

cmdLineString::cmdLineString(void){value=NULL;}
cmdLineString::~cmdLineString(void){
	if(value){
		delete[] value;
		value=NULL;
	}
}
int cmdLineString::read(char** argv,int argc){
	if(argc>0){
		value=new char[strlen(argv[0])+1];
		strcpy(value,argv[0]);
		set=1;
		return 1;
	}
	else{return 0;}
}

cmdLineStringArray::cmdLineStringArray(int cnt){
	value=new char*[cnt];
	assert(value);
	count=cnt;
	for(int i=0;i<count;i++){value[i]=NULL;}
}
cmdLineStringArray::~cmdLineStringArray(void){
	if(value){
		for(int i=0;i<count;i++){if(value[i]){delete[] value[i];}}
		delete[] value;
		value=NULL;
	}
}
int cmdLineStringArray::read(char** argv,int argc){
	if(argc>=count){
		set=1;
		for(int i=0;i<count;i++){
			value[i]=new char[strlen(argv[i])+1];
			strcpy(value[i],argv[i]);
		}
		return count;
	}
	else{return 0;}
}

void cmdLineParse(int argc, char **argv,char** names,int num,cmdLineReadable** readable){
	int i,j;

	while (argc > 0) {
		if (argv[0][0] == '-' && argv[0][1]=='-') {
			for(i=0;i<num;i++){
				if (!strcmp(&argv[0][2],names[i])){
					argv++, argc--;
					j=readable[i]->read(argv,argc);
					argv+=j,argc-=j;
					break;
				}
			}
			if(i==num){argv++, argc--;}
		}
		else {argv++, argc--;}
	}
}

char* GetFileExtension(char* fileName){
	char* fileNameCopy;
	char* ext=NULL;
	char* temp;

	fileNameCopy=new char[strlen(fileName)+1];
	assert(fileNameCopy);
	strcpy(fileNameCopy,fileName);
	temp=strtok(fileNameCopy,""."");
	while(temp!=NULL){
		if(ext!=NULL){delete[] ext;}
		ext=new char[strlen(temp)+1];
		assert(ext);
		strcpy(ext,temp);
		temp=strtok(NULL,""."");
	}
	delete[] fileNameCopy;
	return ext;
}
",cmdLineParser,en,3234,cpp,code,"{""qsc_syntax_cpp"": 0}"
cpp,"// Copyright (c) 2004-present, Facebook, Inc.

// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

#include ""CxxNativeModule.h""
#include ""Instance.h""

#include <iterator>
#include <glog/logging.h>
#include <folly/json.h>

#include ""JsArgumentHelpers.h""
#include ""SystraceSection.h""
#include ""MessageQueueThread.h""

using facebook::xplat::module::CxxModule;
namespace facebook {
namespace react {

std::function<void(folly::dynamic)> makeCallback(
    std::weak_ptr<Instance> instance, const folly::dynamic& callbackId) {
  if (!callbackId.isNumber()) {
    throw std::invalid_argument(""Expected callback(s) as final argument"");
  }

  auto id = callbackId.asInt();
  return [winstance = std::move(instance), id](folly::dynamic args) {
    if (auto instance = winstance.lock()) {
      instance->callJSCallback(id, std::move(args));
    }
  };
}

namespace {

/**
 * CxxModule::Callback accepts a vector<dynamic>, makeCallback returns
 * a callback that accepts a dynamic, adapt the second into the first.
 * TODO: Callback types should be made equal (preferably
 * function<void(dynamic)>) to avoid the extra copy and indirect call.
 */
CxxModule::Callback convertCallback(
    std::function<void(folly::dynamic)> callback) {
  return [callback = std::move(callback)](std::vector<folly::dynamic> args) {
    callback(folly::dynamic(std::make_move_iterator(args.begin()),
                            std::make_move_iterator(args.end())));
  };
}

}

std::string CxxNativeModule::getName() {
  return name_;
}

std::vector<MethodDescriptor> CxxNativeModule::getMethods() {
  lazyInit();

  std::vector<MethodDescriptor> descs;
  for (auto& method : methods_) {
    descs.emplace_back(method.name, method.getType());
  }
  return descs;
}

folly::dynamic CxxNativeModule::getConstants() {
  lazyInit();

  if (!module_) {
    return nullptr;
  }

  folly::dynamic constants = folly::dynamic::object();
  for (auto& pair : module_->getConstants()) {
    constants.insert(std::move(pair.first), std::move(pair.second));
  }
  return constants;
}

void CxxNativeModule::invoke(unsigned int reactMethodId, folly::dynamic&& params, int callId) {
  if (reactMethodId >= methods_.size()) {
    throw std::invalid_argument(folly::to<std::string>(""methodId "", reactMethodId,
        "" out of range [0.."", methods_.size(), ""]""));
  }
  if (!params.isArray()) {
    throw std::invalid_argument(
      folly::to<std::string>(""method parameters should be array, but are "", params.typeName()));
  }

  CxxModule::Callback first;
  CxxModule::Callback second;

  const auto& method = methods_[reactMethodId];

  if (!method.func) {
    throw std::runtime_error(folly::to<std::string>(""Method "", method.name,
        "" is synchronous but invoked asynchronously""));
  }

  if (params.size() < method.callbacks) {
    throw std::invalid_argument(folly::to<std::string>(""Expected "", method.callbacks,
        "" callbacks, but only "", params.size(), "" parameters provided""));
  }

  if (method.callbacks == 1) {
    first = convertCallback(makeCallback(instance_, params[params.size() - 1]));
  } else if (method.callbacks == 2) {
    first = convertCallback(makeCallback(instance_, params[params.size() - 2]));
    second = convertCallback(makeCallback(instance_, params[params.size() - 1]));
  }

  params.resize(params.size() - method.callbacks);

  // I've got a few flawed options here.  I can let the C++ exception
  // propagate, and the registry will log/convert them to java exceptions.
  // This lets all the java and red box handling work ok, but the only info I
  // can capture about the C++ exception is the what() string, not the stack.
  // I can std::terminate() the app.  This causes the full, accurate C++
  // stack trace to be added to logcat by debuggerd.  The java state is lost,
  // but in practice, the java stack is always the same in this case since
  // the javascript stack is not visible, and the crash is unfriendly to js
  // developers, but crucial to C++ developers.  The what() value is also
  // lost.  Finally, I can catch, log the java stack, then rethrow the C++
  // exception.  In this case I get java and C++ stack data, but the C++
  // stack is as of the rethrow, not the original throw, both the C++ and
  // java stacks always look the same.
  //
  // I am going with option 2, since that seems like the most useful
  // choice.  It would be nice to be able to get what() and the C++
  // stack.  I'm told that will be possible in the future.  TODO
  // mhorowitz #7128529: convert C++ exceptions to Java

  messageQueueThread_->runOnQueue([method, params=std::move(params), first, second, callId] () {
  #ifdef WITH_FBSYSTRACE
    if (callId != -1) {
      fbsystrace_end_async_flow(TRACE_TAG_REACT_APPS, ""native"", callId);
    }
  #endif
    SystraceSection s(method.name.c_str());
    try {
      method.func(std::move(params), first, second);
    } catch (const facebook::xplat::JsArgumentException& ex) {
      throw;
    } catch (std::exception& e) {
      LOG(ERROR) << ""std::exception. Method call "" << method.name.c_str() << "" failed: "" << e.what();
      std::terminate();
    } catch (std::string& error) {
      LOG(ERROR) << ""std::string. Method call "" << method.name.c_str() << "" failed: "" << error.c_str();
      std::terminate();
    } catch (...) {
      LOG(ERROR) << ""Method call "" << method.name.c_str() << "" failed. unknown error"";
      std::terminate();
    }
  });
}

MethodCallResult CxxNativeModule::callSerializableNativeHook(unsigned int hookId, folly::dynamic&& args) {
  if (hookId >= methods_.size()) {
    throw std::invalid_argument(
      folly::to<std::string>(""methodId "", hookId, "" out of range [0.."", methods_.size(), ""]""));
  }

  const auto& method = methods_[hookId];

  if (!method.syncFunc) {
    throw std::runtime_error(
      folly::to<std::string>(""Method "", method.name,
                             "" is asynchronous but invoked synchronously""));
  }

  return method.syncFunc(std::move(args));
}

void CxxNativeModule::lazyInit() {
  if (module_ || !provider_) {
    return;
  }

  // TODO 17216751: providers should never return null modules
  module_ = provider_();
  provider_ = nullptr;
  if (module_) {
    methods_ = module_->getMethods();
    module_->setInstance(instance_);
  }
}

}
}
",CxxNativeModule,en,6533,cpp,code,"{""qsc_syntax_cpp"": 1}"
cpp,"/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#include ""ImageManager.h""

namespace facebook {
namespace react {

ImageManager::ImageManager(void *platformSpecificCounterpart) {
  // Not implemented.
}

ImageManager::~ImageManager() {
  // Not implemented.
}

ImageRequest ImageManager::requestImage(const ImageSource &imageSource) const {
  // Not implemented.
}

} // namespace react
} // namespace facebook
",ImageManager,en,573,cpp,code,"{""qsc_syntax_cpp"": 1}"
cpp,"// Copyright (c) 2004-present, Facebook, Inc.

// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

#include ""JSExecutor.h""

#include ""RAMBundleRegistry.h""

#include <folly/Conv.h>

namespace facebook {
namespace react {

std::string JSExecutor::getSyntheticBundlePath(
    uint32_t bundleId,
    const std::string& bundlePath) {
  if (bundleId == RAMBundleRegistry::MAIN_BUNDLE_ID) {
    return bundlePath;
  }
  return folly::to<std::string>(""seg-"", bundleId, "".js"");
}

}
}
",JSExecutor,en,576,cpp,code,"{""qsc_syntax_cpp"": 1}"
cpp,"////////////////////////////////////////////////////////////////////////////
//
// Copyright 2015 Realm Inc.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////

#include ""object_store.hpp""

#include ""object_schema.hpp""
#include ""schema.hpp""
#include ""shared_realm.hpp""
#include ""util/format.hpp""

#include <realm/group.hpp>
#include <realm/table.hpp>
#include <realm/table_view.hpp>
#include <realm/util/assert.hpp>

#include <string.h>

using namespace realm;

const uint64_t ObjectStore::NotVersioned = std::numeric_limits<uint64_t>::max();

namespace {
const char * const c_metadataTableName = ""metadata"";
const char * const c_versionColumnName = ""version"";
const size_t c_versionColumnIndex = 0;

const char * const c_primaryKeyTableName = ""pk"";
const char * const c_primaryKeyObjectClassColumnName = ""pk_table"";
const size_t c_primaryKeyObjectClassColumnIndex =  0;
const char * const c_primaryKeyPropertyNameColumnName = ""pk_property"";
const size_t c_primaryKeyPropertyNameColumnIndex =  1;

const size_t c_zeroRowIndex = 0;

const char c_object_table_prefix[] = ""class_"";

void create_metadata_tables(Group& group) {
    TableRef table = group.get_or_add_table(c_primaryKeyTableName);
    if (table->get_column_count() == 0) {
        table->add_column(type_String, c_primaryKeyObjectClassColumnName);
        table->add_column(type_String, c_primaryKeyPropertyNameColumnName);
    }
    table->add_search_index(table->get_column_index(c_primaryKeyObjectClassColumnName));

    table = group.get_or_add_table(c_metadataTableName);
    if (table->get_column_count() == 0) {
        table->add_column(type_Int, c_versionColumnName);

        // set initial version
        table->add_empty_row();
        table->set_int(c_versionColumnIndex, c_zeroRowIndex, ObjectStore::NotVersioned);
    }
}

void set_schema_version(Group& group, uint64_t version) {
    TableRef table = group.get_or_add_table(c_metadataTableName);
    table->set_int(c_versionColumnIndex, c_zeroRowIndex, version);
}

template<typename Group>
auto table_for_object_schema(Group& group, ObjectSchema const& object_schema)
{
    return ObjectStore::table_for_object_type(group, object_schema.name);
}

void add_index(Table& table, size_t col)
{
    try {
        table.add_search_index(col);
    }
    catch (LogicError const&) {
        throw std::logic_error(util::format(""Cannot index property '%1.%2': indexing properties of type '%3' is not yet implemented."",
                                            ObjectStore::object_type_for_table_name(table.get_name()),
                                            table.get_column_name(col),
                                            string_for_property_type((PropertyType)table.get_column_type(col))));
    }
}

void insert_column(Group& group, Table& table, Property const& property, size_t col_ndx)
{
    if (property.type == PropertyType::Object || property.type == PropertyType::Array) {
        auto target_name = ObjectStore::table_name_for_object_type(property.object_type);
        TableRef link_table = group.get_or_add_table(target_name);
        table.insert_column_link(col_ndx, DataType(property.type), property.name, *link_table);
    }
    else {
        table.insert_column(col_ndx, DataType(property.type), property.name, property.is_nullable);
        if (property.requires_index())
            add_index(table, col_ndx);
    }
}

void add_column(Group& group, Table& table, Property const& property)
{
    insert_column(group, table, property, table.get_column_count());
}

void replace_column(Group& group, Table& table, Property const& old_property, Property const& new_property)
{
    insert_column(group, table, new_property, old_property.table_column);
    table.remove_column(old_property.table_column + 1);
}

TableRef create_table(Group& group, ObjectSchema const& object_schema)
{
    auto name = ObjectStore::table_name_for_object_type(object_schema.name);
    auto table = group.get_or_add_table(name);
    if (table->get_column_count() > 0) {
        return table;
    }

    for (auto const& prop : object_schema.persisted_properties) {
        add_column(group, *table, prop);
    }

    ObjectStore::set_primary_key_for_object(group, object_schema.name, object_schema.primary_key);

    return table;
}

void copy_property_values(Property const& prop, Table& table)
{
    auto copy_property_values = [&](auto getter, auto setter) {
        for (size_t i = 0, count = table.size(); i < count; i++) {
            bool is_default = false;
            (table.*setter)(prop.table_column, i, (table.*getter)(prop.table_column + 1, i),
                            is_default);
        }
    };

    switch (prop.type) {
        case PropertyType::Int:
            copy_property_values(&Table::get_int, &Table::set_int);
            break;
        case PropertyType::Bool:
            copy_property_values(&Table::get_bool, &Table::set_bool);
            break;
        case PropertyType::Float:
            copy_property_values(&Table::get_float, &Table::set_float);
            break;
        case PropertyType::Double:
            copy_property_values(&Table::get_double, &Table::set_double);
            break;
        case PropertyType::String:
            copy_property_values(&Table::get_string, &Table::set_string);
            break;
        case PropertyType::Data:
            copy_property_values(&Table::get_binary, &Table::set_binary);
            break;
        case PropertyType::Date:
            copy_property_values(&Table::get_timestamp, &Table::set_timestamp);
            break;
        default:
            break;
    }
}

void make_property_optional(Group& group, Table& table, Property property)
{
    property.is_nullable = true;
    insert_column(group, table, property, property.table_column);
    copy_property_values(property, table);
    table.remove_column(property.table_column + 1);
}

void make_property_required(Group& group, Table& table, Property property)
{
    property.is_nullable = false;
    insert_column(group, table, property, property.table_column);
    table.remove_column(property.table_column + 1);
}

void validate_primary_column_uniqueness(Group const& group, StringData object_type, StringData primary_property)
{
    auto table = ObjectStore::table_for_object_type(group, object_type);
    if (table->get_distinct_view(table->get_column_index(primary_property)).size() != table->size()) {
        throw DuplicatePrimaryKeyValueException(object_type, primary_property);
    }
}

void validate_primary_column_uniqueness(Group const& group)
{
    auto pk_table = group.get_table(c_primaryKeyTableName);
    for (size_t i = 0, count = pk_table->size(); i < count; ++i) {
        validate_primary_column_uniqueness(group,
                                           pk_table->get_string(c_primaryKeyObjectClassColumnIndex, i),
                                           pk_table->get_string(c_primaryKeyPropertyNameColumnIndex, i));
    }
}
} // anonymous namespace

uint64_t ObjectStore::get_schema_version(Group const& group) {
    ConstTableRef table = group.get_table(c_metadataTableName);
    if (!table || table->get_column_count() == 0) {
        return ObjectStore::NotVersioned;
    }
    return table->get_int(c_versionColumnIndex, c_zeroRowIndex);
}

StringData ObjectStore::get_primary_key_for_object(Group const& group, StringData object_type) {
    ConstTableRef table = group.get_table(c_primaryKeyTableName);
    if (!table) {
        return """";
    }
    size_t row = table->find_first_string(c_primaryKeyObjectClassColumnIndex, object_type);
    if (row == not_found) {
        return """";
    }
    return table->get_string(c_primaryKeyPropertyNameColumnIndex, row);
}

void ObjectStore::set_primary_key_for_object(Group& group, StringData object_type, StringData primary_key) {
    TableRef table = group.get_table(c_primaryKeyTableName);

    // get row or create if new object and populate
    size_t row = table->find_first_string(c_primaryKeyObjectClassColumnIndex, object_type);
    if (row == not_found && primary_key.size()) {
        row = table->add_empty_row();
        row = table->set_string_unique(c_primaryKeyObjectClassColumnIndex, row, object_type);
    }

    // set if changing, or remove if setting to nil
    if (primary_key.size() == 0) {
        if (row != not_found) {
            table->move_last_over(row);
        }
    }
    else {
        table->set_string(c_primaryKeyPropertyNameColumnIndex, row, primary_key);
    }
}

StringData ObjectStore::object_type_for_table_name(StringData table_name) {
    if (table_name.begins_with(c_object_table_prefix)) {
        return table_name.substr(sizeof(c_object_table_prefix) - 1);
    }
    return StringData();
}

std::string ObjectStore::table_name_for_object_type(StringData object_type) {
    return std::string(c_object_table_prefix) + std::string(object_type);
}

TableRef ObjectStore::table_for_object_type(Group& group, StringData object_type) {
    auto name = table_name_for_object_type(object_type);
    return group.get_table(name);
}

ConstTableRef ObjectStore::table_for_object_type(Group const& group, StringData object_type) {
    auto name = table_name_for_object_type(object_type);
    return group.get_table(name);
}

namespace {
struct SchemaDifferenceExplainer {
    std::vector<ObjectSchemaValidationException> errors;

    void operator()(schema_change::AddTable op)
    {
        errors.emplace_back(""Class '%1' has been added."", op.object->name);
    }

    void operator()(schema_change::AddProperty op)
    {
        errors.emplace_back(""Property '%1.%2' has been added."", op.object->name, op.property->name);
    }

    void operator()(schema_change::RemoveProperty op)
    {
        errors.emplace_back(""Property '%1.%2' has been removed."", op.object->name, op.property->name);
    }

    void operator()(schema_change::ChangePropertyType op)
    {
        errors.emplace_back(""Property '%1.%2' has been changed from '%3' to '%4'."",
                            op.object->name, op.new_property->name,
                            string_for_property_type(op.old_property->type),
                            string_for_property_type(op.new_property->type));
    }

    void operator()(schema_change::MakePropertyNullable op)
    {
        errors.emplace_back(""Property '%1.%2' has been made optional."", op.object->name, op.property->name);
    }

    void operator()(schema_change::MakePropertyRequired op)
    {
        errors.emplace_back(""Property '%1.%2' has been made required."", op.object->name, op.property->name);
    }

    void operator()(schema_change::ChangePrimaryKey op)
    {
        if (op.property && !op.object->primary_key.empty()) {
            errors.emplace_back(""Primary Key for class '%1 has changed from '%2' to '%3'."",
                                op.object->name, op.object->primary_key, op.property->name);
        }
        else if (op.property) {
            errors.emplace_back(""Primary Key for class '%1 has been added."", op.object->name);
        }
        else {
            errors.emplace_back(""Primary Key for class '%1 has been removed."", op.object->name);
        }
    }

    void operator()(schema_change::AddIndex op)
    {
        errors.emplace_back(""Property '%1.%2' has been made indexed."", op.object->name, op.property->name);
    }

    void operator()(schema_change::RemoveIndex op)
    {
        errors.emplace_back(""Property '%1.%2' has been made unindexed."", op.object->name, op.property->name);
    }
};

class TableHelper {
public:
    TableHelper(Group& g) : m_group(g) { }

    Table& operator()(const ObjectSchema* object_schema)
    {
        if (object_schema != m_current_object_schema) {
            m_current_table = table_for_object_schema(m_group, *object_schema);
            m_current_object_schema = object_schema;
        }
        REALM_ASSERT(m_current_table);
        return *m_current_table;
    }

private:
    Group& m_group;
    const ObjectSchema* m_current_object_schema = nullptr;
    TableRef m_current_table;
};

template<typename ErrorType, typename Verifier>
void verify_no_errors(Verifier&& verifier, std::vector<SchemaChange> const& changes)
{
    for (auto& change : changes) {
        change.visit(verifier);
    }

    if (!verifier.errors.empty()) {
        throw ErrorType(verifier.errors);
    }
}
} // anonymous namespace

bool ObjectStore::needs_migration(std::vector<SchemaChange> const& changes)
{
    using namespace schema_change;
    struct Visitor {
        bool operator()(AddIndex) { return false; }
        bool operator()(AddProperty) { return true; }
        bool operator()(AddTable) { return false; }
        bool operator()(ChangePrimaryKey) { return true; }
        bool operator()(ChangePropertyType) { return true; }
        bool operator()(MakePropertyNullable) { return true; }
        bool operator()(MakePropertyRequired) { return true; }
        bool operator()(RemoveIndex) { return false; }
        bool operator()(RemoveProperty) { return true; }
    };

    return std::any_of(begin(changes), end(changes),
                       [](auto&& change) { return change.visit(Visitor()); });
}

void ObjectStore::verify_no_changes_required(std::vector<SchemaChange> const& changes)
{
    verify_no_errors<SchemaMismatchException>(SchemaDifferenceExplainer(), changes);
}

void ObjectStore::verify_no_migration_required(std::vector<SchemaChange> const& changes)
{
    using namespace schema_change;
    struct Verifier : SchemaDifferenceExplainer {
        using SchemaDifferenceExplainer::operator();

        // Adding a table or adding/removing indexes can be done automatically.
        // All other changes require migrations.
        void operator()(AddTable) { }
        void operator()(AddIndex) { }
        void operator()(RemoveIndex) { }
    } verifier;
    verify_no_errors<SchemaMismatchException>(verifier, changes);
}

void ObjectStore::verify_valid_additive_changes(std::vector<SchemaChange> const& changes)
{
    using namespace schema_change;
    struct Verifier : SchemaDifferenceExplainer {
        using SchemaDifferenceExplainer::operator();

        // Additive mode allows adding things, extra columns, and adding/removing indexes
        void operator()(AddTable) { }
        void operator()(AddProperty) { }
        void operator()(RemoveProperty) { }
        void operator()(AddIndex) { }
        void operator()(RemoveIndex) { }
    } verifier;
    verify_no_errors<InvalidSchemaChangeException>(verifier, changes);
}

static void apply_non_migration_changes(Group& group, std::vector<SchemaChange> const& changes)
{
    using namespace schema_change;
    struct Applier : SchemaDifferenceExplainer {
        Applier(Group& group) : group{group}, table{group} { }
        Group& group;
        TableHelper table;

        // Produce an exception listing the unsupported schema changes for
        // everything but the explicitly supported ones
        using SchemaDifferenceExplainer::operator();

        void operator()(AddTable op) { create_table(group, *op.object); }
        void operator()(AddIndex op) { add_index(table(op.object), op.property->table_column); }
        void operator()(RemoveIndex op) { table(op.object).remove_search_index(op.property->table_column); }
    } applier{group};
    verify_no_errors<SchemaMismatchException>(applier, changes);
}

static void create_initial_tables(Group& group, std::vector<SchemaChange> const& changes)
{
    using namespace schema_change;
    struct Applier {
        Applier(Group& group) : group{group}, table{group} { }
        Group& group;
        TableHelper table;

        void operator()(AddTable op) { create_table(group, *op.object); }

        // Note that in normal operation none of these will be hit, as if we're
        // creating the initial tables there shouldn't be anything to update.
        // Implementing these makes us better able to handle weird
        // not-quite-correct files produced by other things and has no obvious
        // downside.
        void operator()(AddProperty op) { add_column(group, table(op.object), *op.property); }
        void operator()(RemoveProperty op) { table(op.object).remove_column(op.property->table_column); }
        void operator()(MakePropertyNullable op) { make_property_optional(group, table(op.object), *op.property); }
        void operator()(MakePropertyRequired op) { make_property_required(group, table(op.object), *op.property); }
        void operator()(ChangePrimaryKey op) { ObjectStore::set_primary_key_for_object(group, op.object->name, op.property ? StringData{op.property->name} : """"); }
        void operator()(AddIndex op) { add_index(table(op.object), op.property->table_column); }
        void operator()(RemoveIndex op) { table(op.object).remove_search_index(op.property->table_column); }

        void operator()(ChangePropertyType op)
        {
            insert_column(group, table(op.object), *op.new_property, op.old_property->table_column);
            table(op.object).remove_column(op.old_property->table_column + 1);
        }
    } applier{group};

    for (auto& change : changes) {
        change.visit(applier);
    }
}

static void apply_additive_changes(Group& group, std::vector<SchemaChange> const& changes, bool update_indexes)
{
    using namespace schema_change;
    struct Applier {
        Applier(Group& group, bool update_indexes) : group{group}, table{group}, update_indexes{update_indexes} { }
        Group& group;
        TableHelper table;
        bool update_indexes;

        void operator()(AddTable op) { create_table(group, *op.object); }
        void operator()(AddProperty op) { add_column(group, table(op.object), *op.property); }
        void operator()(AddIndex op) { if (update_indexes) add_index(table(op.object), op.property->table_column); }
        void operator()(RemoveIndex op) { if (update_indexes) table(op.object).remove_search_index(op.property->table_column); }
        void operator()(RemoveProperty) { }

        // No need for errors for these, as we've already verified that they aren't present
        void operator()(ChangePrimaryKey) { }
        void operator()(ChangePropertyType) { }
        void operator()(MakePropertyNullable) { }
        void operator()(MakePropertyRequired) { }
    } applier{group, update_indexes};

    for (auto& change : changes) {
        change.visit(applier);
    }
}

static void apply_pre_migration_changes(Group& group, std::vector<SchemaChange> const& changes)
{
    using namespace schema_change;
    struct Applier {
        Applier(Group& group) : group{group}, table{group} { }
        Group& group;
        TableHelper table;

        void operator()(AddTable op) { create_table(group, *op.object); }
        void operator()(AddProperty op) { add_column(group, table(op.object), *op.property); }
        void operator()(RemoveProperty) { /* delayed until after the migration */ }
        void operator()(ChangePropertyType op) { replace_column(group, table(op.object), *op.old_property, *op.new_property); }
        void operator()(MakePropertyNullable op) { make_property_optional(group, table(op.object), *op.property); }
        void operator()(MakePropertyRequired op) { make_property_required(group, table(op.object), *op.property); }
        void operator()(ChangePrimaryKey op) { ObjectStore::set_primary_key_for_object(group, op.object->name, op.property ? op.property->name : """"); }
        void operator()(AddIndex op) { add_index(table(op.object), op.property->table_column); }
        void operator()(RemoveIndex op) { table(op.object).remove_search_index(op.property->table_column); }
    } applier{group};

    for (auto& change : changes) {
        change.visit(applier);
    }
}

static void apply_post_migration_changes(Group& group, std::vector<SchemaChange> const& changes, Schema const& initial_schema)
{
    using namespace schema_change;
    struct Applier {
        Applier(Group& group, Schema const& initial_schema) : group{group}, initial_schema(initial_schema), table(group) { }
        Group& group;
        Schema const& initial_schema;
        TableHelper table;

        void operator()(RemoveProperty op)
        {
            if (!initial_schema.empty() && !initial_schema.find(op.object->name)->property_for_name(op.property->name))
                throw std::logic_error(util::format(""Renamed property '%1.%2' does not exist."", op.object->name, op.property->name));
            auto table = table_for_object_schema(group, *op.object);
            table->remove_column(op.property->table_column);
        }

        void operator()(ChangePrimaryKey op)
        {
            if (op.property) {
                validate_primary_column_uniqueness(group, op.object->name, op.property->name);
            }
        }

        void operator()(AddTable op) { create_table(group, *op.object); }
        void operator()(AddIndex op) { add_index(table(op.object), op.property->table_column); }
        void operator()(RemoveIndex op) { table(op.object).remove_search_index(op.property->table_column); }

        void operator()(ChangePropertyType) { }
        void operator()(MakePropertyNullable) { }
        void operator()(MakePropertyRequired) { }
        void operator()(AddProperty) { }
    } applier{group, initial_schema};

    for (auto& change : changes) {
        change.visit(applier);
    }
}

void ObjectStore::apply_schema_changes(Group& group, Schema& schema, uint64_t& schema_version,
                                       Schema const& target_schema, uint64_t target_schema_version,
                                       SchemaMode mode, std::vector<SchemaChange> const& changes,
                                       std::function<void()> migration_function)
{
    create_metadata_tables(group);

    if (schema_version == ObjectStore::NotVersioned) {
        create_initial_tables(group, changes);
        set_schema_version(group, target_schema_version);
        schema_version = target_schema_version;
        schema = target_schema;
        set_schema_columns(group, schema);
        return;
    }

    if (mode == SchemaMode::Additive) {
        apply_additive_changes(group, changes, schema_version < target_schema_version);

        if (schema_version < target_schema_version) {
            schema_version = target_schema_version;
            set_schema_version(group, target_schema_version);
        }

        schema = target_schema;
        set_schema_columns(group, schema);
        return;
    }

    if (mode == SchemaMode::Manual) {
        // Have to update the schema on the Realm before calling the migration
        // function as the migration will need it
        auto old_version = schema_version;
        auto old_schema = schema;
        schema_version = target_schema_version;
        schema = target_schema;
        set_schema_columns(group, schema);

        try {
            migration_function();
            verify_no_changes_required(schema_from_group(group).compare(schema));
            validate_primary_column_uniqueness(group);
        }
        catch (...) {
            schema = move(old_schema);
            schema_version = old_version;
            throw;
        }

        set_schema_columns(group, schema);
        set_schema_version(group, target_schema_version);
        return;
    }

    if (schema_version == target_schema_version) {
        apply_non_migration_changes(group, changes);
        schema = target_schema;
        set_schema_columns(group, schema);
        return;
    }

    apply_pre_migration_changes(group, changes);
    if (migration_function) {
        // Have to update the schema on the Realm before calling the migration
        // function as the migration will need it
        auto old_version = schema_version;
        auto old_schema = schema;
        schema_version = target_schema_version;
        schema = target_schema;
        set_schema_columns(group, schema);

        try {
            migration_function();

            // Migration function may have changed the schema, so we need to re-read it
            schema = schema_from_group(group);
            apply_post_migration_changes(group, schema.compare(target_schema), old_schema);
            validate_primary_column_uniqueness(group);
        }
        catch (...) {
            schema = move(old_schema);
            schema_version = old_version;
            throw;
        }
    }
    else {
        apply_post_migration_changes(group, changes, {});
    }

    set_schema_version(group, target_schema_version);
    schema_version = target_schema_version;
    schema = target_schema;
    set_schema_columns(group, schema);
}

Schema ObjectStore::schema_from_group(Group const& group) {
    std::vector<ObjectSchema> schema;
    schema.reserve(group.size());
    for (size_t i = 0; i < group.size(); i++) {
        auto object_type = object_type_for_table_name(group.get_table_name(i));
        if (object_type.size()) {
            schema.emplace_back(group, object_type, i);
        }
    }
    return schema;
}

void ObjectStore::set_schema_columns(Group const& group, Schema& schema)
{
    for (auto& object_schema : schema) {
        auto table = table_for_object_schema(group, object_schema);
        if (!table) {
            continue;
        }
        for (auto& property : object_schema.persisted_properties) {
            property.table_column = table->get_column_index(property.name);
        }
    }
}

void ObjectStore::delete_data_for_object(Group& group, StringData object_type) {
    if (TableRef table = table_for_object_type(group, object_type)) {
        group.remove_table(table->get_index_in_group());
        ObjectStore::set_primary_key_for_object(group, object_type, """");
    }
}

bool ObjectStore::is_empty(Group const& group) {
    for (size_t i = 0; i < group.size(); i++) {
        ConstTableRef table = group.get_table(i);
        std::string object_type = object_type_for_table_name(table->get_name());
        if (!object_type.length()) {
            continue;
        }
        if (!table->is_empty()) {
            return false;
        }
    }
    return true;
}

void ObjectStore::rename_property(Group& group, Schema& target_schema, StringData object_type, StringData old_name, StringData new_name)
{
    TableRef table = table_for_object_type(group, object_type);
    if (!table) {
        throw std::logic_error(util::format(""Cannot rename properties for type '%1' because it does not exist."", object_type));
    }

    auto target_object_schema = target_schema.find(object_type);
    if (target_object_schema == target_schema.end()) {
        throw std::logic_error(util::format(""Cannot rename properties for type '%1' because it has been removed from the Realm."", object_type));
    }

    if (target_object_schema->property_for_name(old_name)) {
        throw std::logic_error(util::format(""Cannot rename property '%1.%2' to '%3' because the source property still exists."",
                                            object_type, old_name, new_name));
    }

    ObjectSchema table_object_schema(group, object_type);
    Property *old_property = table_object_schema.property_for_name(old_name);
    if (!old_property) {
        throw std::logic_error(util::format(""Cannot rename property '%1.%2' because it does not exist."", object_type, old_name));
    }

    Property *new_property = table_object_schema.property_for_name(new_name);
    if (!new_property) {
        // New property doesn't exist in the table, which means we're probably
        // renaming to an intermediate property in a multi-version migration.
        // This is safe because the migration will fail schema validation unless
        // this property is renamed again to a valid name before the end.
        table->rename_column(old_property->table_column, new_name);
        return;
    }

    if (old_property->type != new_property->type || old_property->object_type != new_property->object_type) {
        throw std::logic_error(util::format(""Cannot rename property '%1.%2' to '%3' because it would change from type '%4' to '%5'."",
                                            object_type, old_name, new_name, old_property->type_string(), new_property->type_string()));
    }

    if (old_property->is_nullable && !new_property->is_nullable) {
        throw std::logic_error(util::format(""Cannot rename property '%1.%2' to '%3' because it would change from optional to required."",
                                            object_type, old_name, new_name));
    }

    size_t column_to_remove = new_property->table_column;
    table->rename_column(old_property->table_column, new_name);
    table->remove_column(column_to_remove);

    // update table_column for each property since it may have shifted
    for (auto& current_prop : target_object_schema->persisted_properties) {
        if (current_prop.table_column == column_to_remove)
            current_prop.table_column = old_property->table_column;
        else if (current_prop.table_column > column_to_remove)
            --current_prop.table_column;
    }

    // update nullability for column
    if (new_property->is_nullable && !old_property->is_nullable) {
        auto prop = *new_property;
        prop.table_column = old_property->table_column;
        make_property_optional(group, *table, prop);
    }
}

InvalidSchemaVersionException::InvalidSchemaVersionException(uint64_t old_version, uint64_t new_version)
: logic_error(util::format(""Provided schema version %1 is less than last set version %2."", new_version, old_version))
, m_old_version(old_version), m_new_version(new_version)
{
}

DuplicatePrimaryKeyValueException::DuplicatePrimaryKeyValueException(std::string object_type, std::string property)
: logic_error(util::format(""Primary key property '%1.%2' has duplicate values after migration."", object_type, property))
, m_object_type(object_type), m_property(property)
{
}

SchemaValidationException::SchemaValidationException(std::vector<ObjectSchemaValidationException> const& errors)
: std::logic_error([&] {
    std::string message = ""Schema validation failed due to the following errors:"";
    for (auto const& error : errors) {
        message += std::string(""\n- "") + error.what();
    }
    return message;
}())
{
}

SchemaMismatchException::SchemaMismatchException(std::vector<ObjectSchemaValidationException> const& errors)
: std::logic_error([&] {
    std::string message = ""Migration is required due to the following errors:"";
    for (auto const& error : errors) {
        message += std::string(""\n- "") + error.what();
    }
    return message;
}())
{
}

InvalidSchemaChangeException::InvalidSchemaChangeException(std::vector<ObjectSchemaValidationException> const& errors)
: std::logic_error([&] {
    std::string message = ""The following changes cannot be made in additive-only schema mode:"";
    for (auto const& error : errors) {
        message += std::string(""\n- "") + error.what();
    }
    return message;
}())
{
}
",object_store,en,32312,cpp,code,"{""qsc_syntax_cpp"": 1}"
cpp,"// Copyright (c) 2004-present, Facebook, Inc.

// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

#include ""PrivateDataBase.h""

namespace facebook {
namespace react {

PrivateDataBase::~PrivateDataBase() {}

} }
",PrivateDataBase,en,301,cpp,code,"{""qsc_syntax_cpp"": 1}"
cpp,"// Copyright (c) 2004-present, Facebook, Inc.

// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

#include ""SampleCxxModule.h""
#include <cxxreact/JsArgumentHelpers.h>

#include <folly/Memory.h>
#include <glog/logging.h>

#include <thread>

using namespace folly;

namespace facebook { namespace xplat { namespace samples {

std::string Sample::hello() {
  LOG(WARNING) << ""glog: hello, world"";
  return ""hello"";
}

double Sample::add(double a, double b) {
  return a + b;
}

std::string Sample::concat(const std::string& a, const std::string& b) {
  return a + b;
}

std::string Sample::repeat(int count, const std::string& str) {
  std::string ret;
  for (int i = 0; i < count; i++) {
    ret += str;
  }

  return ret;
}

void Sample::save(std::map<std::string, std::string> dict)
{
  state_ = std::move(dict);
}

std::map<std::string, std::string> Sample::load() {
  return state_;
}

void Sample::except() {
// TODO mhorowitz #7128529: There's no way to automatically test this
// right now.
  // throw std::runtime_error(""oops"");
}

void Sample::call_later(int msec, std::function<void()> f) {
  std::thread t([=] {
      std::this_thread::sleep_for(std::chrono::milliseconds(msec));
      f();
    });
  t.detach();
}

double Sample::twice(double n) {
  return n * 2;
}

SampleCxxModule::SampleCxxModule(std::unique_ptr<Sample> sample)
  : sample_(std::move(sample)) {}

std::string SampleCxxModule::getName() {
  return ""Sample"";
}

auto SampleCxxModule::getConstants() -> std::map<std::string, folly::dynamic> {
  return {
    { ""one"", 1 },
    { ""two"", 2 },
    { ""animal"", ""fox"" },
  };
}

auto SampleCxxModule::getMethods() -> std::vector<Method> {
  return {
    Method(""hello"", [this] {
        sample_->hello();
      }),
    Method(""add"", [this](dynamic args, Callback cb) {
        LOG(WARNING) << ""Sample: add => ""
                     << sample_->add(jsArgAsDouble(args, 0), jsArgAsDouble(args, 1));
        cb({sample_->add(jsArgAsDouble(args, 0), jsArgAsDouble(args, 1))});
      }),
    Method(""concat"", [this](dynamic args, Callback cb) {
        cb({sample_->concat(jsArgAsString(args, 0),
                            jsArgAsString(args, 1))});
      }),
    Method(""repeat"", [this](dynamic args, Callback cb) {
        cb({sample_->repeat(jsArgAsInt(args, 0),
                            jsArgAsString(args, 1))});
      }),
    Method(""save"", this, &SampleCxxModule::save),
    Method(""load"", this, &SampleCxxModule::load),
    Method(""call_later"", [this](dynamic args, Callback cb) {
        sample_->call_later(jsArgAsInt(args, 0), [cb] {
            cb({});
          });
      }),
    Method(""except"", [this] {
        sample_->except();
      }),
    Method(""twice"", [this](dynamic args) -> dynamic {
        return sample_->twice(jsArgAsDouble(args, 0));
      }, SyncTag),
    Method(""syncHello"", [this]() -> dynamic {
        sample_->hello();
        return nullptr;
      }, SyncTag),
  };
}

void SampleCxxModule::save(folly::dynamic args) {
  std::map<std::string, std::string> m;
  for (const auto& p : jsArgN(args, 0, &dynamic::items)) {
    m.emplace(jsArg(p.first, &dynamic::asString, ""map key""),
              jsArg(p.second, &dynamic::asString, ""map value""));
  }
  sample_->save(std::move(m));
}

void SampleCxxModule::load(folly::dynamic args, Callback cb) {
  dynamic d = dynamic::object;
  for (const auto& p : sample_->load()) {
    d.insert(p.first, p.second);
  }
  cb({d});
}

}}}

// By convention, the function name should be the same as the class name.
facebook::xplat::module::CxxModule *SampleCxxModule() {
  return new facebook::xplat::samples::SampleCxxModule(
    folly::make_unique<facebook::xplat::samples::Sample>());
}
",SampleCxxModule,en,3901,cpp,code,"{""qsc_syntax_cpp"": 1}"
cpp,"////////////////////////////////////////////////////////////////////////////
//
// Copyright 2015 Realm Inc.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////

#include ""schema.hpp""

#include ""object_schema.hpp""
#include ""object_store.hpp""
#include ""object_schema.hpp""
#include ""property.hpp""

#include <algorithm>

using namespace realm;

namespace realm {
bool operator==(Schema const& a, Schema const& b)
{
    return static_cast<Schema::base const&>(a) == static_cast<Schema::base const&>(b);
}
}

Schema::Schema() = default;
Schema::~Schema() = default;
Schema::Schema(Schema const&) = default;
Schema::Schema(Schema &&) = default;
Schema& Schema::operator=(Schema const&) = default;
Schema& Schema::operator=(Schema&&) = default;

Schema::Schema(std::initializer_list<ObjectSchema> types) : Schema(base(types)) { }

Schema::Schema(base types) : base(std::move(types))
{
    std::sort(begin(), end(), [](ObjectSchema const& lft, ObjectSchema const& rgt) {
        return lft.name < rgt.name;
    });
}

Schema::iterator Schema::find(StringData name)
{
    auto it = std::lower_bound(begin(), end(), name, [](ObjectSchema const& lft, StringData rgt) {
        return lft.name < rgt;
    });
    if (it != end() && it->name != name) {
        it = end();
    }
    return it;
}

Schema::const_iterator Schema::find(StringData name) const
{
    return const_cast<Schema *>(this)->find(name);
}

Schema::iterator Schema::find(ObjectSchema const& object) noexcept
{
    return find(object.name);
}

Schema::const_iterator Schema::find(ObjectSchema const& object) const noexcept
{
    return const_cast<Schema *>(this)->find(object);
}

void Schema::validate() const
{
    std::vector<ObjectSchemaValidationException> exceptions;
    for (auto const& object : *this) {
        object.validate(*this, exceptions);
    }

    if (exceptions.size()) {
        throw SchemaValidationException(exceptions);
    }
}

namespace {
struct IsNotRemoveProperty {
    bool operator()(SchemaChange sc) const { return sc.visit(*this); }
    bool operator()(schema_change::RemoveProperty) const { return false; }
    template<typename T> bool operator()(T) const { return true; }
};
struct GetRemovedColumn {
    size_t operator()(SchemaChange sc) const { return sc.visit(*this); }
    size_t operator()(schema_change::RemoveProperty p) const { return p.property->table_column; }
    template<typename T> size_t operator()(T) const { __builtin_unreachable(); }
};
}

static void compare(ObjectSchema const& existing_schema,
                    ObjectSchema const& target_schema,
                    std::vector<SchemaChange>& changes)
{
    for (auto& current_prop : existing_schema.persisted_properties) {
        auto target_prop = target_schema.property_for_name(current_prop.name);

        if (!target_prop) {
            changes.emplace_back(schema_change::RemoveProperty{&existing_schema, &current_prop});
            continue;
        }
        if (current_prop.type != target_prop->type || current_prop.object_type != target_prop->object_type) {
            changes.emplace_back(schema_change::ChangePropertyType{&existing_schema, &current_prop, target_prop});
            continue;
        }
        if (current_prop.is_nullable != target_prop->is_nullable) {
            if (current_prop.is_nullable)
                changes.emplace_back(schema_change::MakePropertyRequired{&existing_schema, &current_prop});
            else
                changes.emplace_back(schema_change::MakePropertyNullable{&existing_schema, &current_prop});
        }
        if (target_prop->requires_index()) {
            if (!current_prop.is_indexed)
                changes.emplace_back(schema_change::AddIndex{&existing_schema, &current_prop});
        }
        else if (current_prop.requires_index()) {
            changes.emplace_back(schema_change::RemoveIndex{&existing_schema, &current_prop});
        }
    }

    if (existing_schema.primary_key != target_schema.primary_key) {
        changes.emplace_back(schema_change::ChangePrimaryKey{&existing_schema, target_schema.primary_key_property()});
    }

    for (auto& target_prop : target_schema.persisted_properties) {
        if (!existing_schema.property_for_name(target_prop.name)) {
            changes.emplace_back(schema_change::AddProperty{&existing_schema, &target_prop});
        }
    }

    // Move all RemovePropertys to the end and sort in descending order of
    // column index, as removing a column will shift all columns after that one
    auto it = std::partition(begin(changes), end(changes), IsNotRemoveProperty{});
    std::sort(it, end(changes),
              [](auto a, auto b) { return GetRemovedColumn()(a) > GetRemovedColumn()(b); });
}

std::vector<SchemaChange> Schema::compare(Schema const& target_schema) const
{
    std::vector<SchemaChange> changes;
    for (auto &object_schema : target_schema) {
        auto matching_schema = find(object_schema);
        if (matching_schema == end()) {
            changes.emplace_back(schema_change::AddTable{&object_schema});
            continue;
        }

        ::compare(*matching_schema, object_schema, changes);
    }
    return changes;
}

void Schema::copy_table_columns_from(realm::Schema const& other)
{
    for (auto& source_schema : other) {
        auto matching_schema = find(source_schema);
        if (matching_schema == end()) {
            continue;
        }

        for (auto& current_prop : source_schema.persisted_properties) {
            auto target_prop = matching_schema->property_for_name(current_prop.name);
            if (target_prop) {
                target_prop->table_column = current_prop.table_column;
            }
        }
    }
}

namespace realm {
bool operator==(SchemaChange const& lft, SchemaChange const& rgt)
{
    if (lft.m_kind != rgt.m_kind)
        return false;

    using namespace schema_change;
    struct Visitor {
        SchemaChange const& value;

        #define REALM_SC_COMPARE(type, ...) \
            bool operator()(type rgt) const \
            { \
                auto cmp = [](auto&& v) { return std::tie(__VA_ARGS__); }; \
                return cmp(value.type) == cmp(rgt); \
            }

        REALM_SC_COMPARE(AddIndex, v.object, v.property)
        REALM_SC_COMPARE(AddProperty, v.object, v.property)
        REALM_SC_COMPARE(AddTable, v.object)
        REALM_SC_COMPARE(ChangePrimaryKey, v.object, v.property)
        REALM_SC_COMPARE(ChangePropertyType, v.object, v.old_property, v.new_property)
        REALM_SC_COMPARE(MakePropertyNullable, v.object, v.property)
        REALM_SC_COMPARE(MakePropertyRequired, v.object, v.property)
        REALM_SC_COMPARE(RemoveIndex, v.object, v.property)
        REALM_SC_COMPARE(RemoveProperty, v.object, v.property)

        #undef REALM_SC_COMPARE
    } visitor{lft};
    return rgt.visit(visitor);
}
} // namespace realm
",schema,en,7650,cpp,code,"{""qsc_syntax_cpp"": 0}"
cpp,"/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#include <memory>

#include <gtest/gtest.h>

#include <fabric/textlayoutmanager/TextLayoutManager.h>

using namespace facebook::react;

TEST(TextLayoutManagerTest, testSomething) {
  // TODO:
}
",TextLayoutManagerTest,en,396,cpp,code,"{""qsc_syntax_cpp"": 1}"
cpp,"#include ""zstream.h""
#include <math.h>
#include <stdlib.h>
#include <iomanip.h>

void main() {
    char h[256] = ""Hello"";
    char* g = ""Goodbye"";
    ozstream out(""temp.gz"");
    out < ""This works well"" < h < g;
    out.close();

    izstream in(""temp.gz""); // read it back
    char *x = read_string(in), *y = new char[256], z[256];
    in > y > z;
    in.close();
    cout << x << endl << y << endl << z << endl;

    out.open(""temp.gz""); // try ascii output; zcat temp.gz to see the results
    out << setw(50) << setfill('#') << setprecision(20) << x << endl << y << endl << z << endl;
    out << z << endl << y << endl << x << endl;
    out << 1.1234567890123456789 << endl;

    delete[] x; delete[] y;
}
",zstream_test,en,736,cpp,code,"{""qsc_syntax_cpp"": 1}"
cs,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework.Interfaces;
using UnityEngine;
using UnityEngine.TestTools.Logging;
using UnityEngine.TestTools.TestRunner;

namespace UnityEditor.TestTools.TestRunner.TestRun.Tasks
{
    internal abstract class BuildActionTaskBase<T> : TestTaskBase
    {
        private string typeName;
        internal IAttributeFinder attributeFinder;
        internal RuntimePlatform targetPlatform = Application.platform;
        internal Action<string> logAction = Debug.Log;
        internal Func<ILogScope> logScopeProvider = () => new LogScope();
        internal Func<Type, object> createInstance = Activator.CreateInstance;

        protected BuildActionTaskBase(IAttributeFinder attributeFinder)
        {
            this.attributeFinder = attributeFinder;
            typeName = typeof(T).Name;
        }

        protected abstract void Action(T target);
        
        public override IEnumerator Execute(TestJobData testJobData)
        {
            if (testJobData.testTree == null)
            {
                throw new Exception($""Test tree is not available for {GetType().Name}."");
            }

            var enumerator = ExecuteMethods(testJobData.testTree, testJobData.executionSettings.BuildNUnitFilter());
            while (enumerator.MoveNext())
            {
                yield return null;
            }
        }
        
        protected IEnumerator ExecuteMethods(ITest testTree, ITestFilter testRunnerFilter)
        {
            var exceptions = new List<Exception>();
            
            foreach (var targetClassType in attributeFinder.Search(testTree, testRunnerFilter, targetPlatform))
            {
                try
                {
                    var targetClass = (T) createInstance(targetClassType);

                    logAction($""Executing {typeName} for: {targetClassType.FullName}."");

                    using (var logScope = logScopeProvider())
                    {
                        Action(targetClass);

                        if (logScope.AnyFailingLogs())
                        {
                            var failingLog = logScope.FailingLogs.First();
                            throw new UnhandledLogMessageException(failingLog);
                        }

                        if (logScope.ExpectedLogs.Any())
                        {
                            var expectedLogs = logScope.ExpectedLogs.First();
                            throw new UnexpectedLogMessageException(expectedLogs);
                        }
                    }
                }
                catch (Exception ex)
                {
                    exceptions.Add(ex);
                }

                yield return null;
            }

            if (exceptions.Count > 0)
            {
                throw new AggregateException($""One or more exceptions when executing {typeName}."", exceptions);
            }
        }
    }
}",BuildActionTaskBase,en,3091,csharp,code,{}
cs,"// using UnityEditor;
// using UnityEditor.SettingsManagement;
// using UnityEngine;
//
// namespace Unity.Cloud.Collaborate.Settings
// {
//     internal class CollabSetting<T> : UserSetting<T>
//     {
//         public CollabSetting(string key, T value, SettingsScope scope = SettingsScope.Project)
//             : base(CollabSettingsManager.instance, key, value, scope)
//         {}
//
//         CollabSetting(UnityEditor.SettingsManagement.Settings settings, string key, T value, SettingsScope scope = SettingsScope.Project)
//             : base(settings, key, value, scope) { }
//     }
// }
",CollabSetting,en,618,csharp,code,{}
cshtml,"﻿@model CostumeModel
@{
    ViewData[""Title""] = ""Costume"";
}

<h2>Add a Costume</h2>
<form method=""post"" asp-action=""Index"" asp-controller=""Costume"">
    @Html.AntiForgeryToken()
    <div class=""form-group"">
        <label asp-for=""CostumeName"" class=""control-label"">Costume</label>
        <input type=""text"" asp-for=""CostumeName"" placeholder=""Enter costume name"" class=""form-control"" />
        <span asp-validation-for=""CostumeName""></span>
    </div>
    <button type=""submit"" class=""btn btn-primary"">Add</button>

</form>

<br />

<h2>Costumes</h2>
<table class=""table"">
    <thead>
        <tr>
            <th scope=""col"">Costume Name</th>
            <th scope=""col"">Operation</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var costume in Model.CostumeList)
        {
            <tr>
                <td>@costume.CostumeName</td>
                <td>
                    <form method=""post"" asp-action=""Delete"" asp-controller=""Costume"">
                        @Html.AntiForgeryToken()
                        <input hidden asp-for=""Id"" value=""@costume.Id"" />
                        <button type=""submit"" class=""btn btn-primary"">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

",Index,en,1317,csharp,code,{}
cs,"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute(""Lab 3"")]
[assembly: System.Reflection.AssemblyConfigurationAttribute(""Release"")]
[assembly: System.Reflection.AssemblyFileVersionAttribute(""1.0.0.0"")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute(""1.0.0"")]
[assembly: System.Reflection.AssemblyProductAttribute(""Lab 3"")]
[assembly: System.Reflection.AssemblyTitleAttribute(""Lab 3"")]
[assembly: System.Reflection.AssemblyVersionAttribute(""1.0.0.0"")]

// Generated by the MSBuild WriteCodeFragment class.

",Lab 3.AssemblyInfo,en,990,csharp,code,{}
cshtml,"﻿@page
@model LoginModel

@{
    ViewData[""Title""] = ""Log in"";
}

<h2>@ViewData[""Title""]</h2>
<div class=""row"">
    <div class=""col-md-4"">
        <section>
            <form method=""post"">
                <h4>Use a local account to log in.</h4>
                <hr />
                <div asp-validation-summary=""All"" class=""text-danger""></div>
                <div class=""form-group"">
                    <label asp-for=""Input.Email""></label>
                    <input asp-for=""Input.Email"" class=""form-control"" />
                    <span asp-validation-for=""Input.Email"" class=""text-danger""></span>
                </div>
                <div class=""form-group"">
                    <label asp-for=""Input.Password""></label>
                    <input asp-for=""Input.Password"" class=""form-control"" />
                    <span asp-validation-for=""Input.Password"" class=""text-danger""></span>
                </div>
                <div class=""form-group"">
                    <div class=""checkbox"">
                        <label asp-for=""Input.RememberMe"">
                            <input asp-for=""Input.RememberMe"" />
                            @Html.DisplayNameFor(m => m.Input.RememberMe)
                        </label>
                    </div>
                </div>
                <div class=""form-group"">
                    <button type=""submit"" class=""btn btn-default"">Log in</button>
                </div>
                <div class=""form-group"">
                    <p>
                        <a asp-page=""./ForgotPassword"">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page=""./Register"" asp-route-returnUrl=""@Model.ReturnUrl"">Register as a new user</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
    <div class=""col-md-6 col-md-offset-2"">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href=""https://go.microsoft.com/fwlink/?LinkID=532715"">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-page=""./ExternalLogin"" asp-route-returnUrl=""@Model.ReturnUrl"" method=""post"" class=""form-horizontal"">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    if (provider.Name.CompareTo(""Facebook"") == 0)
                                    {
                                        <button type=""submit"" class=""btn btn-default fab fa-facebook fa-lg"" name=""provider"" value=""@provider.Name"" title=""Log in using your @provider.DisplayName account""> @provider.DisplayName</button>
                                    }
                                    else if (provider.Name.CompareTo(""Google"") == 0)
                                    {
                                        <button type=""submit"" class=""btn fab fa-google fa-lg"" name=""provider"" value=""@provider.Name"" title=""Log in using your @provider.DisplayName account""> @provider.DisplayName</button>
                                    }
                                    else if (provider.Name.CompareTo(""Twitter"") == 0)
                                    {
                                        <button type=""submit"" class=""btn fab fa-twitter fa-lg"" name=""provider"" value=""@provider.Name"" title=""Log in using your @provider.DisplayName account""> @provider.DisplayName</button>
                                    }
                                    else
                                    {
                                        <button type=""submit"" class=""btn btn-default"" name=""provider"" value=""@provider.Name"" title=""Log in using your @provider.DisplayName account"">@provider.DisplayName</button>
                                    }
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name=""_ValidationScriptsPartial"" />
}
",Login,en,4679,csharp,code,{}
cs,"using System;
using System.Collections.Generic;
using JetBrains.Annotations;
using NUnit.Framework;
using Unity.Cloud.Collaborate.Models;
using Unity.Cloud.Collaborate.Models.Structures;
using Unity.Cloud.Collaborate.UserInterface;

namespace Unity.Cloud.Collaborate.Tests.Models
{
    internal class TestHistoryModel : IHistoryModel
    {
        public event Action HistoryListUpdated = delegate { };
        public event Action<IReadOnlyList<IHistoryEntry>> HistoryListReceived = delegate { };
        public event Action<IHistoryEntry> SelectedRevisionReceived = delegate { };
        public event Action<bool> BusyStatusUpdated = delegate { };
        public event Action<int?> EntryCountUpdated = delegate { };
        public event Action StateChanged = delegate { };

        public int RequestedPageOfRevisionsCount;
        public int RequestedPageSize;

        public int RequestedSingleRevisionCount;
        [CanBeNull]
        public string RequestedRevisionId;

        public int RequestedEntryCountCount;

        public int RequestedUpdateToCount;
        [CanBeNull]
        public string RequestedUpdateToRevisionId;

        public int RequestedRestoreToCount;
        [CanBeNull]
        public string RequestedRestoreToRevisionId;

        public int RequestedGoBackToCount;
        [CanBeNull]
        public string RequestedGoBackToRevisionId;

        public int RequestedRevertCount;
        [CanBeNull]
        public string RequestedRevertRevisionId;
        public int RequestedRevertFileCount;

        public void SetNumberOfEntries(int count)
        {
            Assert.NotNull(EntryCountUpdated, ""There should be an receiver for the entry number count event."");
            EntryCountUpdated.Invoke(count);
        }

        public void TriggerUpdatedEntryListEvent()
        {
            Assert.NotNull(HistoryListUpdated, ""There should be an receiver for the history list updated event."");
            HistoryListUpdated();
        }

        public bool Busy { get; set; }
        public int PageNumber { get; set; }
        public string SelectedRevisionId { get; set; }
        public string SavedRevisionId { get; set; }
        public bool IsRevisionSelected => !string.IsNullOrEmpty(SelectedRevisionId);

        public void RequestPageOfRevisions(int pageSize)
        {
            RequestedPageSize = pageSize;
            RequestedPageOfRevisionsCount++;
        }

        public void RequestSingleRevision(string revisionId)
        {
            RequestedRevisionId = revisionId;
            RequestedSingleRevisionCount++;
        }

        public void RequestEntryNumber()
        {
            RequestedEntryCountCount++;
        }

        public void RequestUpdateTo(string revisionId)
        {
            RequestedUpdateToCount++;
            RequestedUpdateToRevisionId = revisionId;
        }

        public void RequestRestoreTo(string revisionId)
        {
            RequestedRestoreToCount++;
            RequestedRestoreToRevisionId = revisionId;
        }

        public void RequestGoBackTo(string revisionId)
        {
            RequestedGoBackToCount++;
            RequestedGoBackToRevisionId = revisionId;
        }

        public bool SupportsRevert { get; } = false;
        public void RequestRevert(string revisionId, IReadOnlyList<string> files)
        {
            RequestedRevertCount++;
            RequestedRevertRevisionId = revisionId;
            RequestedRevertFileCount = files.Count;
        }

        public void OnStart()
        {
            throw new NotImplementedException();
        }

        public void OnStop()
        {
            throw new NotImplementedException();
        }

        public void RestoreState(IWindowCache cache)
        {
            throw new NotImplementedException();
        }

        public void SaveState(IWindowCache cache)
        {
            throw new NotImplementedException();
        }
    }
}
",TestHistoryModel,en,4069,csharp,code,{}
cs,"using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using UnityEngine.Timeline;
using UnityEngine.Playables;

namespace UnityEditor.Timeline
{
    // Handles Undo animated properties on Monobehaviours to create track clips
    static partial class TimelineRecording
    {
        static readonly List<PropertyModification> s_TempPropertyModifications = new List<PropertyModification>(6);

        internal static UndoPropertyModification[] ProcessUndoModification(UndoPropertyModification[] modifications, WindowState state)
        {
            if (HasAnyPlayableAssetModifications(modifications))
                return ProcessPlayableAssetModification(modifications, state);
            return ProcessMonoBehaviourModification(modifications, state);
        }

        static UnityEngine.Object GetTarget(UndoPropertyModification undo)
        {
            if (undo.currentValue != null)
                return undo.currentValue.target;
            if (undo.previousValue != null)
                return undo.previousValue.target;
            return null;
        }

        // Gets the appropriate track for a given game object
        static TrackAsset GetTrackForGameObject(GameObject gameObject, WindowState state)
        {
            if (gameObject == null)
                return null;

            var director = state.editSequence.director;
            if (director == null)
                return null;

            var level = int.MaxValue;

            TrackAsset result = null;

            // search the output tracks
            var outputTracks = state.editSequence.asset.flattenedTracks;
            foreach (var track in outputTracks)
            {
                if (track.GetType() != typeof(AnimationTrack))
                    continue;
                if (!state.IsTrackRecordable(track))
                    continue;

                var obj = TimelineUtility.GetSceneGameObject(director, track);
                if (obj != null)
                {
                    // checks if the effected gameobject is our child
                    var childLevel = GetChildLevel(obj, gameObject);
                    if (childLevel != -1 && childLevel < level)
                    {
                        result = track;
                        level = childLevel;
                    }
                }
            }

            // the resulting track is not armed. checking here avoids accidentally recording objects with their own
            // tracks
            if (result && !state.IsTrackRecordable(result))
            {
                result = null;
            }

            return result;
        }

        // Gets the track this property would record to.
        // Returns null if there is a track, but it's not currently active for recording
        public static TrackAsset GetRecordingTrack(SerializedProperty property, WindowState state)
        {
            var serializedObject = property.serializedObject;
            var component = serializedObject.targetObject as Component;
            if (component == null)
                return null;

            var gameObject = component.gameObject;
            return GetTrackForGameObject(gameObject, state);
        }

        // Given a serialized property, gathers all animatable properties
        static void GatherModifications(SerializedProperty property, List<PropertyModification> modifications)
        {
            // handles child properties (Vector3 is 3 recordable properties)
            if (property.hasChildren)
            {
                var iter = property.Copy();
                var end = property.GetEndProperty(false);

                // recurse over all children properties
                while (iter.Next(true) && !SerializedProperty.EqualContents(iter, end))
                {
                    GatherModifications(iter, modifications);
                }
            }

            var isObject = property.propertyType == SerializedPropertyType.ObjectReference;
            var isFloat = property.propertyType == SerializedPropertyType.Float ||
                property.propertyType == SerializedPropertyType.Boolean ||
                property.propertyType == SerializedPropertyType.Integer;

            if (isObject || isFloat)
            {
                var serializedObject = property.serializedObject;
                var modification = new PropertyModification();

                modification.target = serializedObject.targetObject;
                modification.propertyPath = property.propertyPath;
                if (isObject)
                {
                    modification.value = string.Empty;
                    modification.objectReference = property.objectReferenceValue;
                }
                else
                {
                    modification.value = TimelineUtility.PropertyToString(property);
                }

                // Path for monobehaviour based - better to grab the component to get the curvebinding to allow validation
                if (serializedObject.targetObject is Component)
                {
                    EditorCurveBinding temp;
                    var go = ((Component)serializedObject.targetObject).gameObject;
                    if (AnimationUtility.PropertyModificationToEditorCurveBinding(modification, go, out temp) != null)
                    {
                        modifications.Add(modification);
                    }
                }
                else
                {
                    modifications.Add(modification);
                }
            }
        }

        public static bool CanRecord(SerializedProperty property, WindowState state)
        {
            if (IsPlayableAssetProperty(property))
                return AnimatedParameterUtility.IsTypeAnimatable(property.propertyType);

            if (GetRecordingTrack(property, state) == null)
                return false;

            s_TempPropertyModifications.Clear();
            GatherModifications(property, s_TempPropertyModifications);
            return s_TempPropertyModifications.Any();
        }

        public static void AddKey(SerializedProperty prop, WindowState state)
        {
            s_TempPropertyModifications.Clear();
            GatherModifications(prop, s_TempPropertyModifications);
            if (s_TempPropertyModifications.Any())
            {
                AddKey(s_TempPropertyModifications, state);
            }
        }

        public static void AddKey(IEnumerable<PropertyModification> modifications, WindowState state)
        {
            var undos = modifications.Select(PropertyModificationToUndoPropertyModification).ToArray();
            ProcessUndoModification(undos, state);
        }

        static UndoPropertyModification PropertyModificationToUndoPropertyModification(PropertyModification prop)
        {
            return new UndoPropertyModification
            {
                previousValue = prop,
                currentValue = new PropertyModification
                {
                    objectReference = prop.objectReference,
                    propertyPath = prop.propertyPath,
                    target = prop.target,
                    value = prop.value
                },
                keepPrefabOverride = true
            };
        }

        // Given an animation track, return the clip that we are currently recording to
        static AnimationClip GetRecordingClip(TrackAsset asset, WindowState state, out double startTime, out double timeScale)
        {
            startTime = 0;
            timeScale = 1;

            TimelineClip displayBackground = null;
            asset.FindRecordingClipAtTime(state.editSequence.time, out displayBackground);
            var animClip = asset.FindRecordingAnimationClipAtTime(state.editSequence.time);

            if (displayBackground != null)
            {
                startTime =  displayBackground.start;
                timeScale =  displayBackground.timeScale;
            }

            return animClip;
        }

        // Helper that finds the animation clip we are recording and the relative time to that clip
        static bool GetClipAndRelativeTime(UnityEngine.Object target, WindowState state,
            out AnimationClip outClip, out double keyTime, out bool keyInRange)
        {
            const float floatToDoubleError = 0.00001f;
            outClip = null;
            keyTime = 0;
            keyInRange = false;

            double startTime = 0;
            double timeScale = 1;
            AnimationClip clip = null;

            IPlayableAsset playableAsset = target as IPlayableAsset;
            Component component = target as Component;

            // Handle recordable playable assets
            if (playableAsset != null)
            {
                var curvesOwner = AnimatedParameterUtility.ToCurvesOwner(playableAsset, state.editSequence.asset);
                if (curvesOwner != null && state.IsTrackRecordable(curvesOwner.targetTrack))
                {
                    if (curvesOwner.curves == null)
                        curvesOwner.CreateCurves(curvesOwner.GetUniqueRecordedClipName());

                    clip = curvesOwner.curves;

                    var timelineClip = curvesOwner as TimelineClip;
                    if (timelineClip != null)
                    {
                        startTime = timelineClip.start;
                        timeScale = timelineClip.timeScale;
                    }
                }
            }
            // Handle recording components, including infinite clip
            else if (component != null)
            {
                var asset = GetTrackForGameObject(component.gameObject, state);
                if (asset != null)
                {
                    clip = GetRecordingClip(asset, state, out startTime, out timeScale);
                }
            }

            if (clip == null)
                return false;

            keyTime = (state.editSequence.time - startTime) * timeScale;
            outClip = clip;
            keyInRange = keyTime >= 0 && keyTime <= (clip.length * timeScale + floatToDoubleError);

            return true;
        }

        public static bool HasCurve(IEnumerable<PropertyModification> modifications, UnityEngine.Object target,
            WindowState state)
        {
            return GetKeyTimes(target, modifications, state).Any();
        }

        public static bool HasKey(IEnumerable<PropertyModification> modifications, UnityEngine.Object target,
            WindowState state)
        {
            AnimationClip clip;
            double keyTime;
            bool inRange;
            if (!GetClipAndRelativeTime(target, state, out clip, out keyTime, out inRange))
                return false;

            return GetKeyTimes(target, modifications, state).Any(t => (CurveEditUtility.KeyCompare((float)state.editSequence.time, (float)t, clip.frameRate) == 0));
        }

        // Checks if a key already exists for this property
        static bool HasBinding(UnityEngine.Object target, PropertyModification modification, AnimationClip clip, out EditorCurveBinding binding)
        {
            var component = target as Component;
            var playableAsset = target as IPlayableAsset;

            if (component != null)
            {
                var type = AnimationUtility.PropertyModificationToEditorCurveBinding(modification, component.gameObject, out binding);
                binding = RotationCurveInterpolation.RemapAnimationBindingForRotationCurves(binding, clip);
                return type != null;
            }

            if (playableAsset != null)
            {
                binding = EditorCurveBinding.FloatCurve(string.Empty, target.GetType(),
                    AnimatedParameterUtility.GetAnimatedParameterBindingName(target, modification.propertyPath));
            }
            else
            {
                binding = new EditorCurveBinding();
                return false;
            }

            return true;
        }

        public static void RemoveKey(UnityEngine.Object target, IEnumerable<PropertyModification> modifications,
            WindowState state)
        {
            AnimationClip clip;
            double keyTime;
            bool inRange;
            if (!GetClipAndRelativeTime(target, state, out clip, out keyTime, out inRange) || !inRange)
                return;
            var refreshPreview = false;
            TimelineUndo.PushUndo(clip, ""Remove Key"");
            foreach (var mod in modifications)
            {
                EditorCurveBinding temp;
                if (HasBinding(target, mod, clip, out temp))
                {
                    if (temp.isPPtrCurve)
                    {
                        CurveEditUtility.RemoveObjectKey(clip, temp, keyTime);
                        if (CurveEditUtility.GetObjectKeyCount(clip, temp) == 0)
                        {
                            refreshPreview = true;
                        }
                    }
                    else
                    {
                        AnimationCurve curve = AnimationUtility.GetEditorCurve(clip, temp);
                        if (curve != null)
                        {
                            CurveEditUtility.RemoveKeyFrameFromCurve(curve, (float)keyTime, clip.frameRate);
                            AnimationUtility.SetEditorCurve(clip, temp, curve);
                            if (curve.length == 0)
                            {
                                AnimationUtility.SetEditorCurve(clip, temp, null);
                                refreshPreview = true;
                            }
                        }
                    }
                }
            }

            if (refreshPreview)
            {
                state.ResetPreviewMode();
            }
        }

        static HashSet<double> GetKeyTimes(UnityEngine.Object target, IEnumerable<PropertyModification> modifications, WindowState state)
        {
            var keyTimes = new HashSet<double>();

            AnimationClip animationClip;
            double keyTime;
            bool inRange;
            GetClipAndRelativeTime(target, state, out animationClip, out keyTime, out inRange);
            if (animationClip == null)
                return keyTimes;

            var component = target as Component;
            var playableAsset = target as IPlayableAsset;
            var info = AnimationClipCurveCache.Instance.GetCurveInfo(animationClip);

            TimelineClip clip = null;
            if (component != null)
            {
                GetTrackForGameObject(component.gameObject, state).FindRecordingClipAtTime(state.editSequence.time, out clip);
            }
            else if (playableAsset != null)
            {
                clip = FindClipWithAsset(state.editSequence.asset, playableAsset);
            }

            foreach (var mod in modifications)
            {
                EditorCurveBinding temp;
                if (HasBinding(target, mod, animationClip, out temp))
                {
                    IEnumerable<double> keys = new HashSet<double>();
                    if (temp.isPPtrCurve)
                    {
                        var curve = info.GetObjectCurveForBinding(temp);
                        if (curve != null)
                        {
                            keys = curve.Select(x => (double)x.time);
                        }
                    }
                    else
                    {
                        var curve = info.GetCurveForBinding(temp);
                        if (curve != null)
                        {
                            keys = curve.keys.Select(x => (double)x.time);
                        }
                    }

                    // Transform the times in to 'global' space using the clip
                    if (clip != null)
                    {
                        foreach (var k in keys)
                        {
                            var time = clip.FromLocalTimeUnbound(k);
                            const double eps = 1e-5;
                            if (time >= clip.start - eps && time <= clip.end + eps)
                            {
                                keyTimes.Add(time);
                            }
                        }
                    }
                    // infinite clip mode, global == local space
                    else
                    {
                        keyTimes.UnionWith(keys);
                    }
                }
            }

            return keyTimes;
        }

        public static void NextKey(UnityEngine.Object target, IEnumerable<PropertyModification> modifications, WindowState state)
        {
            const double eps = 1e-5;
            var keyTimes = GetKeyTimes(target, modifications, state);
            if (keyTimes.Count == 0)
                return;
            var nextKeys = keyTimes.Where(x => x > state.editSequence.time + eps);
            if (nextKeys.Any())
            {
                state.editSequence.time = nextKeys.Min();
            }
        }

        public static void PrevKey(UnityEngine.Object target, IEnumerable<PropertyModification> modifications, WindowState state)
        {
            const double eps = 1e-5;
            var keyTimes = GetKeyTimes(target, modifications, state);
            if (keyTimes.Count == 0)
                return;
            var prevKeys = keyTimes.Where(x => x < state.editSequence.time - eps);
            if (prevKeys.Any())
            {
                state.editSequence.time = prevKeys.Max();
            }
        }

        public static void RemoveCurve(UnityEngine.Object target, IEnumerable<PropertyModification> modifications, WindowState state)
        {
            AnimationClip clip = null;
            double keyTime = 0;
            var inRange = false; // not used for curves
            if (!GetClipAndRelativeTime(target, state, out clip, out keyTime, out inRange))
                return;

            TimelineUndo.PushUndo(clip, ""Remove Curve"");
            foreach (var mod in modifications)
            {
                EditorCurveBinding temp;
                if (HasBinding(target, mod, clip, out temp))
                {
                    if (temp.isPPtrCurve)
                        AnimationUtility.SetObjectReferenceCurve(clip, temp, null);
                    else
                        AnimationUtility.SetEditorCurve(clip, temp, null);
                }
            }

            state.ResetPreviewMode();
        }

        public static IEnumerable<GameObject> GetRecordableGameObjects(WindowState state)
        {
            if (state == null || state.editSequence.asset == null || state.editSequence.director == null)
                yield break;

            var outputTracks = state.editSequence.asset.GetOutputTracks();
            foreach (var track in outputTracks)
            {
                if (track.GetType() != typeof(AnimationTrack))
                    continue;
                if (!state.IsTrackRecordable(track) && !track.GetChildTracks().Any(state.IsTrackRecordable))
                    continue;

                var obj = TimelineUtility.GetSceneGameObject(state.editSequence.director, track);
                if (obj != null)
                {
                    yield return obj;
                }
            }
        }
    }
}
",TimelineRecording,en,20017,csharp,code,{}
cs,"using UnityEngine;
using UnityEditor;
using UnityEditor.Presets;

namespace TMPro.EditorUtilities
{

    [CustomEditor(typeof(TextMeshPro), true), CanEditMultipleObjects]
    public class TMP_EditorPanel : TMP_BaseEditorPanel
    {
        static readonly GUIContent k_SortingLayerLabel = new GUIContent(""Sorting Layer"", ""Name of the Renderer's sorting layer."");
        static readonly GUIContent k_OrderInLayerLabel = new GUIContent(""Order in Layer"", ""Renderer's order within a sorting layer."");
        static readonly GUIContent k_OrthographicLabel = new GUIContent(""Orthographic Mode"", ""Should be enabled when using an orthographic camera. Instructs the shader to not perform any perspective correction."");
        static readonly GUIContent k_VolumetricLabel = new GUIContent(""Volumetric Setup"", ""Use cubes rather than quads to render the text. Allows for volumetric rendering when combined with a compatible shader."");

        private static string[] k_SortingLayerNames;
        bool IsPreset;

        SerializedProperty m_IsVolumetricTextProp;
        SerializedProperty m_IsOrthographicProp;
        Renderer m_Renderer;

        protected override void OnEnable()
        {
            base.OnEnable();

            // Determine if the inspected object is a Preset
            IsPreset = (int)(target as Component).gameObject.hideFlags == 93;

            m_IsOrthographicProp = serializedObject.FindProperty(""m_isOrthographic"");

            m_IsVolumetricTextProp = serializedObject.FindProperty(""m_isVolumetricText"");

            m_Renderer = m_TextComponent.GetComponent<Renderer>();

            // Populate Sorting Layer Names
            k_SortingLayerNames = SortingLayerHelper.sortingLayerNames;
        }

        protected override void DrawExtraSettings()
        {
            Rect rect = EditorGUILayout.GetControlRect(false, 24);

            if (GUI.Button(rect, new GUIContent(""<b>Extra Settings</b>""), TMP_UIStyleManager.sectionHeader))
                Foldout.extraSettings = !Foldout.extraSettings;

            GUI.Label(rect, (Foldout.extraSettings ? """" : k_UiStateLabel[1]), TMP_UIStyleManager.rightLabel);

            if (Foldout.extraSettings)
            {
                //EditorGUI.indentLevel += 1;

                DrawMargins();

                DrawSortingLayer();

                DrawGeometrySorting();

                DrawIsTextObjectScaleStatic();

                DrawOrthographicMode();

                DrawRichText();

                DrawParsing();

                DrawSpriteAsset();

                DrawStyleSheet();

                //DrawVolumetricSetup();

                DrawKerning();

                DrawPadding();

                //EditorGUI.indentLevel -= 1;
            }
        }

        protected void DrawSortingLayer()
        {
            Undo.RecordObject(m_Renderer, ""Sorting Layer Change"");

            EditorGUI.BeginChangeCheck();

            TextMeshPro textComponent = (TextMeshPro)m_TextComponent;

            // Look up the layer name using the current layer ID
            string oldName = IsPreset ? SortingLayer.IDToName(textComponent._SortingLayerID) : SortingLayer.IDToName(textComponent.sortingLayerID);

            // Use the name to look up our array index into the names list
            int oldLayerIndex = System.Array.IndexOf(k_SortingLayerNames, oldName);

            // Show the pop-up for the names
            EditorGUIUtility.fieldWidth = 0f;
            int newLayerIndex = EditorGUILayout.Popup(k_SortingLayerLabel, oldLayerIndex, k_SortingLayerNames);

            // If the index changes, look up the ID for the new index to store as the new ID
            if (newLayerIndex != oldLayerIndex)
                UpdateTargetsSortingLayerID(SortingLayer.NameToID(k_SortingLayerNames[newLayerIndex]));

            // Get value from internal property if target is a Preset otherwise from the public property
            int oldSortingOrder = IsPreset ? textComponent._SortingOrder : textComponent.sortingOrder;

            int newSortingLayerOrder = EditorGUILayout.IntField(k_OrderInLayerLabel, oldSortingOrder);

            if (newSortingLayerOrder != textComponent.sortingOrder)
                UpdateTargetsSortingOrder(newSortingLayerOrder);

            if (EditorGUI.EndChangeCheck())
                m_HavePropertiesChanged = true;

            EditorGUILayout.Space();
        }

        protected void DrawOrthographicMode()
        {
            EditorGUI.BeginChangeCheck();
            EditorGUILayout.PropertyField(m_IsOrthographicProp, k_OrthographicLabel);
            if (EditorGUI.EndChangeCheck())
                m_HavePropertiesChanged = true;
        }

        protected void DrawVolumetricSetup()
        {
            EditorGUI.BeginChangeCheck();
            EditorGUILayout.PropertyField(m_IsVolumetricTextProp, k_VolumetricLabel);
            if (EditorGUI.EndChangeCheck())
            {
                m_HavePropertiesChanged = true;
                m_TextComponent.textInfo.ResetVertexLayout(m_IsVolumetricTextProp.boolValue);
            }

            EditorGUILayout.Space();
        }

        // Method to handle multi object selection
        protected override bool IsMixSelectionTypes()
        {
            GameObject[] objects = Selection.gameObjects;
            if (objects.Length > 1)
            {
                for (int i = 0; i < objects.Length; i++)
                {
                    if (objects[i].GetComponent<TextMeshPro>() == null)
                        return true;
                }
            }
            return false;
        }

        protected override void OnUndoRedo()
        {
            int undoEventId = Undo.GetCurrentGroup();
            int lastUndoEventId = s_EventId;

            if (undoEventId != lastUndoEventId)
            {
                for (int i = 0; i < targets.Length; i++)
                {
                    //Debug.Log(""Undo & Redo Performed detected in Editor Panel. Event ID:"" + Undo.GetCurrentGroup());
                    TMPro_EventManager.ON_TEXTMESHPRO_PROPERTY_CHANGED(true, targets[i] as TextMeshPro);
                    s_EventId = undoEventId;
                }
            }
        }

        void UpdateTargetsSortingLayerID(int sortingLayerID)
        {
            for (int i = 0; i < targets.Length; i++)
            {
                var textComponent = (TextMeshPro)targets[i];

                if (textComponent != null)
                    textComponent.sortingLayerID = sortingLayerID;
            }
        }

        void UpdateTargetsSortingOrder(int sortingOrder)
        {
            for (int i = 0; i < targets.Length; i++)
            {
                var textComponent = (TextMeshPro)targets[i];

                if (textComponent != null)
                    textComponent.sortingOrder = sortingOrder;
            }
        }
    }
}
",TMP_EditorPanel,en,7075,csharp,code,{}
cs,"using System.Collections.Generic;

namespace UnityEngine.TestTools.Utils
{
    public class Vector4ComparerWithEqualsOperator : IEqualityComparer<Vector4>
    {
        private static readonly Vector4ComparerWithEqualsOperator m_Instance = new Vector4ComparerWithEqualsOperator();
        public static Vector4ComparerWithEqualsOperator Instance { get { return m_Instance; } }

        private Vector4ComparerWithEqualsOperator() {}

        public bool Equals(Vector4 expected, Vector4 actual)
        {
            return expected == actual;
        }

        public int GetHashCode(Vector4 vec4)
        {
            return 0;
        }
    }
}
",Vector4ComparerWithEqualsOperator,en,672,csharp,code,{}
cshtml,"﻿@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, AuthoringTagHelpers
@using Lab_8.Models",_ViewImports,en,114,csharp,code,{}
go,"package validator

import (
	""fmt""
	""reflect""
	""strings""
	""sync""
	""sync/atomic""
)

type tagType uint8

const (
	typeDefault tagType = iota
	typeOmitEmpty
	typeNoStructLevel
	typeStructOnly
	typeDive
	typeOr
	typeExists
)

type structCache struct {
	lock sync.Mutex
	m    atomic.Value // map[reflect.Type]*cStruct
}

func (sc *structCache) Get(key reflect.Type) (c *cStruct, found bool) {
	c, found = sc.m.Load().(map[reflect.Type]*cStruct)[key]
	return
}

func (sc *structCache) Set(key reflect.Type, value *cStruct) {

	m := sc.m.Load().(map[reflect.Type]*cStruct)

	nm := make(map[reflect.Type]*cStruct, len(m)+1)
	for k, v := range m {
		nm[k] = v
	}
	nm[key] = value
	sc.m.Store(nm)
}

type tagCache struct {
	lock sync.Mutex
	m    atomic.Value // map[string]*cTag
}

func (tc *tagCache) Get(key string) (c *cTag, found bool) {
	c, found = tc.m.Load().(map[string]*cTag)[key]
	return
}

func (tc *tagCache) Set(key string, value *cTag) {

	m := tc.m.Load().(map[string]*cTag)

	nm := make(map[string]*cTag, len(m)+1)
	for k, v := range m {
		nm[k] = v
	}
	nm[key] = value
	tc.m.Store(nm)
}

type cStruct struct {
	Name   string
	fields map[int]*cField
	fn     StructLevelFunc
}

type cField struct {
	Idx     int
	Name    string
	AltName string
	cTags   *cTag
}

type cTag struct {
	tag            string
	aliasTag       string
	actualAliasTag string
	param          string
	hasAlias       bool
	typeof         tagType
	hasTag         bool
	fn             Func
	next           *cTag
}

func (v *Validate) extractStructCache(current reflect.Value, sName string) *cStruct {

	v.structCache.lock.Lock()
	defer v.structCache.lock.Unlock() // leave as defer! because if inner panics, it will never get unlocked otherwise!

	typ := current.Type()

	// could have been multiple trying to access, but once first is done this ensures struct
	// isn't parsed again.
	cs, ok := v.structCache.Get(typ)
	if ok {
		return cs
	}

	cs = &cStruct{Name: sName, fields: make(map[int]*cField), fn: v.structLevelFuncs[typ]}

	numFields := current.NumField()

	var ctag *cTag
	var fld reflect.StructField
	var tag string
	var customName string

	for i := 0; i < numFields; i++ {

		fld = typ.Field(i)

		if !fld.Anonymous && fld.PkgPath != blank {
			continue
		}

		tag = fld.Tag.Get(v.tagName)

		if tag == skipValidationTag {
			continue
		}

		customName = fld.Name

		if v.fieldNameTag != blank {

			name := strings.SplitN(fld.Tag.Get(v.fieldNameTag), "","", 2)[0]

			// dash check is for json ""-"" (aka skipValidationTag) means don't output in json
			if name != """" && name != skipValidationTag {
				customName = name
			}
		}

		// NOTE: cannot use shared tag cache, because tags may be equal, but things like alias may be different
		// and so only struct level caching can be used instead of combined with Field tag caching

		if len(tag) > 0 {
			ctag, _ = v.parseFieldTagsRecursive(tag, fld.Name, blank, false)
		} else {
			// even if field doesn't have validations need cTag for traversing to potential inner/nested
			// elements of the field.
			ctag = new(cTag)
		}

		cs.fields[i] = &cField{Idx: i, Name: fld.Name, AltName: customName, cTags: ctag}
	}

	v.structCache.Set(typ, cs)

	return cs
}

func (v *Validate) parseFieldTagsRecursive(tag string, fieldName string, alias string, hasAlias bool) (firstCtag *cTag, current *cTag) {

	var t string
	var ok bool
	noAlias := len(alias) == 0
	tags := strings.Split(tag, tagSeparator)

	for i := 0; i < len(tags); i++ {

		t = tags[i]

		if noAlias {
			alias = t
		}

		if v.hasAliasValidators {
			// check map for alias and process new tags, otherwise process as usual
			if tagsVal, found := v.aliasValidators[t]; found {

				if i == 0 {
					firstCtag, current = v.parseFieldTagsRecursive(tagsVal, fieldName, t, true)
				} else {
					next, curr := v.parseFieldTagsRecursive(tagsVal, fieldName, t, true)
					current.next, current = next, curr

				}

				continue
			}
		}

		if i == 0 {
			current = &cTag{aliasTag: alias, hasAlias: hasAlias, hasTag: true}
			firstCtag = current
		} else {
			current.next = &cTag{aliasTag: alias, hasAlias: hasAlias, hasTag: true}
			current = current.next
		}

		switch t {

		case diveTag:
			current.typeof = typeDive
			continue

		case omitempty:
			current.typeof = typeOmitEmpty
			continue

		case structOnlyTag:
			current.typeof = typeStructOnly
			continue

		case noStructLevelTag:
			current.typeof = typeNoStructLevel
			continue

		case existsTag:
			current.typeof = typeExists
			continue

		default:

			// if a pipe character is needed within the param you must use the utf8Pipe representation ""0x7C""
			orVals := strings.Split(t, orSeparator)

			for j := 0; j < len(orVals); j++ {

				vals := strings.SplitN(orVals[j], tagKeySeparator, 2)

				if noAlias {
					alias = vals[0]
					current.aliasTag = alias
				} else {
					current.actualAliasTag = t
				}

				if j > 0 {
					current.next = &cTag{aliasTag: alias, actualAliasTag: current.actualAliasTag, hasAlias: hasAlias, hasTag: true}
					current = current.next
				}

				current.tag = vals[0]
				if len(current.tag) == 0 {
					panic(strings.TrimSpace(fmt.Sprintf(invalidValidation, fieldName)))
				}

				if current.fn, ok = v.validationFuncs[current.tag]; !ok {
					panic(strings.TrimSpace(fmt.Sprintf(undefinedValidation, fieldName)))
				}

				if len(orVals) > 1 {
					current.typeof = typeOr
				}

				if len(vals) > 1 {
					current.param = strings.Replace(strings.Replace(vals[1], utf8HexComma, "","", -1), utf8Pipe, ""|"", -1)
				}
			}
		}
	}

	return
}
",cache,en,5800,go,code,"{""qsc_syntax_go"": 1}"
go,"// Copyright 2014 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package context defines the Context type, which carries deadlines,
// cancelation signals, and other request-scoped values across API boundaries
// and between processes.
//
// Incoming requests to a server should create a Context, and outgoing calls to
// servers should accept a Context.  The chain of function calls between must
// propagate the Context, optionally replacing it with a modified copy created
// using WithDeadline, WithTimeout, WithCancel, or WithValue.
//
// Programs that use Contexts should follow these rules to keep interfaces
// consistent across packages and enable static analysis tools to check context
// propagation:
//
// Do not store Contexts inside a struct type; instead, pass a Context
// explicitly to each function that needs it.  The Context should be the first
// parameter, typically named ctx:
//
// 	func DoSomething(ctx context.Context, arg Arg) error {
// 		// ... use ctx ...
// 	}
//
// Do not pass a nil Context, even if a function permits it.  Pass context.TODO
// if you are unsure about which Context to use.
//
// Use context Values only for request-scoped data that transits processes and
// APIs, not for passing optional parameters to functions.
//
// The same Context may be passed to functions running in different goroutines;
// Contexts are safe for simultaneous use by multiple goroutines.
//
// See http://blog.golang.org/context for example code for a server that uses
// Contexts.
package context // import ""golang.org/x/net/context""

import ""time""

// A Context carries a deadline, a cancelation signal, and other values across
// API boundaries.
//
// Context's methods may be called by multiple goroutines simultaneously.
type Context interface {
	// Deadline returns the time when work done on behalf of this context
	// should be canceled.  Deadline returns ok==false when no deadline is
	// set.  Successive calls to Deadline return the same results.
	Deadline() (deadline time.Time, ok bool)

	// Done returns a channel that's closed when work done on behalf of this
	// context should be canceled.  Done may return nil if this context can
	// never be canceled.  Successive calls to Done return the same value.
	//
	// WithCancel arranges for Done to be closed when cancel is called;
	// WithDeadline arranges for Done to be closed when the deadline
	// expires; WithTimeout arranges for Done to be closed when the timeout
	// elapses.
	//
	// Done is provided for use in select statements:
	//
	//  // Stream generates values with DoSomething and sends them to out
	//  // until DoSomething returns an error or ctx.Done is closed.
	//  func Stream(ctx context.Context, out chan<- Value) error {
	//  	for {
	//  		v, err := DoSomething(ctx)
	//  		if err != nil {
	//  			return err
	//  		}
	//  		select {
	//  		case <-ctx.Done():
	//  			return ctx.Err()
	//  		case out <- v:
	//  		}
	//  	}
	//  }
	//
	// See http://blog.golang.org/pipelines for more examples of how to use
	// a Done channel for cancelation.
	Done() <-chan struct{}

	// Err returns a non-nil error value after Done is closed.  Err returns
	// Canceled if the context was canceled or DeadlineExceeded if the
	// context's deadline passed.  No other values for Err are defined.
	// After Done is closed, successive calls to Err return the same value.
	Err() error

	// Value returns the value associated with this context for key, or nil
	// if no value is associated with key.  Successive calls to Value with
	// the same key returns the same result.
	//
	// Use context values only for request-scoped data that transits
	// processes and API boundaries, not for passing optional parameters to
	// functions.
	//
	// A key identifies a specific value in a Context.  Functions that wish
	// to store values in Context typically allocate a key in a global
	// variable then use that key as the argument to context.WithValue and
	// Context.Value.  A key can be any type that supports equality;
	// packages should define keys as an unexported type to avoid
	// collisions.
	//
	// Packages that define a Context key should provide type-safe accessors
	// for the values stores using that key:
	//
	// 	// Package user defines a User type that's stored in Contexts.
	// 	package user
	//
	// 	import ""golang.org/x/net/context""
	//
	// 	// User is the type of value stored in the Contexts.
	// 	type User struct {...}
	//
	// 	// key is an unexported type for keys defined in this package.
	// 	// This prevents collisions with keys defined in other packages.
	// 	type key int
	//
	// 	// userKey is the key for user.User values in Contexts.  It is
	// 	// unexported; clients use user.NewContext and user.FromContext
	// 	// instead of using this key directly.
	// 	var userKey key = 0
	//
	// 	// NewContext returns a new Context that carries value u.
	// 	func NewContext(ctx context.Context, u *User) context.Context {
	// 		return context.WithValue(ctx, userKey, u)
	// 	}
	//
	// 	// FromContext returns the User value stored in ctx, if any.
	// 	func FromContext(ctx context.Context) (*User, bool) {
	// 		u, ok := ctx.Value(userKey).(*User)
	// 		return u, ok
	// 	}
	Value(key interface{}) interface{}
}

// Background returns a non-nil, empty Context. It is never canceled, has no
// values, and has no deadline.  It is typically used by the main function,
// initialization, and tests, and as the top-level Context for incoming
// requests.
func Background() Context {
	return background
}

// TODO returns a non-nil, empty Context.  Code should use context.TODO when
// it's unclear which Context to use or it is not yet available (because the
// surrounding function has not yet been extended to accept a Context
// parameter).  TODO is recognized by static analysis tools that determine
// whether Contexts are propagated correctly in a program.
func TODO() Context {
	return todo
}

// A CancelFunc tells an operation to abandon its work.
// A CancelFunc does not wait for the work to stop.
// After the first call, subsequent calls to a CancelFunc do nothing.
type CancelFunc func()
",context,en,6362,go,code,"{""qsc_syntax_go"": 1}"
go,"package turtle

import ""strings""

// filter a given slice of Emoji by f
func filter(emojis []*Emoji, f func(e *Emoji) bool) []*Emoji {
	var r []*Emoji
	for _, e := range emojis {
		if f(e) {
			r = append(r, e)
		}
	}
	return r
}

// category filters a slice of Emoji by Category
func category(emojis []*Emoji, c string) []*Emoji {
	return filter(emojis, func(e *Emoji) bool {
		return e.Category == c
	})
}

// keyword filters a slice of Emoji by Keywords
func keyword(emojis []*Emoji, k string) []*Emoji {
	return filter(emojis, func(e *Emoji) bool {
		for _, keyword := range e.Keywords {
			if keyword == k {
				return true
			}
		}
		return false
	})
}

// search Emoji in a slice by Name
func search(emojis []*Emoji, s string) []*Emoji {
	return filter(emojis, func(e *Emoji) bool {
		return strings.Contains(e.Name, s)
	})
}
",filters,en,873,go,code,"{""qsc_syntax_go"": 1}"
go,"package model

type ProjectList struct {
	Address		string 		`json:""href""`
	ItemsList	[]Item 		`json:""items""`
}

type Item struct {
	Id 			string 		`json:""id""`
	Name 		string		`json:""name""`
}",project_list,el,200,go,code,"{""qsc_syntax_go"": 0}"
go,"// Copyright (C) 2014 Yasuhiro Matsumoto <mattn.jp@gmail.com>.
//
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file.

// +build go1.8

package sqlite3

import (
	""database/sql/driver""
	""errors""

	""context""
)

// Ping implement Pinger.
func (c *SQLiteConn) Ping(ctx context.Context) error {
	if c.db == nil {
		return errors.New(""Connection was closed"")
	}
	return nil
}

// QueryContext implement QueryerContext.
func (c *SQLiteConn) QueryContext(ctx context.Context, query string, args []driver.NamedValue) (driver.Rows, error) {
	list := make([]namedValue, len(args))
	for i, nv := range args {
		list[i] = namedValue(nv)
	}
	return c.query(ctx, query, list)
}

// ExecContext implement ExecerContext.
func (c *SQLiteConn) ExecContext(ctx context.Context, query string, args []driver.NamedValue) (driver.Result, error) {
	list := make([]namedValue, len(args))
	for i, nv := range args {
		list[i] = namedValue(nv)
	}
	return c.exec(ctx, query, list)
}

// PrepareContext implement ConnPrepareContext.
func (c *SQLiteConn) PrepareContext(ctx context.Context, query string) (driver.Stmt, error) {
	return c.prepare(ctx, query)
}

// BeginTx implement ConnBeginTx.
func (c *SQLiteConn) BeginTx(ctx context.Context, opts driver.TxOptions) (driver.Tx, error) {
	return c.begin(ctx)
}

// QueryContext implement QueryerContext.
func (s *SQLiteStmt) QueryContext(ctx context.Context, args []driver.NamedValue) (driver.Rows, error) {
	list := make([]namedValue, len(args))
	for i, nv := range args {
		list[i] = namedValue(nv)
	}
	return s.query(ctx, list)
}

// ExecContext implement ExecerContext.
func (s *SQLiteStmt) ExecContext(ctx context.Context, args []driver.NamedValue) (driver.Result, error) {
	list := make([]namedValue, len(args))
	for i, nv := range args {
		list[i] = namedValue(nv)
	}
	return s.exec(ctx, list)
}
",sqlite3_go18,en,1946,go,code,"{""qsc_syntax_go"": 1}"
go,"package request

import uuid ""github.com/satori/go.uuid""

// User register structure
type RegisterStruct struct {
	Username    string `json:""userName""`
	Password    string `json:""passWord""`
	NickName    string `json:""nickName"" gorm:""default:'QMPlusUser'""`
	HeaderImg   string `json:""headerImg"" gorm:""default:'http://www.henrongyi.top/avatar/lufu.jpg'""`
	AuthorityId string `json:""authorityId"" gorm:""default:888""`
}

// User login structure
type RegisterAndLoginStruct struct {
	Username  string `json:""username""`
	Password  string `json:""password""`
	//Captcha   string `json:""captcha""`
	//CaptchaId string `json:""captchaId""`
}

// Modify password structure
type ChangePasswordStruct struct {
	Username    string `json:""username""`
	Password    string `json:""password""`
	NewPassword string `json:""newPassword""`
}

// Modify  user's auth structure
type SetUserAuth struct {
	UUID        uuid.UUID `json:""uuid""`
	AuthorityId string    `json:""authorityId""`
}
",sys_user,en,987,go,code,"{""qsc_syntax_go"": 1}"
go,"package reflect2

import (
	""reflect""
	""unsafe""
)

type eface struct {
	rtype unsafe.Pointer
	data  unsafe.Pointer
}

func unpackEFace(obj interface{}) *eface {
	return (*eface)(unsafe.Pointer(&obj))
}

func packEFace(rtype unsafe.Pointer, data unsafe.Pointer) interface{} {
	var i interface{}
	e := (*eface)(unsafe.Pointer(&i))
	e.rtype = rtype
	e.data = data
	return i
}

type UnsafeEFaceType struct {
	unsafeType
}

func newUnsafeEFaceType(cfg *frozenConfig, type1 reflect.Type) *UnsafeEFaceType {
	return &UnsafeEFaceType{
		unsafeType: *newUnsafeType(cfg, type1),
	}
}

func (type2 *UnsafeEFaceType) IsNil(obj interface{}) bool {
	if obj == nil {
		return true
	}
	objEFace := unpackEFace(obj)
	assertType(""Type.IsNil argument 1"", type2.ptrRType, objEFace.rtype)
	return type2.UnsafeIsNil(objEFace.data)
}

func (type2 *UnsafeEFaceType) UnsafeIsNil(ptr unsafe.Pointer) bool {
	if ptr == nil {
		return true
	}
	return unpackEFace(*(*interface{})(ptr)).data == nil
}

func (type2 *UnsafeEFaceType) Indirect(obj interface{}) interface{} {
	objEFace := unpackEFace(obj)
	assertType(""Type.Indirect argument 1"", type2.ptrRType, objEFace.rtype)
	return type2.UnsafeIndirect(objEFace.data)
}

func (type2 *UnsafeEFaceType) UnsafeIndirect(ptr unsafe.Pointer) interface{} {
	return *(*interface{})(ptr)
}
",unsafe_eface,en,1360,go,code,"{""qsc_syntax_go"": 1}"
go,"// Copyright 2014 Manu Martinez-Almeida.  All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file.

package gin

import (
	""encoding/xml""
	""net/http""
	""os""
	""path""
	""reflect""
	""runtime""
	""strings""
)

const BindKey = ""_gin-gonic/gin/bindkey""

func Bind(val interface{}) HandlerFunc {
	value := reflect.ValueOf(val)
	if value.Kind() == reflect.Ptr {
		panic(`Bind struct can not be a pointer. Example:
	Use: gin.Bind(Struct{}) instead of gin.Bind(&Struct{})
`)
	}
	typ := value.Type()

	return func(c *Context) {
		obj := reflect.New(typ).Interface()
		if c.Bind(obj) == nil {
			c.Set(BindKey, obj)
		}
	}
}

func WrapF(f http.HandlerFunc) HandlerFunc {
	return func(c *Context) {
		f(c.Writer, c.Request)
	}
}

func WrapH(h http.Handler) HandlerFunc {
	return func(c *Context) {
		h.ServeHTTP(c.Writer, c.Request)
	}
}

type H map[string]interface{}

// MarshalXML allows type H to be used with xml.Marshal.
func (h H) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	start.Name = xml.Name{
		Space: """",
		Local: ""map"",
	}
	if err := e.EncodeToken(start); err != nil {
		return err
	}
	for key, value := range h {
		elem := xml.StartElement{
			Name: xml.Name{Space: """", Local: key},
			Attr: []xml.Attr{},
		}
		if err := e.EncodeElement(value, elem); err != nil {
			return err
		}
	}
	if err := e.EncodeToken(xml.EndElement{Name: start.Name}); err != nil {
		return err
	}
	return nil
}

func assert1(guard bool, text string) {
	if !guard {
		panic(text)
	}
}

func filterFlags(content string) string {
	for i, char := range content {
		if char == ' ' || char == ';' {
			return content[:i]
		}
	}
	return content
}

func chooseData(custom, wildcard interface{}) interface{} {
	if custom == nil {
		if wildcard == nil {
			panic(""negotiation config is invalid"")
		}
		return wildcard
	}
	return custom
}

func parseAccept(acceptHeader string) []string {
	parts := strings.Split(acceptHeader, "","")
	out := make([]string, 0, len(parts))
	for _, part := range parts {
		if index := strings.IndexByte(part, ';'); index >= 0 {
			part = part[0:index]
		}
		if part = strings.TrimSpace(part); part != """" {
			out = append(out, part)
		}
	}
	return out
}

func lastChar(str string) uint8 {
	if str == """" {
		panic(""The length of the string can't be 0"")
	}
	return str[len(str)-1]
}

func nameOfFunction(f interface{}) string {
	return runtime.FuncForPC(reflect.ValueOf(f).Pointer()).Name()
}

func joinPaths(absolutePath, relativePath string) string {
	if relativePath == """" {
		return absolutePath
	}

	finalPath := path.Join(absolutePath, relativePath)
	appendSlash := lastChar(relativePath) == '/' && lastChar(finalPath) != '/'
	if appendSlash {
		return finalPath + ""/""
	}
	return finalPath
}

func resolveAddress(addr []string) string {
	switch len(addr) {
	case 0:
		if port := os.Getenv(""PORT""); port != """" {
			debugPrint(""Environment variable PORT=\""%s\"""", port)
			return "":"" + port
		}
		debugPrint(""Environment variable PORT is undefined. Using port :8080 by default"")
		return "":8080""
	case 1:
		return addr[0]
	default:
		panic(""too much parameters"")
	}
}
",utils,en,3296,go,code,"{""qsc_syntax_go"": 1}"
go,"package gcache

func minInt(x, y int) int {
	if x < y {
		return x
	}
	return y
}

func maxInt(x, y int) int {
	if x > y {
		return x
	}
	return y
}
",utils_1,es,164,go,code,"{""qsc_syntax_go"": 1}"
go,"// mksysnum_darwin.pl /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/sys/syscall.h
// MACHINE GENERATED BY THE ABOVE COMMAND; DO NOT EDIT

// +build amd64,darwin

package unix

const (
	SYS_SYSCALL                        = 0
	SYS_EXIT                           = 1
	SYS_FORK                           = 2
	SYS_READ                           = 3
	SYS_WRITE                          = 4
	SYS_OPEN                           = 5
	SYS_CLOSE                          = 6
	SYS_WAIT4                          = 7
	SYS_LINK                           = 9
	SYS_UNLINK                         = 10
	SYS_CHDIR                          = 12
	SYS_FCHDIR                         = 13
	SYS_MKNOD                          = 14
	SYS_CHMOD                          = 15
	SYS_CHOWN                          = 16
	SYS_GETFSSTAT                      = 18
	SYS_GETPID                         = 20
	SYS_SETUID                         = 23
	SYS_GETUID                         = 24
	SYS_GETEUID                        = 25
	SYS_PTRACE                         = 26
	SYS_RECVMSG                        = 27
	SYS_SENDMSG                        = 28
	SYS_RECVFROM                       = 29
	SYS_ACCEPT                         = 30
	SYS_GETPEERNAME                    = 31
	SYS_GETSOCKNAME                    = 32
	SYS_ACCESS                         = 33
	SYS_CHFLAGS                        = 34
	SYS_FCHFLAGS                       = 35
	SYS_SYNC                           = 36
	SYS_KILL                           = 37
	SYS_GETPPID                        = 39
	SYS_DUP                            = 41
	SYS_PIPE                           = 42
	SYS_GETEGID                        = 43
	SYS_SIGACTION                      = 46
	SYS_GETGID                         = 47
	SYS_SIGPROCMASK                    = 48
	SYS_GETLOGIN                       = 49
	SYS_SETLOGIN                       = 50
	SYS_ACCT                           = 51
	SYS_SIGPENDING                     = 52
	SYS_SIGALTSTACK                    = 53
	SYS_IOCTL                          = 54
	SYS_REBOOT                         = 55
	SYS_REVOKE                         = 56
	SYS_SYMLINK                        = 57
	SYS_READLINK                       = 58
	SYS_EXECVE                         = 59
	SYS_UMASK                          = 60
	SYS_CHROOT                         = 61
	SYS_MSYNC                          = 65
	SYS_VFORK                          = 66
	SYS_MUNMAP                         = 73
	SYS_MPROTECT                       = 74
	SYS_MADVISE                        = 75
	SYS_MINCORE                        = 78
	SYS_GETGROUPS                      = 79
	SYS_SETGROUPS                      = 80
	SYS_GETPGRP                        = 81
	SYS_SETPGID                        = 82
	SYS_SETITIMER                      = 83
	SYS_SWAPON                         = 85
	SYS_GETITIMER                      = 86
	SYS_GETDTABLESIZE                  = 89
	SYS_DUP2                           = 90
	SYS_FCNTL                          = 92
	SYS_SELECT                         = 93
	SYS_FSYNC                          = 95
	SYS_SETPRIORITY                    = 96
	SYS_SOCKET                         = 97
	SYS_CONNECT                        = 98
	SYS_GETPRIORITY                    = 100
	SYS_BIND                           = 104
	SYS_SETSOCKOPT                     = 105
	SYS_LISTEN                         = 106
	SYS_SIGSUSPEND                     = 111
	SYS_GETTIMEOFDAY                   = 116
	SYS_GETRUSAGE                      = 117
	SYS_GETSOCKOPT                     = 118
	SYS_READV                          = 120
	SYS_WRITEV                         = 121
	SYS_SETTIMEOFDAY                   = 122
	SYS_FCHOWN                         = 123
	SYS_FCHMOD                         = 124
	SYS_SETREUID                       = 126
	SYS_SETREGID                       = 127
	SYS_RENAME                         = 128
	SYS_FLOCK                          = 131
	SYS_MKFIFO                         = 132
	SYS_SENDTO                         = 133
	SYS_SHUTDOWN                       = 134
	SYS_SOCKETPAIR                     = 135
	SYS_MKDIR                          = 136
	SYS_RMDIR                          = 137
	SYS_UTIMES                         = 138
	SYS_FUTIMES                        = 139
	SYS_ADJTIME                        = 140
	SYS_GETHOSTUUID                    = 142
	SYS_SETSID                         = 147
	SYS_GETPGID                        = 151
	SYS_SETPRIVEXEC                    = 152
	SYS_PREAD                          = 153
	SYS_PWRITE                         = 154
	SYS_NFSSVC                         = 155
	SYS_STATFS                         = 157
	SYS_FSTATFS                        = 158
	SYS_UNMOUNT                        = 159
	SYS_GETFH                          = 161
	SYS_QUOTACTL                       = 165
	SYS_MOUNT                          = 167
	SYS_CSOPS                          = 169
	SYS_CSOPS_AUDITTOKEN               = 170
	SYS_WAITID                         = 173
	SYS_KDEBUG_TRACE64                 = 179
	SYS_KDEBUG_TRACE                   = 180
	SYS_SETGID                         = 181
	SYS_SETEGID                        = 182
	SYS_SETEUID                        = 183
	SYS_SIGRETURN                      = 184
	SYS_CHUD                           = 185
	SYS_FDATASYNC                      = 187
	SYS_STAT                           = 188
	SYS_FSTAT                          = 189
	SYS_LSTAT                          = 190
	SYS_PATHCONF                       = 191
	SYS_FPATHCONF                      = 192
	SYS_GETRLIMIT                      = 194
	SYS_SETRLIMIT                      = 195
	SYS_GETDIRENTRIES                  = 196
	SYS_MMAP                           = 197
	SYS_LSEEK                          = 199
	SYS_TRUNCATE                       = 200
	SYS_FTRUNCATE                      = 201
	SYS_SYSCTL                         = 202
	SYS_MLOCK                          = 203
	SYS_MUNLOCK                        = 204
	SYS_UNDELETE                       = 205
	SYS_OPEN_DPROTECTED_NP             = 216
	SYS_GETATTRLIST                    = 220
	SYS_SETATTRLIST                    = 221
	SYS_GETDIRENTRIESATTR              = 222
	SYS_EXCHANGEDATA                   = 223
	SYS_SEARCHFS                       = 225
	SYS_DELETE                         = 226
	SYS_COPYFILE                       = 227
	SYS_FGETATTRLIST                   = 228
	SYS_FSETATTRLIST                   = 229
	SYS_POLL                           = 230
	SYS_WATCHEVENT                     = 231
	SYS_WAITEVENT                      = 232
	SYS_MODWATCH                       = 233
	SYS_GETXATTR                       = 234
	SYS_FGETXATTR                      = 235
	SYS_SETXATTR                       = 236
	SYS_FSETXATTR                      = 237
	SYS_REMOVEXATTR                    = 238
	SYS_FREMOVEXATTR                   = 239
	SYS_LISTXATTR                      = 240
	SYS_FLISTXATTR                     = 241
	SYS_FSCTL                          = 242
	SYS_INITGROUPS                     = 243
	SYS_POSIX_SPAWN                    = 244
	SYS_FFSCTL                         = 245
	SYS_NFSCLNT                        = 247
	SYS_FHOPEN                         = 248
	SYS_MINHERIT                       = 250
	SYS_SEMSYS                         = 251
	SYS_MSGSYS                         = 252
	SYS_SHMSYS                         = 253
	SYS_SEMCTL                         = 254
	SYS_SEMGET                         = 255
	SYS_SEMOP                          = 256
	SYS_MSGCTL                         = 258
	SYS_MSGGET                         = 259
	SYS_MSGSND                         = 260
	SYS_MSGRCV                         = 261
	SYS_SHMAT                          = 262
	SYS_SHMCTL                         = 263
	SYS_SHMDT                          = 264
	SYS_SHMGET                         = 265
	SYS_SHM_OPEN                       = 266
	SYS_SHM_UNLINK                     = 267
	SYS_SEM_OPEN                       = 268
	SYS_SEM_CLOSE                      = 269
	SYS_SEM_UNLINK                     = 270
	SYS_SEM_WAIT                       = 271
	SYS_SEM_TRYWAIT                    = 272
	SYS_SEM_POST                       = 273
	SYS_SYSCTLBYNAME                   = 274
	SYS_OPEN_EXTENDED                  = 277
	SYS_UMASK_EXTENDED                 = 278
	SYS_STAT_EXTENDED                  = 279
	SYS_LSTAT_EXTENDED                 = 280
	SYS_FSTAT_EXTENDED                 = 281
	SYS_CHMOD_EXTENDED                 = 282
	SYS_FCHMOD_EXTENDED                = 283
	SYS_ACCESS_EXTENDED                = 284
	SYS_SETTID                         = 285
	SYS_GETTID                         = 286
	SYS_SETSGROUPS                     = 287
	SYS_GETSGROUPS                     = 288
	SYS_SETWGROUPS                     = 289
	SYS_GETWGROUPS                     = 290
	SYS_MKFIFO_EXTENDED                = 291
	SYS_MKDIR_EXTENDED                 = 292
	SYS_IDENTITYSVC                    = 293
	SYS_SHARED_REGION_CHECK_NP         = 294
	SYS_VM_PRESSURE_MONITOR            = 296
	SYS_PSYNCH_RW_LONGRDLOCK           = 297
	SYS_PSYNCH_RW_YIELDWRLOCK          = 298
	SYS_PSYNCH_RW_DOWNGRADE            = 299
	SYS_PSYNCH_RW_UPGRADE              = 300
	SYS_PSYNCH_MUTEXWAIT               = 301
	SYS_PSYNCH_MUTEXDROP               = 302
	SYS_PSYNCH_CVBROAD                 = 303
	SYS_PSYNCH_CVSIGNAL                = 304
	SYS_PSYNCH_CVWAIT                  = 305
	SYS_PSYNCH_RW_RDLOCK               = 306
	SYS_PSYNCH_RW_WRLOCK               = 307
	SYS_PSYNCH_RW_UNLOCK               = 308
	SYS_PSYNCH_RW_UNLOCK2              = 309
	SYS_GETSID                         = 310
	SYS_SETTID_WITH_PID                = 311
	SYS_PSYNCH_CVCLRPREPOST            = 312
	SYS_AIO_FSYNC                      = 313
	SYS_AIO_RETURN                     = 314
	SYS_AIO_SUSPEND                    = 315
	SYS_AIO_CANCEL                     = 316
	SYS_AIO_ERROR                      = 317
	SYS_AIO_READ                       = 318
	SYS_AIO_WRITE                      = 319
	SYS_LIO_LISTIO                     = 320
	SYS_IOPOLICYSYS                    = 322
	SYS_PROCESS_POLICY                 = 323
	SYS_MLOCKALL                       = 324
	SYS_MUNLOCKALL                     = 325
	SYS_ISSETUGID                      = 327
	SYS___PTHREAD_KILL                 = 328
	SYS___PTHREAD_SIGMASK              = 329
	SYS___SIGWAIT                      = 330
	SYS___DISABLE_THREADSIGNAL         = 331
	SYS___PTHREAD_MARKCANCEL           = 332
	SYS___PTHREAD_CANCELED             = 333
	SYS___SEMWAIT_SIGNAL               = 334
	SYS_PROC_INFO                      = 336
	SYS_SENDFILE                       = 337
	SYS_STAT64                         = 338
	SYS_FSTAT64                        = 339
	SYS_LSTAT64                        = 340
	SYS_STAT64_EXTENDED                = 341
	SYS_LSTAT64_EXTENDED               = 342
	SYS_FSTAT64_EXTENDED               = 343
	SYS_GETDIRENTRIES64                = 344
	SYS_STATFS64                       = 345
	SYS_FSTATFS64                      = 346
	SYS_GETFSSTAT64                    = 347
	SYS___PTHREAD_CHDIR                = 348
	SYS___PTHREAD_FCHDIR               = 349
	SYS_AUDIT                          = 350
	SYS_AUDITON                        = 351
	SYS_GETAUID                        = 353
	SYS_SETAUID                        = 354
	SYS_GETAUDIT_ADDR                  = 357
	SYS_SETAUDIT_ADDR                  = 358
	SYS_AUDITCTL                       = 359
	SYS_BSDTHREAD_CREATE               = 360
	SYS_BSDTHREAD_TERMINATE            = 361
	SYS_KQUEUE                         = 362
	SYS_KEVENT                         = 363
	SYS_LCHOWN                         = 364
	SYS_STACK_SNAPSHOT                 = 365
	SYS_BSDTHREAD_REGISTER             = 366
	SYS_WORKQ_OPEN                     = 367
	SYS_WORKQ_KERNRETURN               = 368
	SYS_KEVENT64                       = 369
	SYS___OLD_SEMWAIT_SIGNAL           = 370
	SYS___OLD_SEMWAIT_SIGNAL_NOCANCEL  = 371
	SYS_THREAD_SELFID                  = 372
	SYS_LEDGER                         = 373
	SYS___MAC_EXECVE                   = 380
	SYS___MAC_SYSCALL                  = 381
	SYS___MAC_GET_FILE                 = 382
	SYS___MAC_SET_FILE                 = 383
	SYS___MAC_GET_LINK                 = 384
	SYS___MAC_SET_LINK                 = 385
	SYS___MAC_GET_PROC                 = 386
	SYS___MAC_SET_PROC                 = 387
	SYS___MAC_GET_FD                   = 388
	SYS___MAC_SET_FD                   = 389
	SYS___MAC_GET_PID                  = 390
	SYS___MAC_GET_LCID                 = 391
	SYS___MAC_GET_LCTX                 = 392
	SYS___MAC_SET_LCTX                 = 393
	SYS_SETLCID                        = 394
	SYS_GETLCID                        = 395
	SYS_READ_NOCANCEL                  = 396
	SYS_WRITE_NOCANCEL                 = 397
	SYS_OPEN_NOCANCEL                  = 398
	SYS_CLOSE_NOCANCEL                 = 399
	SYS_WAIT4_NOCANCEL                 = 400
	SYS_RECVMSG_NOCANCEL               = 401
	SYS_SENDMSG_NOCANCEL               = 402
	SYS_RECVFROM_NOCANCEL              = 403
	SYS_ACCEPT_NOCANCEL                = 404
	SYS_MSYNC_NOCANCEL                 = 405
	SYS_FCNTL_NOCANCEL                 = 406
	SYS_SELECT_NOCANCEL                = 407
	SYS_FSYNC_NOCANCEL                 = 408
	SYS_CONNECT_NOCANCEL               = 409
	SYS_SIGSUSPEND_NOCANCEL            = 410
	SYS_READV_NOCANCEL                 = 411
	SYS_WRITEV_NOCANCEL                = 412
	SYS_SENDTO_NOCANCEL                = 413
	SYS_PREAD_NOCANCEL                 = 414
	SYS_PWRITE_NOCANCEL                = 415
	SYS_WAITID_NOCANCEL                = 416
	SYS_POLL_NOCANCEL                  = 417
	SYS_MSGSND_NOCANCEL                = 418
	SYS_MSGRCV_NOCANCEL                = 419
	SYS_SEM_WAIT_NOCANCEL              = 420
	SYS_AIO_SUSPEND_NOCANCEL           = 421
	SYS___SIGWAIT_NOCANCEL             = 422
	SYS___SEMWAIT_SIGNAL_NOCANCEL      = 423
	SYS___MAC_MOUNT                    = 424
	SYS___MAC_GET_MOUNT                = 425
	SYS___MAC_GETFSSTAT                = 426
	SYS_FSGETPATH                      = 427
	SYS_AUDIT_SESSION_SELF             = 428
	SYS_AUDIT_SESSION_JOIN             = 429
	SYS_FILEPORT_MAKEPORT              = 430
	SYS_FILEPORT_MAKEFD                = 431
	SYS_AUDIT_SESSION_PORT             = 432
	SYS_PID_SUSPEND                    = 433
	SYS_PID_RESUME                     = 434
	SYS_PID_HIBERNATE                  = 435
	SYS_PID_SHUTDOWN_SOCKETS           = 436
	SYS_SHARED_REGION_MAP_AND_SLIDE_NP = 438
	SYS_KAS_INFO                       = 439
	SYS_MEMORYSTATUS_CONTROL           = 440
	SYS_GUARDED_OPEN_NP                = 441
	SYS_GUARDED_CLOSE_NP               = 442
	SYS_GUARDED_KQUEUE_NP              = 443
	SYS_CHANGE_FDGUARD_NP              = 444
	SYS_PROC_RLIMIT_CONTROL            = 446
	SYS_CONNECTX                       = 447
	SYS_DISCONNECTX                    = 448
	SYS_PEELOFF                        = 449
	SYS_SOCKET_DELEGATE                = 450
	SYS_TELEMETRY                      = 451
	SYS_PROC_UUID_POLICY               = 452
	SYS_MEMORYSTATUS_GET_LEVEL         = 453
	SYS_SYSTEM_OVERRIDE                = 454
	SYS_VFS_PURGE                      = 455
	SYS_SFI_CTL                        = 456
	SYS_SFI_PIDCTL                     = 457
	SYS_COALITION                      = 458
	SYS_COALITION_INFO                 = 459
	SYS_NECP_MATCH_POLICY              = 460
	SYS_GETATTRLISTBULK                = 461
	SYS_OPENAT                         = 463
	SYS_OPENAT_NOCANCEL                = 464
	SYS_RENAMEAT                       = 465
	SYS_FACCESSAT                      = 466
	SYS_FCHMODAT                       = 467
	SYS_FCHOWNAT                       = 468
	SYS_FSTATAT                        = 469
	SYS_FSTATAT64                      = 470
	SYS_LINKAT                         = 471
	SYS_UNLINKAT                       = 472
	SYS_READLINKAT                     = 473
	SYS_SYMLINKAT                      = 474
	SYS_MKDIRAT                        = 475
	SYS_GETATTRLISTAT                  = 476
	SYS_PROC_TRACE_LOG                 = 477
	SYS_BSDTHREAD_CTL                  = 478
	SYS_OPENBYID_NP                    = 479
	SYS_RECVMSG_X                      = 480
	SYS_SENDMSG_X                      = 481
	SYS_THREAD_SELFUSAGE               = 482
	SYS_CSRCTL                         = 483
	SYS_GUARDED_OPEN_DPROTECTED_NP     = 484
	SYS_GUARDED_WRITE_NP               = 485
	SYS_GUARDED_PWRITE_NP              = 486
	SYS_GUARDED_WRITEV_NP              = 487
	SYS_RENAME_EXT                     = 488
	SYS_MREMAP_ENCRYPTED               = 489
	SYS_MAXSYSCALL                     = 490
)
",zsysnum_darwin_amd64,en,16906,go,code,"{""qsc_syntax_go"": 1}"
html,"<!--

     Licensed to the Apache Software Foundation (ASF) under one
     or more contributor license agreements.  See the NOTICE file
     distributed with this work for additional information
     regarding copyright ownership.  The ASF licenses this file
     to you under the Apache License, Version 2.0 (the
     ""License""); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing,
     software distributed under the License is distributed on an
     ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
     KIND, either express or implied.  See the License for the
     specific language governing permissions and limitations
     under the License.

-->
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- **************************************************************** -->
<!-- *  PLEASE KEEP COMPLICATED EXPRESSIONS OUT OF THESE TEMPLATES, * -->
<!-- *  i.e. only iterate & print data where possible. Thanks, Jez. * -->
<!-- **************************************************************** -->

<html>
<head>
    <!-- Generated by groovydoc (2.4.4) on Mon Dec 21 22:21:43 CET 2015 -->
    <title>AntlrPlugin (Gradle API 2.10)</title>
    <meta name=""date"" content=""2015-12-21"">
    <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
    <link href=""../../../../../groovy.ico"" type=""image/x-icon"" rel=""shortcut icon"">
    <link href=""../../../../../groovy.ico"" type=""image/x-icon"" rel=""icon"">
    <link rel=""stylesheet"" type=""text/css"" href=""../../../../../stylesheet.css"" title=""Style"">

<body class=""center"">
<script type=""text/javascript""><!--
if (location.href.indexOf('is-external=true') == -1) {
    parent.document.title=""AntlrPlugin (Gradle API 2.10)"";
}
//-->
</script>
<noscript>
    <div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class=""topNav""><a name=""navbar_top"">
    <!--   -->
</a><a href=""#skip-navbar_top"" title=""Skip navigation links""></a><a name=""navbar_top_firstrow"">
    <!--   -->
</a>
    <ul class=""navList"" title=""Navigation"">
        <li><a href=""../../../../../overview-summary.html"">Overview</a></li>
        <li><a href=""package-summary.html"">Package</a></li>
        <li class=""navBarCell1Rev"">Class</li>
        <li><a href=""../../../../../deprecated-list.html"">Deprecated</a></li>
        <li><a href=""../../../../../index-all.html"">Index</a></li>
        <li><a href=""../../../../../help-doc.html"">Help</a></li>
    </ul>
</div>

<div class=""subNav"">
    <div>
        <ul class=""navList"">
            <li><a href=""../../../../../index.html?org/gradle/api/plugins/antlr/AntlrPlugin"" target=""_top"">Frames</a></li>
            <li><a href=""AntlrPlugin.html"" target=""_top"">No Frames</a></li>
        </ul>
    </div>
    <div>
        <ul class=""subNavList"">
            <li>Summary:&nbsp;</li>
            Nested&nbsp;&nbsp;&nbsp;<li><a href=""#field_summary"">Field</a></li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<li><a href=""#constructor_summary"">Constructor</a></li>&nbsp;&nbsp;&nbsp;<li><a href=""#method_summary"">Method</a></li>&nbsp;&nbsp;&nbsp;
        </ul>
        <ul class=""subNavList"">
            <li>&nbsp;|&nbsp;Detail:&nbsp;</li>
            <li><a href=""#field_detail"">Field</a></li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<li><a href=""#constructor_detail"">Constructor</a></li>&nbsp;&nbsp;&nbsp;<li><a href=""#method_detail"">Method</a></li>&nbsp;&nbsp;&nbsp;
        </ul>
    </div>
    <a name=""skip-navbar_top"">
        <!--   -->
    </a></div>
<!-- ========= END OF TOP NAVBAR ========= -->

<!-- ======== START OF CLASS DATA ======== -->
<div class=""header"">

    <div class=""subTitle"">Package: <strong>org.gradle.api.plugins.antlr</strong></div>

    <h2 title=""[Java] Class AntlrPlugin"" class=""title"">[Java] Class AntlrPlugin</h2>
</div>
<div class=""contentContainer"">
<ul class=""inheritance"">
<li><ul class=""inheritance""></ul></li><li>org.gradle.api.plugins.antlr.AntlrPlugin
</ul>
<div class=""description"">
    <ul class=""blockList"">
        <li class=""blockList"">

            <dl>
                <dt>All Implemented Interfaces and Traits:</dt>
                <dd><a href='../../../../../org/gradle/api/Plugin.html'>Plugin</a></dd>
            </dl>
            <!-- todo: direct known subclasses -->
            <hr>
            <br>
<pre>public&nbsp;class AntlrPlugin
extends <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html' title='Object'>Object</a>

</pre>



    <p> A plugin for adding Antlr support to <a href='../../../../../org/gradle/api/plugins/JavaPlugin.html' title='java projects'>java projects</a>.
 </p>

          </li>
    </ul>
</div>

<div class=""summary"">
    <ul class=""blockList"">
        <li class=""blockList"">
        <!-- =========== NESTED CLASS SUMMARY =========== -->
        

        <!-- =========== ENUM CONSTANT SUMMARY =========== -->
        
        <!-- =========== FIELD SUMMARY =========== -->
        
            <ul class=""blockList"">
                <li class=""blockList""><a name=""field_summary""><!--   --></a>
                    <h3>Field Summary</h3>
                    <ul class=""blockList"">
                    <table class=""overviewSummary"" border=""0"" cellpadding=""3"" cellspacing=""0"" summary=""Enum constants summary table"">
                        <caption><span>Fields</span><span class=""tabEnd"">&nbsp;</span></caption>
                        <tr>
                            <th class=""colFirst"" scope=""col"">Modifiers</th>
                            <th class=""colLast"" scope=""col"">Name</th>
                            <th class=""colLast"" scope=""col"">Description</th>
                        </tr>
                        
                        <tr class=""altColor"">
                            <td class=""colFirst""><code><strong>static&nbsp;<a href='https://docs.oracle.com/javase/6/docs/api/java/lang/String.html' title='String'>String</a></strong></code>&nbsp;</td>
                            <td class=""colLast""><code><a href=""#ANTLR_CONFIGURATION_NAME"">ANTLR_CONFIGURATION_NAME</a></code></td>
                            <td class=""colLast""></code></td>
                        </tr>
                        
                    </table>
                   </ul>
                </li>
                
            </ul>
        

        <!-- =========== PROPERTY SUMMARY =========== -->
        

        <!-- =========== ELEMENT SUMMARY =========== -->
        

        
        <!-- ======== CONSTRUCTOR SUMMARY ======== -->
        <ul class=""blockList"">
                <li class=""blockList""><a name=""constructor_summary""><!--   --></a>
                    <h3>Constructor Summary</h3>
                    <ul class=""blockList"">
                    <table class=""overviewSummary"" border=""0"" cellpadding=""3"" cellspacing=""0"" summary=""Constructors Summary table"">
                        <caption><span>Constructors</span><span class=""tabEnd"">&nbsp;</span></caption>
                        <tr>
                            <th class=""colFirst"" scope=""col"">Constructor and description</th>
                        </tr>
                        
                        <tr class=""altColor"">
                            <td class=""colFirst"">
                                <code><a href=""#AntlrPlugin(org.gradle.api.internal.file.FileResolver)"">AntlrPlugin</a></strong>
                                (org.gradle.api.internal.file.FileResolver fileResolver)</code><br></td>
                        </tr>
                        
                    </table>
                   </ul>
              </li>
        </ul>
        

        
        <!-- ========== METHOD SUMMARY =========== -->
        <ul class=""blockList"">
            
            <li class=""blockList""><a name=""method_summary""><!--   --></a>
                    <h3>Methods Summary</h3>
                    <ul class=""blockList"">
                    <table class=""overviewSummary"" border=""0"" cellpadding=""3"" cellspacing=""0"" summary=""Methods Summary table"">
                        <caption><span>Methods</span><span class=""tabEnd"">&nbsp;</span></caption>
                        <tr>
                            <th class=""colFirst"" scope=""col"">Type</th>
                            <th class=""colLast"" scope=""col"">Name and description</th>
                        </tr>
                        
                        <tr class=""altColor"">
                            <td class=""colFirst""><code>void</strong></code></td>
                            <td class=""colLast""><code><strong><a href=""#apply(org.gradle.api.Project)"">apply</a></strong>(<a href='../../../../../org/gradle/api/Project.html'>Project</a> project)</code><br></td>
                        </tr>
                        
                    </table>
                   </ul>
              </li>
            
            <li class=""blockList""><a name=""method_summary""><!--   --></a>
                    <h3>Inherited Methods Summary</h3>
                    <ul class=""blockList"">
                    <table class=""overviewSummary"" border=""0"" cellpadding=""3"" cellspacing=""0"" summary=""Inherited Methods Summary table"">
                        <caption><span>Inherited Methods</span><span class=""tabEnd"">&nbsp;</span></caption>
                        <tr>
                            <th class=""colFirst"" scope=""col"">Methods inherited from class</th>
                            <th class=""colLast"" scope=""col"">Name</th>
                        </tr>
                        
                        <tr class=""altColor"">
                            <td class=""colFirst""><code>class <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html' title='Object'>Object</a></strong></code></td>
                            <td class=""colLast""><code><a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#wait(long, int)' title='wait'>wait</a>, <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#wait(long)' title='wait'>wait</a>, <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#wait()' title='wait'>wait</a>, <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)' title='equals'>equals</a>, <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#toString()' title='toString'>toString</a>, <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#hashCode()' title='hashCode'>hashCode</a>, <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#getClass()' title='getClass'>getClass</a>, <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#notify()' title='notify'>notify</a>, <a href='https://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#notifyAll()' title='notifyAll'>notifyAll</a></code></td>
                        </tr>
                    </table>
                   </ul>
              </li>
                
        </ul>
        
    </li>
    </ul>
</div>

<div class=""details"">
    <ul class=""blockList"">
        <li class=""blockList"">
           

            
            <!-- =========== FIELD DETAIL =========== -->
            <ul class=""blockList"">
                <li class=""blockList""><a name=""field_detail"">
                    <!--   -->
                </a>
                    <h3>Field Detail</h3>
                    
                        <a name=""ANTLR_CONFIGURATION_NAME""><!-- --></a>
                        <ul class=""blockListLast"">
                            <li class=""blockList"">
                                <h4>public&nbsp;static&nbsp;final&nbsp;<a href='https://docs.oracle.com/javase/6/docs/api/java/lang/String.html' title='String'>String</a> <strong>ANTLR_CONFIGURATION_NAME</strong></h4>
                                <p></p>
                            </li>
                        </ul>
                    
                </li>
            </ul>
            

            

            

            
            <!-- =========== CONSTRUCTOR DETAIL =========== -->
            <ul class=""blockList"">
                <li class=""blockList""><a name=""constructor_detail"">
                    <!--   -->
                </a>
                    <h3>Constructor Detail</h3>
                    
                        <a name=""AntlrPlugin(org.gradle.api.internal.file.FileResolver)""><!-- --></a>
                        <ul class=""blockListLast"">
                            <li class=""blockList"">
                                <h4>@javax.inject.Inject
public&nbsp;<strong>AntlrPlugin</strong>(org.gradle.api.internal.file.FileResolver fileResolver)</h4>
                                <p></p>
                            </li>
                        </ul>
                    
                </li>
            </ul>
            


            
            <!-- =========== METHOD DETAIL =========== -->
            <ul class=""blockList"">
                <li class=""blockList""><a name=""method_detail"">
                    <!--   -->
                </a>
                    <h3>Method Detail</h3>
                    
                        <a name=""apply(org.gradle.api.Project)""><!-- --></a>
                        <ul class=""blockListLast"">
                            <li class=""blockList"">
                                <h4>public&nbsp;void <strong>apply</strong>(<a href='../../../../../org/gradle/api/Project.html'>Project</a> project)</h4>
                                <p></p>
                            </li>
                        </ul>
                    
                </li>
            </ul>
            
        </li>
    </ul>
</div>

<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class=""bottomNav""><a name=""navbar_bottom"">
    <!--   -->
</a><a href=""#skip-navbar_bottom"" title=""Skip navigation links""></a><a name=""navbar_bottom_firstrow"">
    <!--   -->
</a>
    <ul class=""navList"" title=""Navigation"">
        <li><a href=""../../../../../overview-summary.html"">Overview</a></li>
        <li><a href=""package-summary.html"">Package</a></li>
        <li class=""navBarCell1Rev"">Class</li>
        <li><a href=""../../../../../deprecated-list.html"">Deprecated</a></li>
        <li><a href=""../../../../../index-all.html"">Index</a></li>
        <li><a href=""../../../../../help-doc.html"">Help</a></li>
    </ul>
</div>

<div class=""subNav"">
    <div>
        <ul class=""navList"">
            <li><a href=""../../../../../index.html?org/gradle/api/plugins/antlr/AntlrPlugin"" target=""_top"">Frames</a></li>
            <li><a href=""AntlrPlugin.html"" target=""_top"">No Frames</a></li>
        </ul>
    </div>
    <div>
        <ul class=""subNavList"">
            <li>Summary:&nbsp;</li>
            Nested&nbsp;&nbsp;&nbsp;<li><a href=""#field_summary"">Field</a></li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<li><a href=""#constructor_summary"">Constructor</a></li>&nbsp;&nbsp;&nbsp;<li><a href=""#method_summary"">Method</a></li>&nbsp;&nbsp;&nbsp;
        </ul>
        <ul class=""subNavList"">
            <li>&nbsp;|&nbsp;Detail:&nbsp;</li>
            <li><a href=""#field_detail"">Field</a></li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<li><a href=""#constructor_detail"">Constructor</a></li>&nbsp;&nbsp;&nbsp;<li><a href=""#method_detail"">Method</a></li>&nbsp;&nbsp;&nbsp;
        </ul>
    </div>
    <p>Gradle API 2.10</p>
    <a name=""skip-navbar_bottom"">
        <!--   -->
    </a>
    </div>
</div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
",AntlrPlugin,en,16033,html,code,{}
html,"<!doctype html>
<html lang=""en"">

	<head>
		<meta charset=""utf-8"">

		<title>reveal.js – The HTML Presentation Framework</title>

		<meta name=""description"" content=""A framework for easily creating beautiful presentations using HTML"">
		<meta name=""author"" content=""Hakim El Hattab"">

		<meta name=""apple-mobile-web-app-capable"" content=""yes"">
		<meta name=""apple-mobile-web-app-status-bar-style"" content=""black-translucent"">

		<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">

		<link rel=""stylesheet"" href=""css/reset.css"">
		<link rel=""stylesheet"" href=""css/reveal.css"">
		<link rel=""stylesheet"" href=""css/theme/black.css"" id=""theme"">

		<!-- Theme used for syntax highlighting of code -->
		<link rel=""stylesheet"" href=""lib/css/monokai.css"">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>

		<!--[if lt IE 9]>
		<script src=""lib/js/html5shiv.js""></script>
		<![endif]-->
	</head>

	<body>

		<div class=""reveal"">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class=""slides"">
				<section>
					<h1>Reveal.js</h1>
					<h3>The HTML Presentation Framework</h3>
					<p>
						<small>Created by <a href=""http://hakim.se"">Hakim El Hattab</a> and <a href=""https://github.com/hakimel/reveal.js/graphs/contributors"">contributors</a></small>
					</p>
				</section>

				<section>
					<h2>Hello There</h2>
					<p>
						reveal.js enables you to create beautiful interactive slide decks using HTML. This presentation will show you examples of what it can do.
					</p>
				</section>

				<!-- Example of nested vertical slides -->
				<section>
					<section>
						<h2>Vertical Slides</h2>
						<p>Slides can be nested inside of each other.</p>
						<p>Use the <em>Space</em> key to navigate through all slides.</p>
						<br>
						<a href=""#"" class=""navigate-down"">
							<img width=""178"" height=""238"" data-src=""https://s3.amazonaws.com/hakim-static/reveal-js/arrow.png"" alt=""Down arrow"">
						</a>
					</section>
					<section>
						<h2>Basement Level 1</h2>
						<p>Nested slides are useful for adding additional detail underneath a high level horizontal slide.</p>
					</section>
					<section>
						<h2>Basement Level 2</h2>
						<p>That's it, time to go back up.</p>
						<br>
						<a href=""#/2"">
							<img width=""178"" height=""238"" data-src=""https://s3.amazonaws.com/hakim-static/reveal-js/arrow.png"" alt=""Up arrow"" style=""transform: rotate(180deg); -webkit-transform: rotate(180deg);"">
						</a>
					</section>
				</section>

				<section>
					<h2>Slides</h2>
					<p>
						Not a coder? Not a problem. There's a fully-featured visual editor for authoring these, try it out at <a href=""https://slides.com"" target=""_blank"">https://slides.com</a>.
					</p>
				</section>

				<section>
					<h2>Point of View</h2>
					<p>
						Press <strong>ESC</strong> to enter the slide overview.
					</p>
					<p>
						Hold down the <strong>alt</strong> key (<strong>ctrl</strong> in Linux) and click on any element to zoom towards it using <a href=""http://lab.hakim.se/zoom-js"">zoom.js</a>. Click again to zoom back out.
					</p>
					<p>
						(NOTE: Use ctrl + click in Linux.)
					</p>
				</section>

				<section>
					<h2>Touch Optimized</h2>
					<p>
						Presentations look great on touch devices, like mobile phones and tablets. Simply swipe through your slides.
					</p>
				</section>

				<section data-markdown>
					<script type=""text/template"">
						## Markdown support

						Write content using inline or external Markdown.
						Instructions and more info available in the [readme](https://github.com/hakimel/reveal.js#markdown).

						```
						<section data-markdown>
						  ## Markdown support

						  Write content using inline or external Markdown.
						  Instructions and more info available in the [readme](https://github.com/hakimel/reveal.js#markdown).
						</section>
						```
					</script>
				</section>

				<section>
					<section id=""fragments"">
						<h2>Fragments</h2>
						<p>Hit the next arrow...</p>
						<p class=""fragment"">... to step through ...</p>
						<p><span class=""fragment"">... a</span> <span class=""fragment"">fragmented</span> <span class=""fragment"">slide.</span></p>

						<aside class=""notes"">
							This slide has fragments which are also stepped through in the notes window.
						</aside>
					</section>
					<section>
						<h2>Fragment Styles</h2>
						<p>There's different types of fragments, like:</p>
						<p class=""fragment grow"">grow</p>
						<p class=""fragment shrink"">shrink</p>
						<p class=""fragment fade-out"">fade-out</p>
						<p>
							<span style=""display: inline-block;"" class=""fragment fade-right"">fade-right, </span>
							<span style=""display: inline-block;"" class=""fragment fade-up"">up, </span>
							<span style=""display: inline-block;"" class=""fragment fade-down"">down, </span>
							<span style=""display: inline-block;"" class=""fragment fade-left"">left</span>
						</p>
						<p class=""fragment fade-in-then-out"">fade-in-then-out</p>
						<p class=""fragment fade-in-then-semi-out"">fade-in-then-semi-out</p>
						<p>Highlight <span class=""fragment highlight-red"">red</span> <span class=""fragment highlight-blue"">blue</span> <span class=""fragment highlight-green"">green</span></p>
					</section>
				</section>

				<section id=""transitions"">
					<h2>Transition Styles</h2>
					<p>
						You can select from different transitions, like: <br>
						<a href=""?transition=none#/transitions"">None</a> -
						<a href=""?transition=fade#/transitions"">Fade</a> -
						<a href=""?transition=slide#/transitions"">Slide</a> -
						<a href=""?transition=convex#/transitions"">Convex</a> -
						<a href=""?transition=concave#/transitions"">Concave</a> -
						<a href=""?transition=zoom#/transitions"">Zoom</a>
					</p>
				</section>

				<section id=""themes"">
					<h2>Themes</h2>
					<p>
						reveal.js comes with a few themes built in: <br>
						<!-- Hacks to swap themes after the page has loaded. Not flexible and only intended for the reveal.js demo deck. -->
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/black.css'); return false;"">Black (default)</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/white.css'); return false;"">White</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/league.css'); return false;"">League</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/sky.css'); return false;"">Sky</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/beige.css'); return false;"">Beige</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/simple.css'); return false;"">Simple</a> <br>
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/serif.css'); return false;"">Serif</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/blood.css'); return false;"">Blood</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/night.css'); return false;"">Night</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/moon.css'); return false;"">Moon</a> -
						<a href=""#"" onclick=""document.getElementById('theme').setAttribute('href','css/theme/solarized.css'); return false;"">Solarized</a>
					</p>
				</section>

				<section>
					<section data-background=""#dddddd"">
						<h2>Slide Backgrounds</h2>
						<p>
							Set <code>data-background=""#dddddd""</code> on a slide to change the background color. All CSS color formats are supported.
						</p>
						<a href=""#"" class=""navigate-down"">
							<img width=""178"" height=""238"" data-src=""https://s3.amazonaws.com/hakim-static/reveal-js/arrow.png"" alt=""Down arrow"">
						</a>
					</section>
					<section data-background=""https://s3.amazonaws.com/hakim-static/reveal-js/image-placeholder.png"">
						<h2>Image Backgrounds</h2>
						<pre><code class=""hljs html"">&lt;section data-background=""image.png""&gt;</code></pre>
					</section>
					<section data-background=""https://s3.amazonaws.com/hakim-static/reveal-js/image-placeholder.png"" data-background-repeat=""repeat"" data-background-size=""100px"">
						<h2>Tiled Backgrounds</h2>
						<pre><code class=""hljs html"" style=""word-wrap: break-word;"">&lt;section data-background=""image.png"" data-background-repeat=""repeat"" data-background-size=""100px""&gt;</code></pre>
					</section>
					<section data-background-video=""https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm"" data-background-color=""#000000"">
						<div style=""background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px;"">
							<h2>Video Backgrounds</h2>
							<pre><code class=""hljs html"" style=""word-wrap: break-word;"">&lt;section data-background-video=""video.mp4,video.webm""&gt;</code></pre>
						</div>
					</section>
					<section data-background=""http://i.giphy.com/90F8aUepslB84.gif"">
						<h2>... and GIFs!</h2>
					</section>
				</section>

				<section data-transition=""slide"" data-background=""#4d7e65"" data-background-transition=""zoom"">
					<h2>Background Transitions</h2>
					<p>
						Different background transitions are available via the backgroundTransition option. This one's called ""zoom"".
					</p>
					<pre><code class=""hljs javascript"">Reveal.configure({ backgroundTransition: 'zoom' })</code></pre>
				</section>

				<section data-transition=""slide"" data-background=""#b5533c"" data-background-transition=""zoom"">
					<h2>Background Transitions</h2>
					<p>
						You can override background transitions per-slide.
					</p>
					<pre><code class=""hljs html"" style=""word-wrap: break-word;"">&lt;section data-background-transition=""zoom""&gt;</code></pre>
				</section>

				<section data-background-iframe=""https://hakim.se"" data-background-interactive>
					<div style=""position: absolute; width: 40%; right: 0; box-shadow: 0 1px 4px rgba(0,0,0,0.5), 0 5px 25px rgba(0,0,0,0.2); background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px; font-size: 20px; text-align: left;"">
						<h2>Iframe Backgrounds</h2>
						<p>Since reveal.js runs on the web, you can easily embed other web content. Try interacting with the page in the background.</p>
					</div>
				</section>

				<section>
					<h2>Pretty Code</h2>
					<pre><code class=""hljs"" data-trim data-line-numbers=""4|9|4,8-11"">
import React, { useState } from 'react';

function Example() {
  const [count, setCount] = useState(0);

  return (
    &lt;div&gt;
      &lt;p&gt;You clicked {count} times&lt;/p&gt;
      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;
        Click me
      &lt;/button&gt;
    &lt;/div&gt;
  );
}
					</code></pre>
					<p>Code syntax highlighting courtesy of <a href=""http://softwaremaniacs.org/soft/highlight/en/description/"">highlight.js</a>.</p>
				</section>

				<section>
					<h2>Marvelous List</h2>
					<ul>
						<li>No order here</li>
						<li>Or here</li>
						<li>Or here</li>
						<li>Or here</li>
					</ul>
				</section>

				<section>
					<h2>Fantastic Ordered List</h2>
					<ol>
						<li>One is smaller than...</li>
						<li>Two is smaller than...</li>
						<li>Three!</li>
					</ol>
				</section>

				<section>
					<h2>Tabular Tables</h2>
					<table>
						<thead>
							<tr>
								<th>Item</th>
								<th>Value</th>
								<th>Quantity</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>Apples</td>
								<td>$1</td>
								<td>7</td>
							</tr>
							<tr>
								<td>Lemonade</td>
								<td>$2</td>
								<td>18</td>
							</tr>
							<tr>
								<td>Bread</td>
								<td>$3</td>
								<td>2</td>
							</tr>
						</tbody>
					</table>
				</section>

				<section>
					<h2>Clever Quotes</h2>
					<p>
						These guys come in two forms, inline: <q cite=""http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations"">The nice thing about standards is that there are so many to choose from</q> and block:
					</p>
					<blockquote cite=""http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations"">
						&ldquo;For years there has been a theory that millions of monkeys typing at random on millions of typewriters would
						reproduce the entire works of Shakespeare. The Internet has proven this theory to be untrue.&rdquo;
					</blockquote>
				</section>

				<section>
					<h2>Intergalactic Interconnections</h2>
					<p>
						You can link between slides internally,
						<a href=""#/2/3"">like this</a>.
					</p>
				</section>

				<section>
					<h2>Speaker View</h2>
					<p>There's a <a href=""https://github.com/hakimel/reveal.js#speaker-notes"">speaker view</a>. It includes a timer, preview of the upcoming slide as well as your speaker notes.</p>
					<p>Press the <em>S</em> key to try it out.</p>

					<aside class=""notes"">
						Oh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit 's' on your keyboard).
					</aside>
				</section>

				<section>
					<h2>Export to PDF</h2>
					<p>Presentations can be <a href=""https://github.com/hakimel/reveal.js#pdf-export"">exported to PDF</a>, here's an example:</p>
					<iframe data-src=""https://www.slideshare.net/slideshow/embed_code/42840540"" width=""445"" height=""355"" frameborder=""0"" marginwidth=""0"" marginheight=""0"" scrolling=""no"" style=""border:3px solid #666; margin-bottom:5px; max-width: 100%;"" allowfullscreen> </iframe>
				</section>

				<section>
					<h2>Global State</h2>
					<p>
						Set <code>data-state=""something""</code> on a slide and <code>""something""</code>
						will be added as a class to the document element when the slide is open. This lets you
						apply broader style changes, like switching the page background.
					</p>
				</section>

				<section data-state=""customevent"">
					<h2>State Events</h2>
					<p>
						Additionally custom events can be triggered on a per slide basis by binding to the <code>data-state</code> name.
					</p>
					<pre><code class=""javascript"" data-trim contenteditable style=""font-size: 18px;"">
Reveal.addEventListener( 'customevent', function() {
	console.log( '""customevent"" has fired' );
} );
					</code></pre>
				</section>

				<section>
					<h2>Take a Moment</h2>
					<p>
						Press B or . on your keyboard to pause the presentation. This is helpful when you're on stage and want to take distracting slides off the screen.
					</p>
				</section>

				<section>
					<h2>Much more</h2>
					<ul>
						<li>Right-to-left support</li>
						<li><a href=""https://github.com/hakimel/reveal.js#api"">Extensive JavaScript API</a></li>
						<li><a href=""https://github.com/hakimel/reveal.js#auto-sliding"">Auto-progression</a></li>
						<li><a href=""https://github.com/hakimel/reveal.js#parallax-background"">Parallax backgrounds</a></li>
						<li><a href=""https://github.com/hakimel/reveal.js#keyboard-bindings"">Custom keyboard bindings</a></li>
					</ul>
				</section>

				<section style=""text-align: left;"">
					<h1>THE END</h1>
					<p>
						- <a href=""https://slides.com"">Try the online editor</a> <br>
						- <a href=""https://github.com/hakimel/reveal.js"">Source code &amp; documentation</a>
					</p>
				</section>

			</div>

		</div>

		<script src=""js/reveal.js""></script>

		<script>

			// More info https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				center: true,
				hash: true,

				transition: 'slide', // none/fade/slide/convex/concave/zoom

				// More info https://github.com/hakimel/reveal.js#dependencies
				dependencies: [
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js' },
					{ src: 'plugin/search/search.js', async: true },
					{ src: 'plugin/zoom-js/zoom.js', async: true },
					{ src: 'plugin/notes/notes.js', async: true }
				]
			});

		</script>

	</body>
</html>
",demo,en,17141,html,code,{}
html,"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width,initial-scale=1.0"">
    <link rel=""icon"" href=""<%= BASE_URL %>favicon.ico"">
    <title>AI机器学习平台</title>
  </head>
  <body>
    <noscript>
      <strong>We're sorry but vue-jsplumb-demo doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>
    </noscript>
    <div id=""app""></div>
    <!-- built files will be auto injected -->
  </body>
</html>
",index,en,590,html,code,{}
html,"<!doctype html>

<title>CodeMirror: Z80 assembly mode</title>
<meta charset=""utf-8""/>
<link rel=stylesheet href=""../../doc/docs.css"">

<link rel=""stylesheet"" href=""../../lib/codemirror.css"">
<script src=""../../lib/codemirror.js""></script>
<script src=""z80.js""></script>
<style type=""text/css"">.CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;}</style>
<div id=nav>
  <a href=""http://codemirror.net""><h1>CodeMirror</h1><img id=logo src=""../../doc/logo.png""></a>

  <ul>
    <li><a href=""../../index.html"">Home</a>
    <li><a href=""../../doc/manual.html"">Manual</a>
    <li><a href=""https://github.com/codemirror/codemirror"">Code</a>
  </ul>
  <ul>
    <li><a href=""../index.html"">Language modes</a>
    <li><a class=active href=""#"">Z80 assembly</a>
  </ul>
</div>

<article>
<h2>Z80 assembly mode</h2>


<div><textarea id=""code"" name=""code"">
#include    ""ti83plus.inc""
#define     progStart   $9D95
.org        progStart-2
.db         $BB,$6D
    bcall(_ClrLCDFull)
    ld  HL, 0
    ld  (PenCol),   HL
    ld  HL, Message
    bcall(_PutS) ; Displays the string
    bcall(_NewLine)
    ret
Message:
.db         ""Hello world!"",0
</textarea></div>

    <script>
      var editor = CodeMirror.fromTextArea(document.getElementById(""code""), {
        lineNumbers: true
      });
    </script>

    <p><strong>MIME type defined:</strong> <code>text/x-z80</code>.</p>
  </article>
",index_1,en,1449,html,code,{}
html,"<!doctype html>
<html lang=""zh"">
<head>
	<meta charset=""UTF-8"">
	<meta http-equiv=""X-UA-Compatible"" content=""IE=edge,chrome=1""> 
	<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
	<title>实用的轻量级js自动完成autocomplete插件|DEMO_jQuery之家-自由分享jQuery、html5、css3的插件库</title>
	<link rel=""stylesheet"" type=""text/css"" href=""css/normalize.css"" />
	<link rel=""stylesheet"" type=""text/css"" href=""css/default.css"">
	<link rel=""stylesheet"" href=""css/awesomplete.css"" />
	<script src=""js/awesomplete.js""></script>
	<!--[if IE]>
		<script src=""http://libs.useso.com/js/html5shiv/3.7/html5shiv.min.js""></script>
	<![endif]-->
</head>
<body>
	<div class=""htmleaf-container"">
		<header class=""htmleaf-header"">
			<h1>实用的轻量级js自动完成autocomplete插件 <span>Ultra lightweight, usable, beautiful autocomplete with zero dependencies</span></h1>
			<div class=""htmleaf-links"">
				<a class=""htmleaf-icon icon-home"" href=""http://www.htmleaf.com/"" title=""jQuery之家"" target=""_blank""><span> jQuery之家</span></a>
				<a class=""htmleaf-icon icon-arrow-right3"" href=""http://www.htmleaf.com/jQuery/Form/201502251419.html"" title=""返回下载页"" target=""_blank""><span> 返回下载页</span></a>
			</div>
		</header>
		<div class=""htmleaf-content bgcolor-8"">
			Pick a programming language(Ada, Java, JavaScript, Brainfuck, LOLCODE, Node.js, Ruby on Rails):<br/><br/>
			<input class=""awesomplete""
       data-list=""Ada, Java, JavaScript, Brainfuck, LOLCODE, Node.js, Ruby on Rails"" />
		</div>
		<div class=""related"">
		    <h3>如果你喜欢这个插件，那么你可能也喜欢:</h3>
		    <a href=""http://www.htmleaf.com/jQuery/Form/20141222958.html"">
			  <img src=""img/1.jpg"" width=""300"" alt=""jQuery表单input字段提示信息动画特效""/>
			  <h3>jQuery表单input字段提示信息动画特效</h3>
			</a>
			<a href=""http://www.htmleaf.com/jQuery/Slideshow-Scroller/20141022259.html"">
			  <img src=""img/2.jpg"" width=""300"" alt=""jQuery实时搜索插件-HideSeek""/>
			  <h3>jQuery实时搜索插件-HideSeek</h3>
			</a>
		</div>
	</div>
	
</body>
</html>",index_2,en,2171,html,code,{}
html,"<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01//EN"" ""http://www.w3.org/TR/html4/strict.dtd"">
<html>
<head>
	<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"">
	<title>Flot Examples: Time Axes</title>
	<link href=""../examples.css"" rel=""stylesheet"" type=""text/css"">
	<!--[if lte IE 8]><script language=""javascript"" type=""text/javascript"" src=""../../excanvas.min.js""></script><![endif]-->
	<script language=""javascript"" type=""text/javascript"" src=""../../jquery.js""></script>
	<script language=""javascript"" type=""text/javascript"" src=""../../jquery.flot.js""></script>
	<script language=""javascript"" type=""text/javascript"" src=""../../jquery.flot.time.js""></script>
	<script type=""text/javascript"">

	$(function() {

		var d = [[-373597200000, 315.71], [-370918800000, 317.45], [-368326800000, 317.50], [-363056400000, 315.86], [-360378000000, 314.93], [-357699600000, 313.19], [-352429200000, 313.34], [-349837200000, 314.67], [-347158800000, 315.58], [-344480400000, 316.47], [-342061200000, 316.65], [-339382800000, 317.71], [-336790800000, 318.29], [-334112400000, 318.16], [-331520400000, 316.55], [-328842000000, 314.80], [-326163600000, 313.84], [-323571600000, 313.34], [-320893200000, 314.81], [-318301200000, 315.59], [-315622800000, 316.43], [-312944400000, 316.97], [-310438800000, 317.58], [-307760400000, 319.03], [-305168400000, 320.03], [-302490000000, 319.59], [-299898000000, 318.18], [-297219600000, 315.91], [-294541200000, 314.16], [-291949200000, 313.83], [-289270800000, 315.00], [-286678800000, 316.19], [-284000400000, 316.89], [-281322000000, 317.70], [-278902800000, 318.54], [-276224400000, 319.48], [-273632400000, 320.58], [-270954000000, 319.78], [-268362000000, 318.58], [-265683600000, 316.79], [-263005200000, 314.99], [-260413200000, 315.31], [-257734800000, 316.10], [-255142800000, 317.01], [-252464400000, 317.94], [-249786000000, 318.56], [-247366800000, 319.69], [-244688400000, 320.58], [-242096400000, 321.01], [-239418000000, 320.61], [-236826000000, 319.61], [-234147600000, 317.40], [-231469200000, 316.26], [-228877200000, 315.42], [-226198800000, 316.69], [-223606800000, 317.69], [-220928400000, 318.74], [-218250000000, 319.08], [-215830800000, 319.86], [-213152400000, 321.39], [-210560400000, 322.24], [-207882000000, 321.47], [-205290000000, 319.74], [-202611600000, 317.77], [-199933200000, 316.21], [-197341200000, 315.99], [-194662800000, 317.07], [-192070800000, 318.36], [-189392400000, 319.57], [-178938000000, 322.23], [-176259600000, 321.89], [-173667600000, 320.44], [-170989200000, 318.70], [-168310800000, 316.70], [-165718800000, 316.87], [-163040400000, 317.68], [-160448400000, 318.71], [-157770000000, 319.44], [-155091600000, 320.44], [-152672400000, 320.89], [-149994000000, 322.13], [-147402000000, 322.16], [-144723600000, 321.87], [-142131600000, 321.21], [-139453200000, 318.87], [-136774800000, 317.81], [-134182800000, 317.30], [-131504400000, 318.87], [-128912400000, 319.42], [-126234000000, 320.62], [-123555600000, 321.59], [-121136400000, 322.39], [-118458000000, 323.70], [-115866000000, 324.07], [-113187600000, 323.75], [-110595600000, 322.40], [-107917200000, 320.37], [-105238800000, 318.64], [-102646800000, 318.10], [-99968400000, 319.79], [-97376400000, 321.03], [-94698000000, 322.33], [-92019600000, 322.50], [-89600400000, 323.04], [-86922000000, 324.42], [-84330000000, 325.00], [-81651600000, 324.09], [-79059600000, 322.55], [-76381200000, 320.92], [-73702800000, 319.26], [-71110800000, 319.39], [-68432400000, 320.72], [-65840400000, 321.96], [-63162000000, 322.57], [-60483600000, 323.15], [-57978000000, 323.89], [-55299600000, 325.02], [-52707600000, 325.57], [-50029200000, 325.36], [-47437200000, 324.14], [-44758800000, 322.11], [-42080400000, 320.33], [-39488400000, 320.25], [-36810000000, 321.32], [-34218000000, 322.90], [-31539600000, 324.00], [-28861200000, 324.42], [-26442000000, 325.64], [-23763600000, 326.66], [-21171600000, 327.38], [-18493200000, 326.70], [-15901200000, 325.89], [-13222800000, 323.67], [-10544400000, 322.38], [-7952400000, 321.78], [-5274000000, 322.85], [-2682000000, 324.12], [-3600000, 325.06], [2674800000, 325.98], [5094000000, 326.93], [7772400000, 328.13], [10364400000, 328.07], [13042800000, 327.66], [15634800000, 326.35], [18313200000, 324.69], [20991600000, 323.10], [23583600000, 323.07], [26262000000, 324.01], [28854000000, 325.13], [31532400000, 326.17], [34210800000, 326.68], [36630000000, 327.18], [39308400000, 327.78], [41900400000, 328.92], [44578800000, 328.57], [47170800000, 327.37], [49849200000, 325.43], [52527600000, 323.36], [55119600000, 323.56], [57798000000, 324.80], [60390000000, 326.01], [63068400000, 326.77], [65746800000, 327.63], [68252400000, 327.75], [70930800000, 329.72], [73522800000, 330.07], [76201200000, 329.09], [78793200000, 328.05], [81471600000, 326.32], [84150000000, 324.84], [86742000000, 325.20], [89420400000, 326.50], [92012400000, 327.55], [94690800000, 328.54], [97369200000, 329.56], [99788400000, 330.30], [102466800000, 331.50], [105058800000, 332.48], [107737200000, 332.07], [110329200000, 330.87], [113007600000, 329.31], [115686000000, 327.51], [118278000000, 327.18], [120956400000, 328.16], [123548400000, 328.64], [126226800000, 329.35], [128905200000, 330.71], [131324400000, 331.48], [134002800000, 332.65], [136594800000, 333.16], [139273200000, 332.06], [141865200000, 330.99], [144543600000, 329.17], [147222000000, 327.41], [149814000000, 327.20], [152492400000, 328.33], [155084400000, 329.50], [157762800000, 330.68], [160441200000, 331.41], [162860400000, 331.85], [165538800000, 333.29], [168130800000, 333.91], [170809200000, 333.40], [173401200000, 331.78], [176079600000, 329.88], [178758000000, 328.57], [181350000000, 328.46], [184028400000, 329.26], [189298800000, 331.71], [191977200000, 332.76], [194482800000, 333.48], [197161200000, 334.78], [199753200000, 334.78], [202431600000, 334.17], [205023600000, 332.78], [207702000000, 330.64], [210380400000, 328.95], [212972400000, 328.77], [215650800000, 330.23], [218242800000, 331.69], [220921200000, 332.70], [223599600000, 333.24], [226018800000, 334.96], [228697200000, 336.04], [231289200000, 336.82], [233967600000, 336.13], [236559600000, 334.73], [239238000000, 332.52], [241916400000, 331.19], [244508400000, 331.19], [247186800000, 332.35], [249778800000, 333.47], [252457200000, 335.11], [255135600000, 335.26], [257554800000, 336.60], [260233200000, 337.77], [262825200000, 338.00], [265503600000, 337.99], [268095600000, 336.48], [270774000000, 334.37], [273452400000, 332.27], [276044400000, 332.41], [278722800000, 333.76], [281314800000, 334.83], [283993200000, 336.21], [286671600000, 336.64], [289090800000, 338.12], [291769200000, 339.02], [294361200000, 339.02], [297039600000, 339.20], [299631600000, 337.58], [302310000000, 335.55], [304988400000, 333.89], [307580400000, 334.14], [310258800000, 335.26], [312850800000, 336.71], [315529200000, 337.81], [318207600000, 338.29], [320713200000, 340.04], [323391600000, 340.86], [325980000000, 341.47], [328658400000, 341.26], [331250400000, 339.29], [333928800000, 337.60], [336607200000, 336.12], [339202800000, 336.08], [341881200000, 337.22], [344473200000, 338.34], [347151600000, 339.36], [349830000000, 340.51], [352249200000, 341.57], [354924000000, 342.56], [357516000000, 343.01], [360194400000, 342.47], [362786400000, 340.71], [365464800000, 338.52], [368143200000, 336.96], [370738800000, 337.13], [373417200000, 338.58], [376009200000, 339.89], [378687600000, 340.93], [381366000000, 341.69], [383785200000, 342.69], [389052000000, 344.30], [391730400000, 343.43], [394322400000, 341.88], [397000800000, 339.89], [399679200000, 337.95], [402274800000, 338.10], [404953200000, 339.27], [407545200000, 340.67], [410223600000, 341.42], [412902000000, 342.68], [415321200000, 343.46], [417996000000, 345.10], [420588000000, 345.76], [423266400000, 345.36], [425858400000, 343.91], [428536800000, 342.05], [431215200000, 340.00], [433810800000, 340.12], [436489200000, 341.33], [439081200000, 342.94], [441759600000, 343.87], [444438000000, 344.60], [446943600000, 345.20], [452210400000, 347.36], [454888800000, 346.74], [457480800000, 345.41], [460159200000, 343.01], [462837600000, 341.23], [465433200000, 341.52], [468111600000, 342.86], [470703600000, 344.41], [473382000000, 345.09], [476060400000, 345.89], [478479600000, 347.49], [481154400000, 348.00], [483746400000, 348.75], [486424800000, 348.19], [489016800000, 346.54], [491695200000, 344.63], [494373600000, 343.03], [496969200000, 342.92], [499647600000, 344.24], [502239600000, 345.62], [504918000000, 346.43], [507596400000, 346.94], [510015600000, 347.88], [512690400000, 349.57], [515282400000, 350.35], [517960800000, 349.72], [520552800000, 347.78], [523231200000, 345.86], [525909600000, 344.84], [528505200000, 344.32], [531183600000, 345.67], [533775600000, 346.88], [536454000000, 348.19], [539132400000, 348.55], [541551600000, 349.52], [544226400000, 351.12], [546818400000, 351.84], [549496800000, 351.49], [552088800000, 349.82], [554767200000, 347.63], [557445600000, 346.38], [560041200000, 346.49], [562719600000, 347.75], [565311600000, 349.03], [567990000000, 350.20], [570668400000, 351.61], [573174000000, 352.22], [575848800000, 353.53], [578440800000, 354.14], [581119200000, 353.62], [583711200000, 352.53], [586389600000, 350.41], [589068000000, 348.84], [591663600000, 348.94], [594342000000, 350.04], [596934000000, 351.29], [599612400000, 352.72], [602290800000, 353.10], [604710000000, 353.65], [607384800000, 355.43], [609976800000, 355.70], [612655200000, 355.11], [615247200000, 353.79], [617925600000, 351.42], [620604000000, 349.81], [623199600000, 350.11], [625878000000, 351.26], [628470000000, 352.63], [631148400000, 353.64], [633826800000, 354.72], [636246000000, 355.49], [638920800000, 356.09], [641512800000, 357.08], [644191200000, 356.11], [646783200000, 354.70], [649461600000, 352.68], [652140000000, 351.05], [654735600000, 351.36], [657414000000, 352.81], [660006000000, 354.22], [662684400000, 354.85], [665362800000, 355.66], [667782000000, 357.04], [670456800000, 358.40], [673048800000, 359.00], [675727200000, 357.99], [678319200000, 356.00], [680997600000, 353.78], [683676000000, 352.20], [686271600000, 352.22], [688950000000, 353.70], [691542000000, 354.98], [694220400000, 356.09], [696898800000, 356.85], [699404400000, 357.73], [702079200000, 358.91], [704671200000, 359.45], [707349600000, 359.19], [709941600000, 356.72], [712620000000, 354.79], [715298400000, 352.79], [717894000000, 353.20], [720572400000, 354.15], [723164400000, 355.39], [725842800000, 356.77], [728521200000, 357.17], [730940400000, 358.26], [733615200000, 359.16], [736207200000, 360.07], [738885600000, 359.41], [741477600000, 357.44], [744156000000, 355.30], [746834400000, 353.87], [749430000000, 354.04], [752108400000, 355.27], [754700400000, 356.70], [757378800000, 358.00], [760057200000, 358.81], [762476400000, 359.68], [765151200000, 361.13], [767743200000, 361.48], [770421600000, 360.60], [773013600000, 359.20], [775692000000, 357.23], [778370400000, 355.42], [780966000000, 355.89], [783644400000, 357.41], [786236400000, 358.74], [788914800000, 359.73], [791593200000, 360.61], [794012400000, 361.58], [796687200000, 363.05], [799279200000, 363.62], [801957600000, 363.03], [804549600000, 361.55], [807228000000, 358.94], [809906400000, 357.93], [812502000000, 357.80], [815180400000, 359.22], [817772400000, 360.44], [820450800000, 361.83], [823129200000, 362.95], [825634800000, 363.91], [828309600000, 364.28], [830901600000, 364.94], [833580000000, 364.70], [836172000000, 363.31], [838850400000, 361.15], [841528800000, 359.40], [844120800000, 359.34], [846802800000, 360.62], [849394800000, 361.96], [852073200000, 362.81], [854751600000, 363.87], [857170800000, 364.25], [859845600000, 366.02], [862437600000, 366.46], [865116000000, 365.32], [867708000000, 364.07], [870386400000, 361.95], [873064800000, 360.06], [875656800000, 360.49], [878338800000, 362.19], [880930800000, 364.12], [883609200000, 364.99], [886287600000, 365.82], [888706800000, 366.95], [891381600000, 368.42], [893973600000, 369.33], [896652000000, 368.78], [899244000000, 367.59], [901922400000, 365.84], [904600800000, 363.83], [907192800000, 364.18], [909874800000, 365.34], [912466800000, 366.93], [915145200000, 367.94], [917823600000, 368.82], [920242800000, 369.46], [922917600000, 370.77], [925509600000, 370.66], [928188000000, 370.10], [930780000000, 369.08], [933458400000, 366.66], [936136800000, 364.60], [938728800000, 365.17], [941410800000, 366.51], [944002800000, 367.89], [946681200000, 369.04], [949359600000, 369.35], [951865200000, 370.38], [954540000000, 371.63], [957132000000, 371.32], [959810400000, 371.53], [962402400000, 369.75], [965080800000, 368.23], [967759200000, 366.87], [970351200000, 366.94], [973033200000, 368.27], [975625200000, 369.64], [978303600000, 370.46], [980982000000, 371.44], [983401200000, 372.37], [986076000000, 373.33], [988668000000, 373.77], [991346400000, 373.09], [993938400000, 371.51], [996616800000, 369.55], [999295200000, 368.12], [1001887200000, 368.38], [1004569200000, 369.66], [1007161200000, 371.11], [1009839600000, 372.36], [1012518000000, 373.09], [1014937200000, 373.81], [1017612000000, 374.93], [1020204000000, 375.58], [1022882400000, 375.44], [1025474400000, 373.86], [1028152800000, 371.77], [1030831200000, 370.73], [1033423200000, 370.50], [1036105200000, 372.18], [1038697200000, 373.70], [1041375600000, 374.92], [1044054000000, 375.62], [1046473200000, 376.51], [1049148000000, 377.75], [1051740000000, 378.54], [1054418400000, 378.20], [1057010400000, 376.68], [1059688800000, 374.43], [1062367200000, 373.11], [1064959200000, 373.10], [1067641200000, 374.77], [1070233200000, 375.97], [1072911600000, 377.03], [1075590000000, 377.87], [1078095600000, 378.88], [1080770400000, 380.42], [1083362400000, 380.62], [1086040800000, 379.70], [1088632800000, 377.43], [1091311200000, 376.32], [1093989600000, 374.19], [1096581600000, 374.47], [1099263600000, 376.15], [1101855600000, 377.51], [1104534000000, 378.43], [1107212400000, 379.70], [1109631600000, 380.92], [1112306400000, 382.18], [1114898400000, 382.45], [1117576800000, 382.14], [1120168800000, 380.60], [1122847200000, 378.64], [1125525600000, 376.73], [1128117600000, 376.84], [1130799600000, 378.29], [1133391600000, 380.06], [1136070000000, 381.40], [1138748400000, 382.20], [1141167600000, 382.66], [1143842400000, 384.69], [1146434400000, 384.94], [1149112800000, 384.01], [1151704800000, 382.14], [1154383200000, 380.31], [1157061600000, 378.81], [1159653600000, 379.03], [1162335600000, 380.17], [1164927600000, 381.85], [1167606000000, 382.94], [1170284400000, 383.86], [1172703600000, 384.49], [1175378400000, 386.37], [1177970400000, 386.54], [1180648800000, 385.98], [1183240800000, 384.36], [1185919200000, 381.85], [1188597600000, 380.74], [1191189600000, 381.15], [1193871600000, 382.38], [1196463600000, 383.94], [1199142000000, 385.44]]; 

		$.plot(""#placeholder"", [d], {
			xaxis: { mode: ""time"" }
		});

		$(""#whole"").click(function () {
			$.plot(""#placeholder"", [d], {
				xaxis: { mode: ""time"" }
			});
		});

		$(""#nineties"").click(function () {
			$.plot(""#placeholder"", [d], {
				xaxis: {
					mode: ""time"",
					min: (new Date(1990, 0, 1)).getTime(),
					max: (new Date(2000, 0, 1)).getTime()
				}
			});
		});

		$(""#latenineties"").click(function () {
			$.plot(""#placeholder"", [d], {
				xaxis: {
					mode: ""time"",
					minTickSize: [1, ""year""],
					min: (new Date(1996, 0, 1)).getTime(),
					max: (new Date(2000, 0, 1)).getTime()
				}
			});
		});

		$(""#ninetyninequarters"").click(function () {
			$.plot(""#placeholder"", [d], {
				xaxis: {
					mode: ""time"",
					minTickSize: [1, ""quarter""],
					min: (new Date(1999, 0, 1)).getTime(),
					max: (new Date(2000, 0, 1)).getTime()
				}
			});
		});

		$(""#ninetynine"").click(function () {
			$.plot(""#placeholder"", [d], {
				xaxis: {
					mode: ""time"",
					minTickSize: [1, ""month""],
					min: (new Date(1999, 0, 1)).getTime(),
					max: (new Date(2000, 0, 1)).getTime()
				}
			});
		});

		$(""#lastweekninetynine"").click(function () {
			$.plot(""#placeholder"", [d], {
				xaxis: {
					mode: ""time"",
					minTickSize: [1, ""day""],
					min: (new Date(1999, 11, 25)).getTime(),
					max: (new Date(2000, 0, 1)).getTime(),
					timeformat: ""%a""
				}
			});
		});

		$(""#lastdayninetynine"").click(function () {
			$.plot(""#placeholder"", [d], {
				xaxis: {
					mode: ""time"",
					minTickSize: [1, ""hour""],
					min: (new Date(1999, 11, 31)).getTime(),
					max: (new Date(2000, 0, 1)).getTime(),
					twelveHourClock: true
				}
			});
		});

		// Add the Flot version string to the footer

		$(""#footer"").prepend(""Flot "" + $.plot.version + "" &ndash; "");
	});

	</script>
</head>
<body>

	<div id=""header"">
		<h2>Time Axes</h2>
	</div>

	<div id=""content"">

		<div class=""demo-container"">
			<div id=""placeholder"" class=""demo-placeholder""></div>
		</div>

		<p>Monthly mean atmospheric CO<sub>2</sub> in PPM at Mauna Loa, Hawaii (source: <a href=""http://www.esrl.noaa.gov/gmd/ccgg/trends/"">NOAA/ESRL</a>).</p>

		<p>If you tell Flot that an axis represents time, the data will be interpreted as timestamps and the ticks adjusted and formatted accordingly.</p>

		<p>Zoom to: <button id=""whole"">Whole period</button>
		<button id=""nineties"">1990-2000</button>
		<button id=""latenineties"">1996-2000</button></p>

		<p>Zoom to: <button id=""ninetyninequarters"">1999 by quarter</button>
		<button id=""ninetynine"">1999 by month</button>
		<button id=""lastweekninetynine"">Last week of 1999</button>
		<button id=""lastdayninetynine"">Dec. 31, 1999</button></p>

		<p>The timestamps must be specified as Javascript timestamps, as milliseconds since January 1, 1970 00:00. This is like Unix timestamps, but in milliseconds instead of seconds (remember to multiply with 1000!).</p>

		<p>As an extra caveat, the timestamps are interpreted according to UTC and, by default, displayed as such. You can set the axis ""timezone"" option to ""browser"" to display the timestamps in the user's timezone, or, if you use timezoneJS, you can specify a time zone.</p>

	</div>

	<div id=""footer"">
		Copyright &copy; 2007 - 2014 IOLA and Ole Laursen
	</div>

</body>
</html>
",index_3,en,18469,html,code,{}
html,"<!DOCTYPE html>
<!--
Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.md or http://ckeditor.com/license
-->
<html>
<head>
	<meta charset=""utf-8"">
	<title>jQuery Adapter &mdash; CKEditor Sample</title>
	<script src=""http://code.jquery.com/jquery-1.11.0.min.js""></script>
	<script src=""../../ckeditor.js""></script>
	<script src=""../../adapters/jquery.js""></script>
	<link href=""sample.css"" rel=""stylesheet"">
	<style>

		#editable
		{
			padding: 10px;
			float: left;
		}

	</style>
	<script>

		CKEDITOR.disableAutoInline = true;

		$( document ).ready( function() {
			$( '#editor1' ).ckeditor(); // Use CKEDITOR.replace() if element is <textarea>.
			$( '#editable' ).ckeditor(); // Use CKEDITOR.inline().
		} );

		function setValue() {
			$( '#editor1' ).val( $( 'input#val' ).val() );
		}

	</script>
</head>
<body>
	<h1 class=""samples"">
		<a href=""index.html"" id=""a-test"">CKEditor Samples</a> &raquo; Create Editors with jQuery
	</h1>
	<div class=""warning deprecated"">
		This sample is not maintained anymore. Check out the <a href=""http://sdk.ckeditor.com/"">brand new samples in CKEditor SDK</a>.
	</div>
	<form action=""sample_posteddata.php"" method=""post"">
		<div class=""description"">
			<p>
				This sample shows how to use the <a href=""http://docs.ckeditor.com/#!/guide/dev_jquery"">jQuery adapter</a>.
				Note that you have to include both CKEditor and jQuery scripts before including the adapter.
			</p>

<pre class=""samples"">
&lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;script src=""/ckedit../../ckeditor.js""&gt;&lt;/script&gt;
&lt;script src=""/ckeditor/adapters/jquery.js""&gt;&lt;/script&gt;
</pre>

			<p>Then you can replace HTML elements with a CKEditor instance using the <code>ckeditor()</code> method.</p>

<pre class=""samples"">
$( document ).ready( function() {
	$( 'textarea#editor1' ).ckeditor();
} );
</pre>
		</div>

		<h2 class=""samples"">Inline Example</h2>

		<div id=""editable"" contenteditable=""true"">
			<p><img alt=""Saturn V carrying Apollo 11"" class=""right"" src=""assets/sample.jpg""/><b>Apollo 11</b> was the spaceflight that landed the first humans, Americans <a href=""http://en.wikipedia.org/wiki/Neil_Armstrong"" title=""Neil Armstrong"">Neil Armstrong</a> and <a href=""http://en.wikipedia.org/wiki/Buzz_Aldrin"" title=""Buzz Aldrin"">Buzz Aldrin</a>, on the Moon on July 20, 1969, at 20:18 UTC. Armstrong became the first to step onto the lunar surface 6 hours later on July 21 at 02:56 UTC.</p>
			<p>Armstrong spent about <s>three and a half</s> two and a half hours outside the spacecraft, Aldrin slightly less; and together they collected 47.5 pounds (21.5&nbsp;kg) of lunar material for return to Earth. A third member of the mission, <a href=""http://en.wikipedia.org/wiki/Michael_Collins_(astronaut)"" title=""Michael Collins (astronaut)"">Michael Collins</a>, piloted the <a href=""http://en.wikipedia.org/wiki/Apollo_Command/Service_Module"" title=""Apollo Command/Service Module"">command</a> spacecraft alone in lunar orbit until Armstrong and Aldrin returned to it for the trip back to Earth.
			<p>Broadcast on live TV to a world-wide audience, Armstrong stepped onto the lunar surface and described the event as:</p>
			<blockquote><p>One small step for [a] man, one giant leap for mankind.</p></blockquote> <p>Apollo 11 effectively ended the <a href=""http://en.wikipedia.org/wiki/Space_Race"" title=""Space Race"">Space Race</a> and fulfilled a national goal proposed in 1961 by the late U.S. President <a href=""http://en.wikipedia.org/wiki/John_F._Kennedy"" title=""John F. Kennedy"">John F. Kennedy</a> in a speech before the United States Congress:</p> <blockquote><p>[...] before this decade is out, of landing a man on the Moon and returning him safely to the Earth.</p></blockquote>
		</div>

		<br style=""clear: both"">

		<h2 class=""samples"">Classic (iframe-based) Example</h2>

		<textarea cols=""80"" id=""editor1"" name=""editor1"" rows=""10"">
			&lt;h2&gt;Technical details &lt;a id=&quot;tech-details&quot; name=&quot;tech-details&quot;&gt;&lt;/a&gt;&lt;/h2&gt; &lt;table align=&quot;right&quot; border=&quot;1&quot; bordercolor=&quot;#ccc&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse;margin:10px 0 10px 15px;&quot;&gt; &lt;caption&gt;&lt;strong&gt;Mission crew&lt;/strong&gt;&lt;/caption&gt; &lt;thead&gt; &lt;tr&gt; &lt;th scope=&quot;col&quot;&gt;Position&lt;/th&gt; &lt;th scope=&quot;col&quot;&gt;Astronaut&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Commander&lt;/td&gt; &lt;td&gt;Neil A. Armstrong&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Command Module Pilot&lt;/td&gt; &lt;td&gt;Michael Collins&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Lunar Module Pilot&lt;/td&gt; &lt;td&gt;Edwin &amp;quot;Buzz&amp;quot; E. Aldrin, Jr.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;Launched by a &lt;strong&gt;Saturn V&lt;/strong&gt; rocket from &lt;a href=&quot;http://en.wikipedia.org/wiki/Kennedy_Space_Center&quot; title=&quot;Kennedy Space Center&quot;&gt;Kennedy Space Center&lt;/a&gt; in Merritt Island, Florida on July 16, Apollo 11 was the fifth manned mission of &lt;a href=&quot;http://en.wikipedia.org/wiki/NASA&quot; title=&quot;NASA&quot;&gt;NASA&lt;/a&gt;&amp;#39;s Apollo program. The Apollo spacecraft had three parts:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Command Module&lt;/strong&gt; with a cabin for the three astronauts which was the only part which landed back on Earth&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Service Module&lt;/strong&gt; which supported the Command Module with propulsion, electrical power, oxygen and water&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Lunar Module&lt;/strong&gt; for landing on the Moon.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;After being sent to the Moon by the Saturn V&amp;#39;s upper stage, the astronauts separated the spacecraft from it and travelled for three days until they entered into lunar orbit. Armstrong and Aldrin then moved into the Lunar Module and landed in the &lt;a href=&quot;http://en.wikipedia.org/wiki/Mare_Tranquillitatis&quot; title=&quot;Mare Tranquillitatis&quot;&gt;Sea of Tranquility&lt;/a&gt;. They stayed a total of about 21 and a half hours on the lunar surface. After lifting off in the upper part of the Lunar Module and rejoining Collins in the Command Module, they returned to Earth and landed in the &lt;a href=&quot;http://en.wikipedia.org/wiki/Pacific_Ocean&quot; title=&quot;Pacific Ocean&quot;&gt;Pacific Ocean&lt;/a&gt; on July 24.&lt;/p&gt; &lt;hr/&gt; &lt;p style=&quot;text-align: right;&quot;&gt;&lt;small&gt;Source: &lt;a href=&quot;http://en.wikipedia.org/wiki/Apollo_11&quot;&gt;Wikipedia.org&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
		</textarea>

		<p style=""overflow: hidden"">
			<input style=""float: left"" type=""submit"" value=""Submit"">
			<span style=""float: right"">
				<input type=""text"" id=""val"" value=""I'm using jQuery val()!"" size=""30"">
				<input onclick=""setValue();"" type=""button"" value=""Set value"">
			</span>
		</p>
	</form>
	<div id=""footer"">
		<hr>
		<p>
			CKEditor - The text editor for the Internet - <a class=""samples"" href=""http://ckeditor.com/"">http://ckeditor.com</a>
		</p>
		<p id=""copy"">
			Copyright &copy; 2003-2017, <a class=""samples"" href=""http://cksource.com/"">CKSource</a> - Frederico
			Knabben. All rights reserved.
		</p>
	</div>
</body>
</html>
",jquery,en,7511,html,code,{}
html,"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (version 1.7.0_02) on Mon Dec 21 22:22:23 CET 2015 -->
<meta http-equiv=""Content-Type"" content=""text/html"" charset=""utf-8"">
<title>org.gradle.plugins.javascript.rhino (Gradle API 2.10)</title>
<meta name=""date"" content=""2015-12-21"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../../javadoc.css"" title=""Style"">
</head>
<body>
<h1 class=""bar""><a href=""../../../../../org/gradle/plugins/javascript/rhino/package-summary.html"" target=""classFrame"">org.gradle.plugins.javascript.rhino</a></h1>
<div class=""indexContainer"">
<h2 title=""Classes"">Classes</h2>
<ul title=""Classes"">
<li><a href=""RhinoExtension.html"" title=""class in org.gradle.plugins.javascript.rhino"" target=""classFrame"">RhinoExtension</a></li>
<li><a href=""RhinoShellExec.html"" title=""class in org.gradle.plugins.javascript.rhino"" target=""classFrame"">RhinoShellExec</a></li>
</ul>
</div>
</body>
</html>
",package-frame,en,1064,html,code,{}
html,"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Frameset//EN"" ""http://www.w3.org/TR/html4/frameset.dtd"">
<!--
Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.html or http://ckeditor.com/license
-->
<html>
<head>
	<title></title>
	<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"">
	<script type=""text/javascript"">

function doLoadScript( url )
{
	if ( !url )
		return false ;

	var s = document.createElement( ""script"" ) ;
	s.type = ""text/javascript"" ;
	s.src = url ;
	document.getElementsByTagName( ""head"" )[ 0 ].appendChild( s ) ;

	return true ;
}

var opener;
function tryLoad()
{
	opener = window.parent;

	// get access to global parameters
	var oParams = window.opener.oldFramesetPageParams;

	// make frameset rows string prepare
	var sFramesetRows = ( parseInt( oParams.firstframeh, 10 ) || '30') + "",*,"" + ( parseInt( oParams.thirdframeh, 10 ) || '150' ) + ',0' ;
	document.getElementById( 'itFrameset' ).rows = sFramesetRows ;

	// dynamic including init frames and crossdomain transport code
	// from config sproxy_js_frameset url
	var addScriptUrl = oParams.sproxy_js_frameset ;
	doLoadScript( addScriptUrl ) ;
}

	</script>
</head>

<frameset id=""itFrameset"" onload=""tryLoad();"" border=""0"" rows=""30,*,*,0"">
    <frame scrolling=""no"" framespacing=""0"" frameborder=""0"" noresize=""noresize"" marginheight=""0"" marginwidth=""2"" src="""" name=""navbar""></frame>
    <frame scrolling=""auto"" framespacing=""0"" frameborder=""0"" noresize=""noresize"" marginheight=""0"" marginwidth=""0"" src="""" name=""mid""></frame>
    <frame scrolling=""no"" framespacing=""0"" frameborder=""0"" noresize=""noresize"" marginheight=""1"" marginwidth=""1"" src="""" name=""bot""></frame>
    <frame scrolling=""no"" framespacing=""0"" frameborder=""0"" noresize=""noresize"" marginheight=""1"" marginwidth=""1"" src="""" name=""spellsuggestall""></frame>
</frameset>
</html>
",tmpFrameset,en,1935,html,code,{}
html,"<!DOCTYPE html>
<html>
<head>
    <title>Observable Jokes</title>
    <meta name=""description"" content=""A Joke example with the Observable in pure function (lambda calculus), with async HttpGet and Box-Tool"">
    <meta name=""keywords"" content=""Lambda Calculus, JavaScript, Joke, Observable, Http, Box"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta charset=""UTF-8"">
</head>
<style>
    body {
        background-color: lightgrey;
        font-family: 'Lucida Grande', 'Lucida Sans Unicode', arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    button {
        cursor: pointer;
        padding: 5px;
        margin: 5px;
    }
    button:focus {outline:0;}
    .buttons {
        background-color: #A0F6F6;
        padding: 1rem;
        border-width: 1px;
        border-radius: 1rem;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, .1), 0 4px 6px -2px rgba(0, 0, 0, .05);
    }
    .buttonsRow {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
    }
    #jokeHistory {
        display: flex;
        flex-direction: column;
        align-items: center;
        align-content: center;
    }
    legend, button {
        background-color: white;
        padding: 5px 10px;
        border-radius: 1rem;
        font-weight: 800;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),
        0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }
    fieldset {
        border: 1px solid #7a7e7e;
        border-radius: 1rem;
        background-color: rgba(255, 255, 255, .7);
        margin-top: 5px;
    }
    fieldset:first-child {
        background-color: #fff;
        box-shadow: 0 0 20px 8px #fff, 0 0 10px 10px #0ff;
    }
    p {
        margin: 0;
    }
    h3{
        margin: 5px;
    }
</style>
<body>
<div class=""buttons"">
    <h3>Wanna get a joke? Click a Button</h3>
    <p style=""font-size: small; font-style: italic; color: #7a7e7e; padding-bottom: 10px;"">We take no responsibility for the content of the generated Jokes.</p>
    <div class=""buttonsRow"">
        <button id=""norrisBtn"">Chuck Norris Joke</button>
        <button id=""nerdyBtn"">Nerd Joke</button>
        <button id=""trumpBtn"">Trump Tweet</button>
    </div>
</div>

<div id=""jokeHistory""></div>

<script src=""observableHttpGetJokeExample.js"" type=""module""></script>
</body>
</html>
",viewObservableHttpGetJokeExample,en,2509,html,code,{}
java,"package com.baeldung.jpa.primarykeys;

import java.io.Serializable;

public class AccountId implements Serializable {

    private static final long serialVersionUID = 1L;

    private String accountNumber;
    private String accountType;

    public AccountId() {

    }

    public AccountId(String accountNumber, String accountType) {
        this.accountNumber = accountNumber;
        this.accountType = accountType;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((accountNumber == null) ? 0 : accountNumber.hashCode());
        result = prime * result + ((accountType == null) ? 0 : accountType.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        AccountId other = (AccountId) obj;
        if (accountNumber == null) {
            if (other.accountNumber != null)
                return false;
        } else if (!accountNumber.equals(other.accountNumber))
            return false;
        if (accountType == null) {
            if (other.accountType != null)
                return false;
        } else if (!accountType.equals(other.accountType))
            return false;
        return true;
    }

}
",AccountId,en,1477,java,code,"{""qsc_syntax_java"": 1}"
java,"package filesprocessing;

import java.util.*;

/**
 * The CommandFactory class handles the creation of a Command array from a given input.
 *
 * @author jherskow
 * @author felber
 */
class CommandFactory {
	private static final String
			BAD_COMMAND_FILE = ""Bad command file."",
			FILTER =""FILTER"", ORDER =""ORDER"", DEFAULT_ORDER =""abs"";

	/**
	 * This method parses the filter file into an array of Command objects, each with an order and filter.
	 * @param linesArray An array of Strings, each representing a line in the original text file.
	 * @return A new array, containing all commands, in order.
	 * @throws Type2Error If is an insoluble problem with the input.
	 */
	static Command[] makeCommandsFromLines(String[] linesArray)throws Type2Error{
		Command[] commands = new Command[linesArray.length];
		int i=0, commandCounter = 0;
		int filterNum, orderNum;
		String filterArg, orderArg;

		// Iterate over command sets in the filter file.
		while (i<linesArray.length) {
			// Ensure first line is filter
			if (!linesArray[i].equals(FILTER)) throw new Type2Error(BAD_COMMAND_FILE);
			// Create filter from the next line
			filterArg = linesArray[i + 1];
			filterNum =i+1;
			// Ensure the line after that exists, and is ORDER
			if (i+2 >= linesArray.length || !linesArray[i + 2].equals(ORDER)){
				throw new Type2Error(BAD_COMMAND_FILE);
			}
			// If the next line (supposed to be the order parameter) does not exist,
			// Or if it is FILTER - use default order, increment i, and start again from FILTER
			if (i+3 >= linesArray.length || linesArray[i + 3].equals(FILTER)){
				orderArg = DEFAULT_ORDER;
				orderNum =i+2;
				commands[commandCounter] = new Command(filterArg, filterNum+1, orderArg, orderNum+1);
				i += 3;
				commandCounter++;
				continue;
			}
			// Otherwise, create the given order, increment i, and start again from FILTER.
			orderArg = linesArray[i + 3];
			orderNum =i+3;
			commands[commandCounter] = new Command(filterArg, filterNum+1, orderArg, orderNum+1);
			i += 4;
			commandCounter++;
		}
		return Arrays.copyOf(commands, commandCounter);
	}
}
",CommandFactory,en,2154,java,code,"{""qsc_syntax_java"": 1}"
java,"package com.baeldung.sampleapp.web.controller;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.baeldung.sampleapp.web.dto.Company;

@RestController
public class CompanyController {

    @RequestMapping(value = ""/companyRest"", produces = MediaType.APPLICATION_JSON_VALUE)
    public Company getCompanyRest() {
        final Company company = new Company(1, ""Xpto"");
        return company;
    }
}
",CompanyController,en,548,java,code,"{""qsc_syntax_java"": 1}"
java,"package com.example.nestedrecyclerviews;

import android.content.Context;

import androidx.test.platform.app.InstrumentationRegistry;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href=""http://d.android.com/tools/testing"">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Test
    public void useAppContext() {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();

        assertEquals(""com.example.nestedrecyclerviews"", appContext.getPackageName());
    }
}
",ExampleInstrumentedTest,en,805,java,code,"{""qsc_syntax_java"": 1}"
java,"/*
 * Copyright (C) 2013 Square, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package retrofit.http;

import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;

import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;

/** Make a HEAD request to a REST path relative to base URL. */
@Documented
@Target(METHOD)
@Retention(RUNTIME)
@RestMethod(""HEAD"")
public @interface HEAD {
  String value();
}
",HEAD,en,1066,java,code,"{""qsc_syntax_java"": 1}"
java,"import oop.ex2.GameGUI;
import java.awt.*;

/**
 * Represents a human-controlled spaceship.
 * @author jherskow
 */
public class HumanShip extends SpaceShip {

	/**
	 * Implements user control of the ship.
	 * @param Game The game object.
	 */
	public void doAction(SpaceWars Game){
		boolean isThrottle = false;
		int turn = 0;
		if (Game.getGUI().isTeleportPressed()){
			teleport();
		}
		if(Game.getGUI().isRightPressed()) turn--;
		if(Game.getGUI().isLeftPressed()) turn++;
		if (Game.getGUI().isUpPressed()) isThrottle = true;
		getPhysics().move(isThrottle,turn);
		if(Game.getGUI().isShieldsPressed()) shieldOn();
		else shieldsUp = false;
		if(Game.getGUI().isShotPressed()) fire(Game);
		rechargeEnergy();
	}

	/** This function overrides the default image to differentiate the human player's
	 * ship from the others.
	 * @return The image sprite for the ship.
	 */
	@Override
	public Image getImage(){return shieldsUp ? GameGUI.SPACESHIP_IMAGE_SHIELD : GameGUI.SPACESHIP_IMAGE;}
}
",HumanShip,en,1029,java,code,"{""qsc_syntax_java"": 1}"
java,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.spark.examples.ml;

// $example on$
import org.apache.spark.ml.classification.LogisticRegression;
import org.apache.spark.ml.classification.OneVsRest;
import org.apache.spark.ml.classification.OneVsRestModel;
import org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
// $example off$
import org.apache.spark.sql.SparkSession;


/**
 * An example of Multiclass to Binary Reduction with One Vs Rest,
 * using Logistic Regression as the base classifier.
 * Run with
 * <pre>
 * bin/run-example ml.JavaOneVsRestExample
 * </pre>
 */
public class JavaOneVsRestExample {
  public static void main(String[] args) {
    SparkSession spark = SparkSession
      .builder()
      .appName(""JavaOneVsRestExample"")
      .getOrCreate();

    // $example on$
    // load data file.
    Dataset<Row> inputData = spark.read().format(""libsvm"")
      .load(""data/mllib/sample_multiclass_classification_data.txt"");

    // generate the train/test split.
    Dataset<Row>[] tmp = inputData.randomSplit(new double[]{0.8, 0.2});
    Dataset<Row> train = tmp[0];
    Dataset<Row> test = tmp[1];

    // configure the base classifier.
    LogisticRegression classifier = new LogisticRegression()
      .setMaxIter(10)
      .setTol(1E-6)
      .setFitIntercept(true);

    // instantiate the One Vs Rest Classifier.
    OneVsRest ovr = new OneVsRest().setClassifier(classifier);

    // train the multiclass model.
    OneVsRestModel ovrModel = ovr.fit(train);

    // score the model on test data.
    Dataset<Row> predictions = ovrModel.transform(test)
      .select(""prediction"", ""label"");

    // obtain evaluator.
    MulticlassClassificationEvaluator evaluator = new MulticlassClassificationEvaluator()
            .setMetricName(""accuracy"");

    // compute the classification error on test data.
    double accuracy = evaluator.evaluate(predictions);
    System.out.println(""Test Error = "" + (1 - accuracy));
    // $example off$

    spark.stop();
  }

}
",JavaOneVsRestExample,en,2930,java,code,"{""qsc_syntax_java"": 1}"
java,"
package com.aprendoz_desarrollo.data.output;



/**
 * Generated for query ""mailAcudiente"" on 03/27/2015 16:46:25
 * 
 */
public class MailAcudienteRtnType {

    private String tipoDocumento;
    private String numeroDocumento;
    private String nombre1;
    private String nombre2;
    private String apellido1;
    private String apellido2;
    private String correo;
    private String sexo;
    private String tipoPersona;
    private Integer idFamilia;
    private String grupo;

    public MailAcudienteRtnType() {
    }

    public MailAcudienteRtnType(String tipoDocumento, String numeroDocumento, String nombre1, String nombre2, String apellido1, String apellido2, String correo, String sexo, String tipoPersona, Integer idFamilia, String grupo) {
        this.tipoDocumento = tipoDocumento;
        this.numeroDocumento = numeroDocumento;
        this.nombre1 = nombre1;
        this.nombre2 = nombre2;
        this.apellido1 = apellido1;
        this.apellido2 = apellido2;
        this.correo = correo;
        this.sexo = sexo;
        this.tipoPersona = tipoPersona;
        this.idFamilia = idFamilia;
        this.grupo = grupo;
    }

    public String getTipoDocumento() {
        return tipoDocumento;
    }

    public void setTipoDocumento(String tipoDocumento) {
        this.tipoDocumento = tipoDocumento;
    }

    public String getNumeroDocumento() {
        return numeroDocumento;
    }

    public void setNumeroDocumento(String numeroDocumento) {
        this.numeroDocumento = numeroDocumento;
    }

    public String getNombre1() {
        return nombre1;
    }

    public void setNombre1(String nombre1) {
        this.nombre1 = nombre1;
    }

    public String getNombre2() {
        return nombre2;
    }

    public void setNombre2(String nombre2) {
        this.nombre2 = nombre2;
    }

    public String getApellido1() {
        return apellido1;
    }

    public void setApellido1(String apellido1) {
        this.apellido1 = apellido1;
    }

    public String getApellido2() {
        return apellido2;
    }

    public void setApellido2(String apellido2) {
        this.apellido2 = apellido2;
    }

    public String getCorreo() {
        return correo;
    }

    public void setCorreo(String correo) {
        this.correo = correo;
    }

    public String getSexo() {
        return sexo;
    }

    public void setSexo(String sexo) {
        this.sexo = sexo;
    }

    public String getTipoPersona() {
        return tipoPersona;
    }

    public void setTipoPersona(String tipoPersona) {
        this.tipoPersona = tipoPersona;
    }

    public Integer getIdFamilia() {
        return idFamilia;
    }

    public void setIdFamilia(Integer idFamilia) {
        this.idFamilia = idFamilia;
    }

    public String getGrupo() {
        return grupo;
    }

    public void setGrupo(String grupo) {
        this.grupo = grupo;
    }

}
",MailAcudienteRtnType,es,3024,java,code,"{""qsc_syntax_java"": 1}"
java,"package com.baeldung.apache.opennlp;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import opennlp.tools.namefind.NameFinderME;
import opennlp.tools.namefind.TokenNameFinderModel;
import opennlp.tools.tokenize.SimpleTokenizer;
import opennlp.tools.util.Span;
import static org.assertj.core.api.Assertions.assertThat;
import org.junit.Test;

public class NamedEntityRecognitionUnitTest {

    @Test
    public void givenEnglishPersonModel_whenNER_thenPersonsAreDetected() throws Exception {
        
        SimpleTokenizer tokenizer = SimpleTokenizer.INSTANCE;
        String[] tokens = tokenizer.tokenize(""John is 26 years old. His best friend's name is Leonard. He has a sister named Penny."");
        
        InputStream inputStreamNameFinder = getClass().getResourceAsStream(""/models/en-ner-person.bin"");
        TokenNameFinderModel model = new TokenNameFinderModel(inputStreamNameFinder);
        NameFinderME nameFinderME = new NameFinderME(model);
        List<Span> spans = Arrays.asList(nameFinderME.find(tokens));
        assertThat(spans.toString()).isEqualTo(""[[0..1) person, [13..14) person, [20..21) person]"");
        List<String> names = new ArrayList<String>();
        int k = 0;
        for (Span s : spans) {
            names.add("""");
            for (int index = s.getStart(); index < s.getEnd(); index++) {
                names.set(k, names.get(k) + tokens[index]);
            }
            k++;
        }
        assertThat(names).contains(""John"",""Leonard"",""Penny"");
    }

}
",NamedEntityRecognitionUnitTest,en,1601,java,code,"{""qsc_syntax_java"": 1}"
java,"
package com.aprendoz_desarrollo.data;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;


/**
 *  aprendoz_desarrollo.Unidad
 *  06/13/2014 10:26:50
 * 
 */
public class Unidad {

    private Integer idUnidad;
    private Asignatura asignatura;
    private String unidad;
    private String unit;
    private Date fechaInicio;
    private Date fechaFin;
    private Integer numeroUnidad;
    private Integer idSyIdIdSy;
    private Set<com.aprendoz_desarrollo.data.Subtopico> subtopicos = new HashSet<com.aprendoz_desarrollo.data.Subtopico>();

    public Unidad() {
    }

    public Unidad(Integer idUnidad, String unidad, String unit, Date fechaInicio, Date fechaFin, Integer numeroUnidad, Integer idSyIdIdSy) {
        this.idUnidad = idUnidad;
        this.unidad = unidad;
        this.unit = unit;
        this.fechaInicio = fechaInicio;
        this.fechaFin = fechaFin;
        this.numeroUnidad = numeroUnidad;
        this.idSyIdIdSy = idSyIdIdSy;
    }

    public Unidad(Integer idUnidad, Asignatura asignatura, String unidad, String unit, Date fechaInicio, Date fechaFin, Integer numeroUnidad, Integer idSyIdIdSy, Set<com.aprendoz_desarrollo.data.Subtopico> subtopicos) {
        this.idUnidad = idUnidad;
        this.asignatura = asignatura;
        this.unidad = unidad;
        this.unit = unit;
        this.fechaInicio = fechaInicio;
        this.fechaFin = fechaFin;
        this.numeroUnidad = numeroUnidad;
        this.idSyIdIdSy = idSyIdIdSy;
        this.subtopicos = subtopicos;
    }

    public Integer getIdUnidad() {
        return idUnidad;
    }

    public void setIdUnidad(Integer idUnidad) {
        this.idUnidad = idUnidad;
    }

    public Asignatura getAsignatura() {
        return asignatura;
    }

    public void setAsignatura(Asignatura asignatura) {
        this.asignatura = asignatura;
    }

    public String getUnidad() {
        return unidad;
    }

    public void setUnidad(String unidad) {
        this.unidad = unidad;
    }

    public String getUnit() {
        return unit;
    }

    public void setUnit(String unit) {
        this.unit = unit;
    }

    public Date getFechaInicio() {
        return fechaInicio;
    }

    public void setFechaInicio(Date fechaInicio) {
        this.fechaInicio = fechaInicio;
    }

    public Date getFechaFin() {
        return fechaFin;
    }

    public void setFechaFin(Date fechaFin) {
        this.fechaFin = fechaFin;
    }

    public Integer getNumeroUnidad() {
        return numeroUnidad;
    }

    public void setNumeroUnidad(Integer numeroUnidad) {
        this.numeroUnidad = numeroUnidad;
    }

    public Integer getIdSyIdIdSy() {
        return idSyIdIdSy;
    }

    public void setIdSyIdIdSy(Integer idSyIdIdSy) {
        this.idSyIdIdSy = idSyIdIdSy;
    }

    public Set<com.aprendoz_desarrollo.data.Subtopico> getSubtopicos() {
        return subtopicos;
    }

    public void setSubtopicos(Set<com.aprendoz_desarrollo.data.Subtopico> subtopicos) {
        this.subtopicos = subtopicos;
    }

}
",Unidad,es,3169,java,code,"{""qsc_syntax_java"": 1}"
js,"// 20.2.2.18 Math.imul(x, y)
var $export = require('./_export');
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * require('./_fails')(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});
",es6.math.imul,en,556,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"require('../../../modules/core.string.escape-html');
module.exports = require('../../../modules/_entry-virtual')('String').escapeHTML;
",escape-html,en,137,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 */

var bodyParser = require('body-parser')
var EventEmitter = require('events').EventEmitter;
var mixin = require('merge-descriptors');
var proto = require('./application');
var Route = require('./router/route');
var Router = require('./router');
var req = require('./request');
var res = require('./response');

/**
 * Expose `createApplication()`.
 */

exports = module.exports = createApplication;

/**
 * Create an express application.
 *
 * @return {Function}
 * @api public
 */

function createApplication() {
  var app = function(req, res, next) {
    app.handle(req, res, next);
  };

  mixin(app, EventEmitter.prototype, false);
  mixin(app, proto, false);

  // expose the prototype that will get set on requests
  app.request = Object.create(req, {
    app: { configurable: true, enumerable: true, writable: true, value: app }
  })

  // expose the prototype that will get set on responses
  app.response = Object.create(res, {
    app: { configurable: true, enumerable: true, writable: true, value: app }
  })

  app.init();
  return app;
}

/**
 * Expose the prototypes.
 */

exports.application = proto;
exports.request = req;
exports.response = res;

/**
 * Expose constructors.
 */

exports.Route = Route;
exports.Router = Router;

/**
 * Expose middleware
 */

exports.json = bodyParser.json
exports.query = require('./middleware/query');
exports.raw = bodyParser.raw
exports.static = require('serve-static');
exports.text = bodyParser.text
exports.urlencoded = bodyParser.urlencoded

/**
 * Replace removed middleware with an appropriate error message.
 */

var removedMiddlewares = [
  'bodyParser',
  'compress',
  'cookieSession',
  'session',
  'logger',
  'cookieParser',
  'favicon',
  'responseTime',
  'errorHandler',
  'timeout',
  'methodOverride',
  'vhost',
  'csrf',
  'directory',
  'limit',
  'multipart',
  'staticCache'
]

removedMiddlewares.forEach(function (name) {
  Object.defineProperty(exports, name, {
    get: function () {
      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');
    },
    configurable: true
  });
});
",express,en,2525,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"'use strict';
const fs = require('fs');
const path = require('path');
const pify = require('pify');

const defaults = {
	mode: 0o777 & (~process.umask()),
	fs
};

// https://github.com/nodejs/node/issues/8987
// https://github.com/libuv/libuv/pull/1088
const checkPath = pth => {
	if (process.platform === 'win32') {
		const pathHasInvalidWinCharacters = /[<>:""|?*]/.test(pth.replace(path.parse(pth).root, ''));

		if (pathHasInvalidWinCharacters) {
			const err = new Error(`Path contains invalid characters: ${pth}`);
			err.code = 'EINVAL';
			throw err;
		}
	}
};

module.exports = (input, opts) => Promise.resolve().then(() => {
	checkPath(input);
	opts = Object.assign({}, defaults, opts);

	const mkdir = pify(opts.fs.mkdir);
	const stat = pify(opts.fs.stat);

	const make = pth => {
		return mkdir(pth, opts.mode)
			.then(() => pth)
			.catch(err => {
				if (err.code === 'ENOENT') {
					if (err.message.includes('null bytes') || path.dirname(pth) === pth) {
						throw err;
					}

					return make(path.dirname(pth)).then(() => make(pth));
				}

				return stat(pth)
					.then(stats => stats.isDirectory() ? pth : Promise.reject())
					.catch(() => {
						throw err;
					});
			});
	};

	return make(path.resolve(input));
});

module.exports.sync = (input, opts) => {
	checkPath(input);
	opts = Object.assign({}, defaults, opts);

	const make = pth => {
		try {
			opts.fs.mkdirSync(pth, opts.mode);
		} catch (err) {
			if (err.code === 'ENOENT') {
				if (err.message.includes('null bytes') || path.dirname(pth) === pth) {
					throw err;
				}

				make(path.dirname(pth));
				return make(pth);
			}

			try {
				if (!opts.fs.statSync(pth).isDirectory()) {
					throw new Error('The path is not a directory');
				}
			} catch (_) {
				throw err;
			}
		}

		return pth;
	};

	return make(path.resolve(input));
};
",index,en,1924,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"/*!
 * type-is
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict'

/**
 * Module dependencies.
 * @private
 */

var typer = require('media-typer')
var mime = require('mime-types')

/**
 * Module exports.
 * @public
 */

module.exports = typeofrequest
module.exports.is = typeis
module.exports.hasBody = hasbody
module.exports.normalize = normalize
module.exports.match = mimeMatch

/**
 * Compare a `value` content-type with `types`.
 * Each `type` can be an extension like `html`,
 * a special shortcut like `multipart` or `urlencoded`,
 * or a mime type.
 *
 * If no types match, `false` is returned.
 * Otherwise, the first `type` that matches is returned.
 *
 * @param {String} value
 * @param {Array} types
 * @public
 */

function typeis (value, types_) {
  var i
  var types = types_

  // remove parameters and normalize
  var val = tryNormalizeType(value)

  // no type or invalid
  if (!val) {
    return false
  }

  // support flattened arguments
  if (types && !Array.isArray(types)) {
    types = new Array(arguments.length - 1)
    for (i = 0; i < types.length; i++) {
      types[i] = arguments[i + 1]
    }
  }

  // no types, return the content type
  if (!types || !types.length) {
    return val
  }

  var type
  for (i = 0; i < types.length; i++) {
    if (mimeMatch(normalize(type = types[i]), val)) {
      return type[0] === '+' || type.indexOf('*') !== -1
        ? val
        : type
    }
  }

  // no matches
  return false
}

/**
 * Check if a request has a request body.
 * A request with a body __must__ either have `transfer-encoding`
 * or `content-length` headers set.
 * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3
 *
 * @param {Object} request
 * @return {Boolean}
 * @public
 */

function hasbody (req) {
  return req.headers['transfer-encoding'] !== undefined ||
    !isNaN(req.headers['content-length'])
}

/**
 * Check if the incoming request contains the ""Content-Type""
 * header field, and it contains any of the give mime `type`s.
 * If there is no request body, `null` is returned.
 * If there is no content type, `false` is returned.
 * Otherwise, it returns the first `type` that matches.
 *
 * Examples:
 *
 *     // With Content-Type: text/html; charset=utf-8
 *     this.is('html'); // => 'html'
 *     this.is('text/html'); // => 'text/html'
 *     this.is('text/*', 'application/json'); // => 'text/html'
 *
 *     // When Content-Type is application/json
 *     this.is('json', 'urlencoded'); // => 'json'
 *     this.is('application/json'); // => 'application/json'
 *     this.is('html', 'application/*'); // => 'application/json'
 *
 *     this.is('html'); // => false
 *
 * @param {String|Array} types...
 * @return {String|false|null}
 * @public
 */

function typeofrequest (req, types_) {
  var types = types_

  // no body
  if (!hasbody(req)) {
    return null
  }

  // support flattened arguments
  if (arguments.length > 2) {
    types = new Array(arguments.length - 1)
    for (var i = 0; i < types.length; i++) {
      types[i] = arguments[i + 1]
    }
  }

  // request content type
  var value = req.headers['content-type']

  return typeis(value, types)
}

/**
 * Normalize a mime type.
 * If it's a shorthand, expand it to a valid mime type.
 *
 * In general, you probably want:
 *
 *   var type = is(req, ['urlencoded', 'json', 'multipart']);
 *
 * Then use the appropriate body parsers.
 * These three are the most common request body types
 * and are thus ensured to work.
 *
 * @param {String} type
 * @private
 */

function normalize (type) {
  if (typeof type !== 'string') {
    // invalid type
    return false
  }

  switch (type) {
    case 'urlencoded':
      return 'application/x-www-form-urlencoded'
    case 'multipart':
      return 'multipart/*'
  }

  if (type[0] === '+') {
    // ""+json"" -> ""*/*+json"" expando
    return '*/*' + type
  }

  return type.indexOf('/') === -1
    ? mime.lookup(type)
    : type
}

/**
 * Check if `expected` mime type
 * matches `actual` mime type with
 * wildcard and +suffix support.
 *
 * @param {String} expected
 * @param {String} actual
 * @return {Boolean}
 * @private
 */

function mimeMatch (expected, actual) {
  // invalid type
  if (expected === false) {
    return false
  }

  // split types
  var actualParts = actual.split('/')
  var expectedParts = expected.split('/')

  // invalid format
  if (actualParts.length !== 2 || expectedParts.length !== 2) {
    return false
  }

  // validate type
  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {
    return false
  }

  // validate suffix wildcard
  if (expectedParts[1].substr(0, 2) === '*+') {
    return expectedParts[1].length <= actualParts[1].length + 1 &&
      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)
  }

  // validate subtype
  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {
    return false
  }

  return true
}

/**
 * Normalize a type and remove parameters.
 *
 * @param {string} value
 * @return {string}
 * @private
 */

function normalizeType (value) {
  // parse the type
  var type = typer.parse(value)

  // remove the parameters
  type.parameters = undefined

  // reformat it
  return typer.format(type)
}

/**
 * Try to normalize a type and remove parameters.
 *
 * @param {string} value
 * @return {string}
 * @private
 */

function tryNormalizeType (value) {
  if (!value) {
    return null
  }

  try {
    return normalizeType(value)
  } catch (err) {
    return null
  }
}
",index_1,en,5828,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"'use strict';

Object.defineProperty(exports, ""__esModule"", {
  value: true
});
exports.isValidLiteralValue = isValidLiteralValue;

var _TypeInfo = require('./TypeInfo');

var _kinds = require('../language/kinds');

var _visitor = require('../language/visitor');

var _schema = require('../type/schema');

var _ValuesOfCorrectType = require('../validation/rules/ValuesOfCorrectType');

var _ValidationContext = require('../validation/ValidationContext');

var _ValidationContext2 = _interopRequireDefault(_ValidationContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Utility which determines if a value literal node is valid for an input type.
 *
 * Deprecated. Rely on validation for documents containing literal values.
 */
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *  strict
 */

function isValidLiteralValue(type, valueNode) {
  var emptySchema = new _schema.GraphQLSchema({});
  var emptyDoc = { kind: _kinds.Kind.DOCUMENT, definitions: [] };
  var typeInfo = new _TypeInfo.TypeInfo(emptySchema, undefined, type);
  var context = new _ValidationContext2.default(emptySchema, emptyDoc, typeInfo);
  var visitor = (0, _ValuesOfCorrectType.ValuesOfCorrectType)(context);
  (0, _visitor.visit)(valueNode, (0, _visitor.visitWithTypeInfo)(typeInfo, visitor));
  return context.getErrors();
}",isValidLiteralValue,en,1540,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"/**
 * negotiator
 * Copyright(c) 2012 Isaac Z. Schlueter
 * Copyright(c) 2014 Federico Romero
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module exports.
 * @public
 */

module.exports = preferredMediaTypes;
module.exports.preferredMediaTypes = preferredMediaTypes;

/**
 * Module variables.
 * @private
 */

var simpleMediaTypeRegExp = /^\s*([^\s\/;]+)\/([^;\s]+)\s*(?:;(.*))?$/;

/**
 * Parse the Accept header.
 * @private
 */

function parseAccept(accept) {
  var accepts = splitMediaTypes(accept);

  for (var i = 0, j = 0; i < accepts.length; i++) {
    var mediaType = parseMediaType(accepts[i].trim(), i);

    if (mediaType) {
      accepts[j++] = mediaType;
    }
  }

  // trim accepts
  accepts.length = j;

  return accepts;
}

/**
 * Parse a media type from the Accept header.
 * @private
 */

function parseMediaType(str, i) {
  var match = simpleMediaTypeRegExp.exec(str);
  if (!match) return null;

  var params = Object.create(null);
  var q = 1;
  var subtype = match[2];
  var type = match[1];

  if (match[3]) {
    var kvps = splitParameters(match[3]).map(splitKeyValuePair);

    for (var j = 0; j < kvps.length; j++) {
      var pair = kvps[j];
      var key = pair[0].toLowerCase();
      var val = pair[1];

      // get the value, unwrapping quotes
      var value = val && val[0] === '""' && val[val.length - 1] === '""'
        ? val.substr(1, val.length - 2)
        : val;

      if (key === 'q') {
        q = parseFloat(value);
        break;
      }

      // store parameter
      params[key] = value;
    }
  }

  return {
    type: type,
    subtype: subtype,
    params: params,
    q: q,
    i: i
  };
}

/**
 * Get the priority of a media type.
 * @private
 */

function getMediaTypePriority(type, accepted, index) {
  var priority = {o: -1, q: 0, s: 0};

  for (var i = 0; i < accepted.length; i++) {
    var spec = specify(type, accepted[i], index);

    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {
      priority = spec;
    }
  }

  return priority;
}

/**
 * Get the specificity of the media type.
 * @private
 */

function specify(type, spec, index) {
  var p = parseMediaType(type);
  var s = 0;

  if (!p) {
    return null;
  }

  if(spec.type.toLowerCase() == p.type.toLowerCase()) {
    s |= 4
  } else if(spec.type != '*') {
    return null;
  }

  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {
    s |= 2
  } else if(spec.subtype != '*') {
    return null;
  }

  var keys = Object.keys(spec.params);
  if (keys.length > 0) {
    if (keys.every(function (k) {
      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();
    })) {
      s |= 1
    } else {
      return null
    }
  }

  return {
    i: index,
    o: spec.i,
    q: spec.q,
    s: s,
  }
}

/**
 * Get the preferred media types from an Accept header.
 * @public
 */

function preferredMediaTypes(accept, provided) {
  // RFC 2616 sec 14.2: no header = */*
  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');

  if (!provided) {
    // sorted list of all types
    return accepts
      .filter(isQuality)
      .sort(compareSpecs)
      .map(getFullType);
  }

  var priorities = provided.map(function getPriority(type, index) {
    return getMediaTypePriority(type, accepts, index);
  });

  // sorted list of accepted types
  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {
    return provided[priorities.indexOf(priority)];
  });
}

/**
 * Compare two specs.
 * @private
 */

function compareSpecs(a, b) {
  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;
}

/**
 * Get full type string.
 * @private
 */

function getFullType(spec) {
  return spec.type + '/' + spec.subtype;
}

/**
 * Check if a spec has any quality.
 * @private
 */

function isQuality(spec) {
  return spec.q > 0;
}

/**
 * Count the number of quotes in a string.
 * @private
 */

function quoteCount(string) {
  var count = 0;
  var index = 0;

  while ((index = string.indexOf('""', index)) !== -1) {
    count++;
    index++;
  }

  return count;
}

/**
 * Split a key value pair.
 * @private
 */

function splitKeyValuePair(str) {
  var index = str.indexOf('=');
  var key;
  var val;

  if (index === -1) {
    key = str;
  } else {
    key = str.substr(0, index);
    val = str.substr(index + 1);
  }

  return [key, val];
}

/**
 * Split an Accept header into media types.
 * @private
 */

function splitMediaTypes(accept) {
  var accepts = accept.split(',');

  for (var i = 1, j = 0; i < accepts.length; i++) {
    if (quoteCount(accepts[j]) % 2 == 0) {
      accepts[++j] = accepts[i];
    } else {
      accepts[j] += ',' + accepts[i];
    }
  }

  // trim accepts
  accepts.length = j + 1;

  return accepts;
}

/**
 * Split a string of parameters.
 * @private
 */

function splitParameters(str) {
  var parameters = str.split(';');

  for (var i = 1, j = 0; i < parameters.length; i++) {
    if (quoteCount(parameters[j]) % 2 == 0) {
      parameters[++j] = parameters[i];
    } else {
      parameters[j] += ';' + parameters[i];
    }
  }

  // trim parameters
  parameters.length = j + 1;

  for (var i = 0; i < parameters.length; i++) {
    parameters[i] = parameters[i].trim();
  }

  return parameters;
}
",mediaType,en,5652,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"""use strict"";
var Buffer = require(""safer-buffer"").Buffer;

// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that
// correspond to encoded bytes (if 128 - then lower half is ASCII). 

exports._sbcs = SBCSCodec;
function SBCSCodec(codecOptions, iconv) {
    if (!codecOptions)
        throw new Error(""SBCS codec is called without the data."")
    
    // Prepare char buffer for decoding.
    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))
        throw new Error(""Encoding '""+codecOptions.type+""' has incorrect 'chars' (must be of len 128 or 256)"");
    
    if (codecOptions.chars.length === 128) {
        var asciiString = """";
        for (var i = 0; i < 128; i++)
            asciiString += String.fromCharCode(i);
        codecOptions.chars = asciiString + codecOptions.chars;
    }

    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');
    
    // Encoding buffer.
    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));

    for (var i = 0; i < codecOptions.chars.length; i++)
        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;

    this.encodeBuf = encodeBuf;
}

SBCSCodec.prototype.encoder = SBCSEncoder;
SBCSCodec.prototype.decoder = SBCSDecoder;


function SBCSEncoder(options, codec) {
    this.encodeBuf = codec.encodeBuf;
}

SBCSEncoder.prototype.write = function(str) {
    var buf = Buffer.alloc(str.length);
    for (var i = 0; i < str.length; i++)
        buf[i] = this.encodeBuf[str.charCodeAt(i)];
    
    return buf;
}

SBCSEncoder.prototype.end = function() {
}


function SBCSDecoder(options, codec) {
    this.decodeBuf = codec.decodeBuf;
}

SBCSDecoder.prototype.write = function(buf) {
    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.
    var decodeBuf = this.decodeBuf;
    var newBuf = Buffer.alloc(buf.length*2);
    var idx1 = 0, idx2 = 0;
    for (var i = 0; i < buf.length; i++) {
        idx1 = buf[i]*2; idx2 = i*2;
        newBuf[idx2] = decodeBuf[idx1];
        newBuf[idx2+1] = decodeBuf[idx1+1];
    }
    return newBuf.toString('ucs2');
}

SBCSDecoder.prototype.end = function() {
}
",sbcs-codec,en,2263,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"'use strict';

Object.defineProperty(exports, ""__esModule"", {
  value: true
});
exports.duplicateOperationNameMessage = duplicateOperationNameMessage;
exports.UniqueOperationNames = UniqueOperationNames;

var _error = require('../../error');

/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *  strict
 */

function duplicateOperationNameMessage(operationName) {
  return 'There can be only one operation named ""' + operationName + '"".';
}

/**
 * Unique operation names
 *
 * A GraphQL document is only valid if all defined operations have unique names.
 */
function UniqueOperationNames(context) {
  var knownOperationNames = Object.create(null);
  return {
    OperationDefinition: function OperationDefinition(node) {
      var operationName = node.name;
      if (operationName) {
        if (knownOperationNames[operationName.value]) {
          context.reportError(new _error.GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));
        } else {
          knownOperationNames[operationName.value] = operationName;
        }
      }
      return false;
    },

    FragmentDefinition: function FragmentDefinition() {
      return false;
    }
  };
}",UniqueOperationNames,en,1409,javascript,code,"{""qsc_syntax_javascript"": 1}"
js,"module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';
",_string-ws,fa,172,javascript,code,"{""qsc_syntax_javascript"": 1}"
json,"{
    ""chapter"": 2,
    ""verse"": 16,
    ""text"": ""ULAIKEL-LEDHINE ESHTEREW ED-DELALETE BIL-HUDA FEMA REBIHET TIXHARETUHUM WE MA KANU MUHTEDINE""
}",16,en,149,json,data,{}
json,"{
  ""Name"": ""My Catgirl Maid Thinks She Runs the Place - Extra Fluffy Edition"",
  ""ImageUrl"": ""https://cdn.akamai.steamstatic.com/steam/apps/1702900/header.jpg?t=1627149362"",
  ""Type"": ""dlc""
}",1702900,en,196,json,data,{}
json,"{""author"":"""",""id"":40711,""strains"":[""ƽƽƽƽ"",""ƽƽƣƽƽƽ"",""ƽƽƣƽƽƽ"",""ƽƽƣƽƽƽ""],""paragraphs"":[""Ҳɥǡ"",""ʺղƸᡣ"","""",""֪""],""title"":""Ź ""}
",40711,en,158,json,data,{}
geojson,"{
  ""id"": 873854815,
  ""type"": ""Feature"",
  ""properties"": {
    ""addr:full"":""1839 Carlyle St Beatrice NE 68310"",
    ""addr:housenumber"":""1839"",
    ""addr:postcode"":""68310"",
    ""addr:street"":""Carlyle St"",
    ""edtf:cessation"":""uuuu"",
    ""edtf:inception"":""uuuu"",
    ""geom:area"":0.0,
    ""geom:bbox"":""-96.728849,40.282112,-96.728849,40.282112"",
    ""geom:latitude"":40.282112,
    ""geom:longitude"":-96.728849,
    ""iso:country"":""US"",
    ""mz:hierarchy_label"":1,
    ""sg:address"":""1839 Carlyle St"",
    ""sg:city"":""Beatrice"",
    ""sg:classifiers"":[
        {
            ""category"":""Professional"",
            ""subcategory"":""Accounting & Tax Preparation"",
            ""type"":""Services""
        }
    ],
    ""sg:owner"":""simplegeo"",
    ""sg:phone"":""+1 402 223 3777"",
    ""sg:postcode"":""68310"",
    ""sg:province"":""NE"",
    ""sg:tags"":[
        ""bookkeeping"",
        ""general""
    ],
    ""src:geom"":""simplegeo"",
    ""wof:belongsto"":[],
    ""wof:breaches"":[],
    ""wof:concordances"":{
        ""sg:id"":""SG_6zDomOlp1LU7EgDO0Yo3nm_40.282112_-96.728849@1294165850""
    },
    ""wof:country"":""US"",
    ""wof:created"":1464298910,
    ""wof:geomhash"":""7b20ea7dc631b2cbe6f2ee8eb7cd5cb1"",
    ""wof:hierarchy"":[],
    ""wof:id"":873854815,
    ""wof:lastmodified"":1472633971,
    ""wof:name"":""Jay's Tax Bookkeeping & Bill"",
    ""wof:parent_id"":-1,
    ""wof:placetype"":""venue"",
    ""wof:repo"":""whosonfirst-data-venue-us-ne"",
    ""wof:superseded_by"":[],
    ""wof:supersedes"":[],
    ""wof:tags"":[
        ""bookkeeping"",
        ""general""
    ]
},
  ""bbox"": [
    -96.728849,
    40.282112,
    -96.728849,
    40.282112
],
  ""geometry"": {""coordinates"":[-96.728849,40.282112],""type"":""Point""}
}",873854815,en,1727,json,data,{}
json,"[{""lineNumber"": 29, ""col_offset"": 0, ""nodeName"": ""_get_texture"", ""type"": ""Callable[[Any], Any]""}, {""lineNumber"": 26, ""col_offset"": 0, ""nodeName"": ""_ASSETS_PATH"", ""type"": ""str""}, {""lineNumber"": 35, ""col_offset"": 17, ""nodeName"": ""Primitive"", ""type"": ""Type[dm_control.entities.props.primitive.Primitive]""}, {""lineNumber"": 26, ""col_offset"": 15, ""nodeName"": ""join"", ""type"": ""Callable""}, {""lineNumber"": 30, ""col_offset"": 2, ""nodeName"": ""contents"", ""type"": ""Any""}, {""lineNumber"": 35, ""col_offset"": 17, ""nodeName"": ""props"", ""type"": ""module""}, {""lineNumber"": 26, ""col_offset"": 15, ""nodeName"": ""path"", ""type"": ""module""}, {""lineNumber"": 26, ""col_offset"": 28, ""nodeName"": ""dirname"", ""type"": ""Callable""}, {""lineNumber"": 26, ""col_offset"": 44, ""nodeName"": ""__file__"", ""type"": ""str""}, {""lineNumber"": 30, ""col_offset"": 13, ""nodeName"": ""GetResource"", ""type"": ""Callable[..., Any]""}, {""lineNumber"": 32, ""col_offset"": 9, ""nodeName"": ""Asset"", ""type"": ""Type[dm_control.mjcf.attribute.Asset]""}, {""lineNumber"": 32, ""col_offset"": 20, ""nodeName"": ""contents"", ""type"": ""Any""}, {""lineNumber"": 47, ""col_offset"": 4, ""nodeName"": ""texture"", ""type"": ""Any""}, {""lineNumber"": 57, ""col_offset"": 4, ""nodeName"": ""material"", ""type"": ""Any""}, {""lineNumber"": 91, ""col_offset"": 4, ""nodeName"": ""_players"", ""type"": ""List[Any]""}, {""lineNumber"": 100, ""col_offset"": 4, ""nodeName"": ""_last_hit"", ""type"": ""None""}, {""lineNumber"": 101, ""col_offset"": 4, ""nodeName"": ""_hit"", ""type"": ""bool""}, {""lineNumber"": 102, ""col_offset"": 4, ""nodeName"": ""_repossessed"", ""type"": ""bool""}, {""lineNumber"": 103, ""col_offset"": 4, ""nodeName"": ""_intercepted"", ""type"": ""bool""}, {""lineNumber"": 106, ""col_offset"": 4, ""nodeName"": ""_pos_at_last_step"", ""type"": ""None""}, {""lineNumber"": 107, ""col_offset"": 4, ""nodeName"": ""_dist_since_last_hit"", ""type"": ""None""}, {""lineNumber"": 108, ""col_offset"": 4, ""nodeName"": ""_dist_between_last_hits"", ""type"": ""None""}, {""lineNumber"": 111, ""col_offset"": 4, ""nodeName"": ""_geom_id"", ""type"": ""Any""}, {""lineNumber"": 112, ""col_offset"": 4, ""nodeName"": ""_geom_id_to_player"", ""type"": ""Dict[Any, nothing]""}, {""lineNumber"": 113, ""col_offset"": 8, ""nodeName"": ""player"", ""type"": ""nothing""}, {""lineNumber"": 113, ""col_offset"": 18, ""nodeName"": ""_players"", ""type"": ""List[Any]""}, {""lineNumber"": 123, ""col_offset"": 7, ""nodeName"": ""_hit"", ""type"": ""bool""}, {""lineNumber"": 130, ""col_offset"": 8, ""nodeName"": ""contact"", ""type"": ""Any""}, {""lineNumber"": 130, ""col_offset"": 19, ""nodeName"": ""contact"", ""type"": ""Any""}, {""lineNumber"": 156, ""col_offset"": 4, ""nodeName"": ""_hit"", ""type"": ""bool""}, {""lineNumber"": 157, ""col_offset"": 4, ""nodeName"": ""_repossessed"", ""type"": ""bool""}, {""lineNumber"": 158, ""col_offset"": 4, ""nodeName"": ""_intercepted"", ""type"": ""bool""}, {""lineNumber"": 162, ""col_offset"": 4, ""nodeName"": ""pos"", ""type"": ""Any""}, {""lineNumber"": 162, ""col_offset"": 10, ""nodeName"": ""xpos"", ""type"": ""Any""}, {""lineNumber"": 163, ""col_offset"": 7, ""nodeName"": ""_hit"", ""type"": ""bool""}, {""lineNumber"": 174, ""col_offset"": 4, ""nodeName"": ""_pos_at_last_step"", ""type"": ""Any""}, {""lineNumber"": 179, ""col_offset"": 11, ""nodeName"": ""_last_hit"", ""type"": ""Any""}, {""lineNumber"": 192, ""col_offset"": 11, ""nodeName"": ""_hit"", ""type"": ""Any""}, {""lineNumber"": 206, ""col_offset"": 11, ""nodeName"": ""_repossessed"", ""type"": ""Any""}, {""lineNumber"": 221, ""col_offset"": 11, ""nodeName"": ""_intercepted"", ""type"": ""Any""}, {""lineNumber"": 231, ""col_offset"": 11, ""nodeName"": ""_dist_between_last_hits"", ""type"": ""Any""}, {""lineNumber"": 26, ""col_offset"": 15, ""nodeName"": ""os"", ""type"": ""module""}, {""lineNumber"": 26, ""col_offset"": 28, ""nodeName"": ""path"", ""type"": ""module""}, {""lineNumber"": 30, ""col_offset"": 13, ""nodeName"": ""resources"", ""type"": ""module""}, {""lineNumber"": 31, ""col_offset"": 6, ""nodeName"": ""join"", ""type"": ""Callable""}, {""lineNumber"": 31, ""col_offset"": 19, ""nodeName"": ""_ASSETS_PATH"", ""type"": ""str""}, {""lineNumber"": 32, ""col_offset"": 9, ""nodeName"": ""mjcf"", ""type"": ""module""}, {""lineNumber"": 46, ""col_offset"": 4, ""nodeName"": ""_build"", ""type"": ""Callable[..., None]""}, {""lineNumber"": 47, ""col_offset"": 14, ""nodeName"": ""add"", ""type"": ""Any""}, {""lineNumber"": 57, ""col_offset"": 15, ""nodeName"": ""add"", ""type"": ""Any""}, {""lineNumber"": 59, ""col_offset"": 4, ""nodeName"": ""set_attributes"", ""type"": ""Any""}, {""lineNumber"": 68, ""col_offset"": 4, ""nodeName"": ""add"", ""type"": ""Any""}, {""lineNumber"": 75, ""col_offset"": 4, ""nodeName"": ""add"", ""type"": ""Any""}, {""lineNumber"": 82, ""col_offset"": 4, ""nodeName"": ""add"", ""type"": ""Any""}, {""lineNumber"": 91, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 94, ""col_offset"": 4, ""nodeName"": ""initialize_entity_trackers"", ""type"": ""Callable[[], Any]""}, {""lineNumber"": 97, ""col_offset"": 4, ""nodeName"": ""append"", ""type"": ""Callable""}, {""lineNumber"": 97, ""col_offset"": 25, ""nodeName"": ""player"", ""type"": ""Any""}, {""lineNumber"": 100, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 101, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 102, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 103, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 106, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 107, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 108, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 111, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 111, ""col_offset"": 20, ""nodeName"": ""name2id"", ""type"": ""Any""}, {""lineNumber"": 111, ""col_offset"": 42, ""nodeName"": ""full_identifier"", ""type"": ""Any""}, {""lineNumber"": 112, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 113, ""col_offset"": 18, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 114, ""col_offset"": 6, ""nodeName"": ""geoms"", ""type"": ""nothing""}, {""lineNumber"": 115, ""col_offset"": 10, ""nodeName"": ""geom"", ""type"": ""nothing""}, {""lineNumber"": 115, ""col_offset"": 18, ""nodeName"": ""geoms"", ""type"": ""nothing""}, {""lineNumber"": 119, ""col_offset"": 4, ""nodeName"": ""initialize_entity_trackers"", ""type"": ""Callable[[], Any]""}, {""lineNumber"": 123, ""col_offset"": 7, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 130, ""col_offset"": 19, ""nodeName"": ""data"", ""type"": ""Any""}, {""lineNumber"": 132, ""col_offset"": 6, ""nodeName"": ""has_self"", ""type"": ""bool""}, {""lineNumber"": 133, ""col_offset"": 10, ""nodeName"": ""geom_id"", ""type"": ""Any""}, {""lineNumber"": 154, ""col_offset"": 4, ""nodeName"": ""before_step"", ""type"": ""Callable[[Any, Any], None]""}, {""lineNumber"": 154, ""col_offset"": 24, ""nodeName"": ""physics"", ""type"": ""Any""}, {""lineNumber"": 154, ""col_offset"": 33, ""nodeName"": ""random_state"", ""type"": ""Any""}, {""lineNumber"": 156, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 157, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 158, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 161, ""col_offset"": 4, ""nodeName"": ""after_step"", ""type"": ""Callable[[Any, Any], None]""}, {""lineNumber"": 161, ""col_offset"": 23, ""nodeName"": ""physics"", ""type"": ""Any""}, {""lineNumber"": 161, ""col_offset"": 32, ""nodeName"": ""random_state"", ""type"": ""Any""}, {""lineNumber"": 163, ""col_offset"": 7, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 170, ""col_offset"": 7, ""nodeName"": ""_dist_since_last_hit"", ""type"": ""Any""}, {""lineNumber"": 172, ""col_offset"": 6, ""nodeName"": ""_dist_since_last_hit"", ""type"": ""Any""}, {""lineNumber"": 174, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 174, ""col_offset"": 29, ""nodeName"": ""copy"", ""type"": ""Any""}, {""lineNumber"": 179, ""col_offset"": 11, ""nodeName"": ""self"", ""type"": ""Any""}, {""lineNumber"": 192, ""col_offset"": 11, ""nodeName"": ""self"", ""type"": ""Any""}, {""lineNumber"": 206, ""col_offset"": 11, ""nodeName"": ""self"", ""type"": ""Any""}, {""lineNumber"": 221, ""col_offset"": 11, ""nodeName"": ""self"", ""type"": ""Any""}, {""lineNumber"": 231, ""col_offset"": 11, ""nodeName"": ""self"", ""type"": ""Any""}, {""lineNumber"": 26, ""col_offset"": 28, ""nodeName"": ""os"", ""type"": ""module""}, {""lineNumber"": 31, ""col_offset"": 6, ""nodeName"": ""path"", ""type"": ""module""}, {""lineNumber"": 31, ""col_offset"": 33, ""nodeName"": ""format"", ""type"": ""Callable[..., str]""}, {""lineNumber"": 31, ""col_offset"": 49, ""nodeName"": ""name"", ""type"": ""str""}, {""lineNumber"": 46, ""col_offset"": 60, ""nodeName"": ""name"", ""type"": ""Any""}, {""lineNumber"": 47, ""col_offset"": 14, ""nodeName"": ""asset"", ""type"": ""Any""}, {""lineNumber"": 57, ""col_offset"": 15, ""nodeName"": ""asset"", ""type"": ""Any""}, {""lineNumber"": 58, ""col_offset"": 48, ""nodeName"": ""texture"", ""type"": ""Any""}, {""lineNumber"": 59, ""col_offset"": 4, ""nodeName"": ""_geom"", ""type"": ""Any""}, {""lineNumber"": 64, ""col_offset"": 13, ""nodeName"": ""mass"", ""type"": ""Any""}, {""lineNumber"": 65, ""col_offset"": 17, ""nodeName"": ""material"", ""type"": ""Any""}, {""lineNumber"": 68, ""col_offset"": 4, ""nodeName"": ""worldbody"", ""type"": ""Any""}, {""lineNumber"": 75, ""col_offset"": 4, ""nodeName"": ""worldbody"", ""type"": ""Any""}, {""lineNumber"": 82, ""col_offset"": 4, ""nodeName"": ""worldbody"", ""type"": ""Any""}, {""lineNumber"": 94, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 97, ""col_offset"": 4, ""nodeName"": ""_players"", ""type"": ""List[Any]""}, {""lineNumber"": 111, ""col_offset"": 20, ""nodeName"": ""model"", ""type"": ""Any""}, {""lineNumber"": 111, ""col_offset"": 42, ""nodeName"": ""_geom"", ""type"": ""Any""}, {""lineNumber"": 114, ""col_offset"": 14, ""nodeName"": ""find_all"", ""type"": ""nothing""}, {""lineNumber"": 116, ""col_offset"": 8, ""nodeName"": ""geom_id"", ""type"": ""Any""}, {""lineNumber"": 117, ""col_offset"": 43, ""nodeName"": ""player"", ""type"": ""nothing""}, {""lineNumber"": 119, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 130, ""col_offset"": 19, ""nodeName"": ""physics"", ""type"": ""Any""}, {""lineNumber"": 133, ""col_offset"": 22, ""nodeName"": ""geom1"", ""type"": ""Any""}, {""lineNumber"": 133, ""col_offset"": 37, ""nodeName"": ""geom2"", ""type"": ""Any""}, {""lineNumber"": 139, ""col_offset"": 9, ""nodeName"": ""has_self"", ""type"": ""bool""}, {""lineNumber"": 139, ""col_offset"": 22, ""nodeName"": ""player"", ""type"": ""Any""}, {""lineNumber"": 147, ""col_offset"": 8, ""nodeName"": ""_repossessed"", ""type"": ""bool""}, {""lineNumber"": 148, ""col_offset"": 8, ""nodeName"": ""_last_hit"", ""type"": ""Any""}, {""lineNumber"": 148, ""col_offset"": 25, ""nodeName"": ""player"", ""type"": ""Any""}, {""lineNumber"": 150, ""col_offset"": 8, ""nodeName"": ""_hit"", ""type"": ""bool""}, {""lineNumber"": 162, ""col_offset"": 10, ""nodeName"": ""bind"", ""type"": ""Any""}, {""lineNumber"": 162, ""col_offset"": 23, ""nodeName"": ""_geom"", ""type"": ""Any""}, {""lineNumber"": 170, ""col_offset"": 7, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 172, ""col_offset"": 6, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 172, ""col_offset"": 35, ""nodeName"": ""norm"", ""type"": ""Any""}, {""lineNumber"": 174, ""col_offset"": 29, ""nodeName"": ""pos"", ""type"": ""Any""}, {""lineNumber"": 31, ""col_offset"": 6, ""nodeName"": ""os"", ""type"": ""module""}, {""lineNumber"": 46, ""col_offset"": 4, ""nodeName"": ""super"", ""type"": ""Type[super]""}, {""lineNumber"": 46, ""col_offset"": 45, ""nodeName"": ""radius"", ""type"": ""Any""}, {""lineNumber"": 47, ""col_offset"": 14, ""nodeName"": ""_mjcf_root"", ""type"": ""dm_control.mjcf.element.RootElement""}, {""lineNumber"": 51, ""col_offset"": 15, ""nodeName"": ""_get_texture"", ""type"": ""Callable[[Any], Any]""}, {""lineNumber"": 52, ""col_offset"": 17, ""nodeName"": ""_get_texture"", ""type"": ""Callable[[Any], Any]""}, {""lineNumber"": 53, ""col_offset"": 18, ""nodeName"": ""_get_texture"", ""type"": ""Callable[[Any], Any]""}, {""lineNumber"": 54, ""col_offset"": 17, ""nodeName"": ""_get_texture"", ""type"": ""Callable[[Any], Any]""}, {""lineNumber"": 55, ""col_offset"": 17, ""nodeName"": ""_get_texture"", ""type"": ""Callable[[Any], Any]""}, {""lineNumber"": 56, ""col_offset"": 18, ""nodeName"": ""_get_texture"", ""type"": ""Callable[[Any], Any]""}, {""lineNumber"": 57, ""col_offset"": 15, ""nodeName"": ""_mjcf_root"", ""type"": ""dm_control.mjcf.element.RootElement""}, {""lineNumber"": 59, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 60, ""col_offset"": 19, ""nodeName"": ""radius"", ""type"": ""Any""}, {""lineNumber"": 61, ""col_offset"": 14, ""nodeName"": ""radius"", ""type"": ""Any""}, {""lineNumber"": 68, ""col_offset"": 4, ""nodeName"": ""_mjcf_root"", ""type"": ""dm_control.mjcf.element.RootElement""}, {""lineNumber"": 75, ""col_offset"": 4, ""nodeName"": ""_mjcf_root"", ""type"": ""dm_control.mjcf.element.RootElement""}, {""lineNumber"": 82, ""col_offset"": 4, ""nodeName"": ""_mjcf_root"", ""type"": ""dm_control.mjcf.element.RootElement""}, {""lineNumber"": 97, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 111, ""col_offset"": 20, ""nodeName"": ""physics"", ""type"": ""Any""}, {""lineNumber"": 111, ""col_offset"": 42, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 114, ""col_offset"": 14, ""nodeName"": ""mjcf_model"", ""type"": ""nothing""}, {""lineNumber"": 116, ""col_offset"": 18, ""nodeName"": ""name2id"", ""type"": ""Any""}, {""lineNumber"": 116, ""col_offset"": 40, ""nodeName"": ""full_identifier"", ""type"": ""nothing""}, {""lineNumber"": 117, ""col_offset"": 8, ""nodeName"": ""_geom_id_to_player"", ""type"": ""Dict[Any, nothing]""}, {""lineNumber"": 133, ""col_offset"": 22, ""nodeName"": ""contact"", ""type"": ""Any""}, {""lineNumber"": 133, ""col_offset"": 37, ""nodeName"": ""contact"", ""type"": ""Any""}, {""lineNumber"": 134, ""col_offset"": 11, ""nodeName"": ""geom_id"", ""type"": ""Any""}, {""lineNumber"": 134, ""col_offset"": 22, ""nodeName"": ""_geom_id"", ""type"": ""Any""}, {""lineNumber"": 135, ""col_offset"": 10, ""nodeName"": ""has_self"", ""type"": ""bool""}, {""lineNumber"": 137, ""col_offset"": 10, ""nodeName"": ""player"", ""type"": ""Any""}, {""lineNumber"": 141, ""col_offset"": 11, ""nodeName"": ""_last_hit"", ""type"": ""Any""}, {""lineNumber"": 142, ""col_offset"": 10, ""nodeName"": ""_intercepted"", ""type"": ""Any""}, {""lineNumber"": 144, ""col_offset"": 10, ""nodeName"": ""_intercepted"", ""type"": ""bool""}, {""lineNumber"": 147, ""col_offset"": 8, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 147, ""col_offset"": 28, ""nodeName"": ""player"", ""type"": ""Any""}, {""lineNumber"": 147, ""col_offset"": 42, ""nodeName"": ""_last_hit"", ""type"": ""Any""}, {""lineNumber"": 148, ""col_offset"": 8, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 150, ""col_offset"": 8, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 154, ""col_offset"": 4, ""nodeName"": ""super"", ""type"": ""Type[super]""}, {""lineNumber"": 161, ""col_offset"": 4, ""nodeName"": ""super"", ""type"": ""Type[super]""}, {""lineNumber"": 162, ""col_offset"": 10, ""nodeName"": ""physics"", ""type"": ""Any""}, {""lineNumber"": 162, ""col_offset"": 23, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 172, ""col_offset"": 35, ""nodeName"": ""linalg"", ""type"": ""Any""}, {""lineNumber"": 172, ""col_offset"": 50, ""nodeName"": ""pos"", ""type"": ""Any""}, {""lineNumber"": 172, ""col_offset"": 56, ""nodeName"": ""_pos_at_last_step"", ""type"": ""Any""}, {""lineNumber"": 47, ""col_offset"": 14, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 57, ""col_offset"": 15, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 68, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 75, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 82, ""col_offset"": 4, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 114, ""col_offset"": 14, ""nodeName"": ""walker"", ""type"": ""nothing""}, {""lineNumber"": 116, ""col_offset"": 18, ""nodeName"": ""model"", ""type"": ""Any""}, {""lineNumber"": 116, ""col_offset"": 40, ""nodeName"": ""geom"", ""type"": ""nothing""}, {""lineNumber"": 117, ""col_offset"": 8, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 117, ""col_offset"": 32, ""nodeName"": ""geom_id"", ""type"": ""Any""}, {""lineNumber"": 134, ""col_offset"": 22, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 137, ""col_offset"": 19, ""nodeName"": ""get"", ""type"": ""Any""}, {""lineNumber"": 137, ""col_offset"": 47, ""nodeName"": ""geom_id"", ""type"": ""Any""}, {""lineNumber"": 141, ""col_offset"": 11, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 142, ""col_offset"": 10, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 142, ""col_offset"": 30, ""nodeName"": ""team"", ""type"": ""Any""}, {""lineNumber"": 142, ""col_offset"": 45, ""nodeName"": ""team"", ""type"": ""Any""}, {""lineNumber"": 144, ""col_offset"": 10, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 147, ""col_offset"": 42, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 172, ""col_offset"": 35, ""nodeName"": ""np"", ""type"": ""module""}, {""lineNumber"": 172, ""col_offset"": 56, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 114, ""col_offset"": 14, ""nodeName"": ""player"", ""type"": ""nothing""}, {""lineNumber"": 116, ""col_offset"": 18, ""nodeName"": ""physics"", ""type"": ""Any""}, {""lineNumber"": 137, ""col_offset"": 19, ""nodeName"": ""_geom_id_to_player"", ""type"": ""Any""}, {""lineNumber"": 142, ""col_offset"": 30, ""nodeName"": ""player"", ""type"": ""Any""}, {""lineNumber"": 142, ""col_offset"": 45, ""nodeName"": ""_last_hit"", ""type"": ""Any""}, {""lineNumber"": 137, ""col_offset"": 19, ""nodeName"": ""self"", ""type"": ""SoccerBall""}, {""lineNumber"": 142, ""col_offset"": 45, ""nodeName"": ""self"", ""type"": ""SoccerBall""}]",dm_control_locomotion_soccer_soccer_ball,en,16780,json,data,{}
json,"[""c9c35479a88deb1fdc0afe075d64901db9ec8912""]",duvy,de,44,json,data,{}
json,"{
	""author"": [""Atsushi Ohori"", ""Nobuaki Yoshida""],
	""booktitle"": ""Proceedings of the Fourth International Conference on Functional Programming"",
	""booktitleshort"": ""ICFP"",
	""crossref"": ""conf/icfp/1999"",
	""dblpkey"": ""conf/icfp/OhoriY99"",
	""doi"": ""10.1145/317636.317796"",
	""editor"": [""Didier Rmi"", ""Peter Lee""],
	""ee"": ""http://doi.acm.org/10.1145/317636.317796"",
	""isbn"": ""1-58113-111-9"",
	""pages"": ""160-171"",
	""publisher"": ""ACM"",
	""tag"": [""compilation"", ""ml"", ""polymorphism"", ""type inference""],
	""title"": ""Type Inference with Rank 1 Polymorphism for Type-Directed Compilation of ML"",
	""type"": ""inproceedings"",
	""venue"": ""ICFP"",
	""year"": 1999
}",ICFP-1999-OhoriY,en,659,json,data,{}
json,"{
  ""name"" : ""EventHub"",
  ""version"" : ""1.0.0"",
  ""dependencies"": {
    ""body-parser"": ""^1.15.1"",
    ""compression"": ""^1.6.2"",
    ""cors"": ""^2.7.1"",
    ""cron"": ""^1.1.0"",
    ""express"": ""^4.13.4"",
    ""express-session"": ""^1.13.0"",
    ""mkdirp"": ""^0.5.1"",
    ""mongoose"": ""^4.4.17"",
    ""morgan"": ""^1.7.0"",
    ""multer"": ""^1.1.0"",
    ""passport"": ""^0.3.2"",
    ""path"": ""^0.12.7"",
    ""request"": ""^2.72.0"",
    ""time"": ""^0.11.4""
  },
  ""author"": ""clique"",
  ""license"": ""ISC""  
}
",package,en,499,json,data,{}
json,"{""id"": 37884, ""title"": ""[Weekly Big Comic Spirits]  2013No.35 д־"", ""imgs"": [""http://cdn.xie2.com/a/1/29817/1.jpg"", ""http://cdn.xie2.com/a/1/29817/2.jpg"", ""http://cdn.xie2.com/a/1/29817/3.jpg"", ""http://cdn.xie2.com/a/1/29817/4.jpg"", ""http://cdn.xie2.com/a/1/29817/5.jpg"", ""http://cdn.xie2.com/a/1/29817/6.jpg"", ""http://cdn.xie2.com/a/1/29817/7.jpg"", ""http://cdn.xie2.com/a/1/29817/8.jpg""]}",pic-37884,en,390,json,data,{}
json,"{""resourceType"":""ValueSet"",""id"":""2.16.840.1.113883.3.464.1003.110.11.1124"",""meta"":{""versionId"":""17"",""lastUpdated"":""2017-05-04T01:00:13.000-04:00""},""text"":{""status"":""generated"",""div"":""<div xmlns=\""http://www.w3.org/1999/xhtml\"">\n      <h2>Genital Herpes</h2>\n      <p>This value set includes codes from the following code systems:</p>\n      <ul>\n        <li>Include these codes as defined in \n          <a href=\""http://www.snomed.org/\"">\n            <code>http://snomed.info/sct</code>\n          </a>\n          <table class=\""none\"">\n            <tr>\n              <td>\n                <b>Code</b>\n              </td>\n              <td>\n                <b>Display</b>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=129670002\"">129670002</a>\n              </td>\n              <td>Herpetic cervicitis (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=27420004\"">27420004</a>\n              </td>\n              <td>Herpetic vulvovaginitis (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=278068003\"">278068003</a>\n              </td>\n              <td>Herpetic vesicle in vagina (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=33839006\"">33839006</a>\n              </td>\n              <td>Genital herpes simplex (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=402888002\"">402888002</a>\n              </td>\n              <td>Primary herpes simplex infection of genitalia (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=402890001\"">402890001</a>\n              </td>\n              <td>Primary herpetic vulvovaginitis (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=402894005\"">402894005</a>\n              </td>\n              <td>Recurrent genital herpes simplex (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=402896007\"">402896007</a>\n              </td>\n              <td>Recurrent herpetic vulvovaginitis (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=423391007\"">423391007</a>\n              </td>\n              <td>Genital herpes simplex type 2 (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=427578006\"">427578006</a>\n              </td>\n              <td>Herpes simplex of female genitalia (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=439912007\"">439912007</a>\n              </td>\n              <td>Recurrent genital Herpes simplex type 1 infection (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=439913002\"">439913002</a>\n              </td>\n              <td>Recurrent genital Herpes simplex type 2 infection (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=440714005\"">440714005</a>\n              </td>\n              <td>Genital Herpes simplex type 1 infection (disorder)</td>\n              <td/>\n            </tr>\n            <tr>\n              <td>\n                <a href=\""http://browser.ihtsdotools.org/?perspective=full&amp;conceptId1=59819007\"">59819007</a>\n              </td>\n              <td>Herpetic ulceration of vulva (disorder)</td>\n              <td/>\n            </tr>\n          </table>\n        </li>\n      </ul>\n    </div>""},""url"":""http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.110.11.1124"",""version"":""20170504"",""name"":""Genital Herpes"",""status"":""active"",""date"":""2017-05-04T01:00:13-04:00"",""publisher"":""NCQA PHEMUR"",""compose"":{""include"":[{""system"":""http://snomed.info/sct"",""concept"":[{""code"":""129670002"",""display"":""Herpetic cervicitis (disorder)""},{""code"":""27420004"",""display"":""Herpetic vulvovaginitis (disorder)""},{""code"":""278068003"",""display"":""Herpetic vesicle in vagina (disorder)""},{""code"":""33839006"",""display"":""Genital herpes simplex (disorder)""},{""code"":""402888002"",""display"":""Primary herpes simplex infection of genitalia (disorder)""},{""code"":""402890001"",""display"":""Primary herpetic vulvovaginitis (disorder)""},{""code"":""402894005"",""display"":""Recurrent genital herpes simplex (disorder)""},{""code"":""402896007"",""display"":""Recurrent herpetic vulvovaginitis (disorder)""},{""code"":""423391007"",""display"":""Genital herpes simplex type 2 (disorder)""},{""code"":""427578006"",""display"":""Herpes simplex of female genitalia (disorder)""},{""code"":""439912007"",""display"":""Recurrent genital Herpes simplex type 1 infection (disorder)""},{""code"":""439913002"",""display"":""Recurrent genital Herpes simplex type 2 infection (disorder)""},{""code"":""440714005"",""display"":""Genital Herpes simplex type 1 infection (disorder)""},{""code"":""59819007"",""display"":""Herpetic ulceration of vulva (disorder)""}]}]}}",ValueSet-2.16.840.1.113883.3.464.1003.110.11.1124,en,6133,json,data,{}
md,"# @jridgewell/trace-mapping

> Trace the original position through a source map

`trace-mapping` allows you to take the line and column of an output file and trace it to the
original location in the source file through a source map.

You may already be familiar with the [`source-map`][source-map] package's `SourceMapConsumer`. This
provides the same `originalPositionFor` and `generatedPositionFor` API, without requiring WASM.

## Installation

```sh
npm install @jridgewell/trace-mapping
```

## Usage

```typescript
import {
  TraceMap,
  originalPositionFor,
  generatedPositionFor,
  sourceContentFor,
} from '@jridgewell/trace-mapping';

const tracer = new TraceMap({
  version: 3,
  sources: ['input.js'],
  sourcesContent: ['content of input.js'],
  names: ['foo'],
  mappings: 'KAyCIA',
});

// Lines start at line 1, columns at column 0.
const traced = originalPositionFor(tracer, { line: 1, column: 5 });
assert.deepEqual(traced, {
  source: 'input.js',
  line: 42,
  column: 4,
  name: 'foo',
});

const content = sourceContentFor(tracer, traced.source);
assert.strictEqual(content, 'content for input.js');

const generated = generatedPositionFor(tracer, {
  source: 'input.js',
  line: 42,
  column: 4,
});
assert.deepEqual(generated, {
  line: 1,
  column: 5,
});
```

We also provide a lower level API to get the actual segment that matches our line and column. Unlike
`originalPositionFor`, `traceSegment` uses a 0-base for `line`:

```typescript
import { traceSegment } from '@jridgewell/trace-mapping';

// line is 0-base.
const traced = traceSegment(tracer, /* line */ 0, /* column */ 5);

// Segments are [outputColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]
// Again, line is 0-base and so is sourceLine
assert.deepEqual(traced, [5, 0, 41, 4, 0]);
```

### SectionedSourceMaps

The sourcemap spec defines a special `sections` field that's designed to handle concatenation of
output code with associated sourcemaps. This type of sourcemap is rarely used (no major build tool
produces it), but if you are hand coding a concatenation you may need it. We provide an `AnyMap`
helper that can receive either a regular sourcemap or a `SectionedSourceMap` and returns a
`TraceMap` instance:

```typescript
import { AnyMap } from '@jridgewell/trace-mapping';
const fooOutput = 'foo';
const barOutput = 'bar';
const output = [fooOutput, barOutput].join('\n');

const sectioned = new AnyMap({
  version: 3,
  sections: [
    {
      // 0-base line and column
      offset: { line: 0, column: 0 },
      // fooOutput's sourcemap
      map: {
        version: 3,
        sources: ['foo.js'],
        names: ['foo'],
        mappings: 'AAAAA',
      },
    },
    {
      // barOutput's sourcemap will not affect the first line, only the second
      offset: { line: 1, column: 0 },
      map: {
        version: 3,
        sources: ['bar.js'],
        names: ['bar'],
        mappings: 'AAAAA',
      },
    },
  ],
});

const traced = originalPositionFor(sectioned, {
  line: 2,
  column: 0,
});

assert.deepEqual(traced, {
  source: 'bar.js',
  line: 1,
  column: 0,
  name: 'bar',
});
```

## Benchmarks

```
node v18.0.0

amp.js.map - 45120 segments

Memory Usage:
trace-mapping decoded         562400 bytes
trace-mapping encoded        5706544 bytes
source-map-js               10717664 bytes
source-map-0.6.1            17446384 bytes
source-map-0.8.0             9701757 bytes
Smallest memory usage is trace-mapping decoded

Init speed:
trace-mapping:    decoded JSON input x 180 ops/sec ±0.34% (85 runs sampled)
trace-mapping:    encoded JSON input x 364 ops/sec ±1.77% (89 runs sampled)
trace-mapping:    decoded Object input x 3,116 ops/sec ±0.50% (96 runs sampled)
trace-mapping:    encoded Object input x 410 ops/sec ±2.62% (85 runs sampled)
source-map-js:    encoded Object input x 84.23 ops/sec ±0.91% (73 runs sampled)
source-map-0.6.1: encoded Object input x 37.21 ops/sec ±2.08% (51 runs sampled)
Fastest is trace-mapping:    decoded Object input

Trace speed:
trace-mapping:    decoded originalPositionFor x 3,952,212 ops/sec ±0.17% (98 runs sampled)
trace-mapping:    encoded originalPositionFor x 3,487,468 ops/sec ±1.58% (90 runs sampled)
source-map-js:    encoded originalPositionFor x 827,730 ops/sec ±0.78% (97 runs sampled)
source-map-0.6.1: encoded originalPositionFor x 748,991 ops/sec ±0.53% (94 runs sampled)
source-map-0.8.0: encoded originalPositionFor x 2,532,894 ops/sec ±0.57% (95 runs sampled)
Fastest is trace-mapping:    decoded originalPositionFor


***


babel.min.js.map - 347793 segments

Memory Usage:
trace-mapping decoded          89832 bytes
trace-mapping encoded       35474640 bytes
source-map-js               51257176 bytes
source-map-0.6.1            63515664 bytes
source-map-0.8.0            42933752 bytes
Smallest memory usage is trace-mapping decoded

Init speed:
trace-mapping:    decoded JSON input x 15.41 ops/sec ±8.65% (34 runs sampled)
trace-mapping:    encoded JSON input x 28.20 ops/sec ±12.87% (42 runs sampled)
trace-mapping:    decoded Object input x 964 ops/sec ±0.36% (99 runs sampled)
trace-mapping:    encoded Object input x 31.77 ops/sec ±13.79% (45 runs sampled)
source-map-js:    encoded Object input x 6.45 ops/sec ±5.16% (21 runs sampled)
source-map-0.6.1: encoded Object input x 4.07 ops/sec ±5.24% (15 runs sampled)
Fastest is trace-mapping:    decoded Object input

Trace speed:
trace-mapping:    decoded originalPositionFor x 7,183,038 ops/sec ±0.58% (95 runs sampled)
trace-mapping:    encoded originalPositionFor x 5,192,185 ops/sec ±0.41% (100 runs sampled)
source-map-js:    encoded originalPositionFor x 4,259,489 ops/sec ±0.79% (94 runs sampled)
source-map-0.6.1: encoded originalPositionFor x 3,742,629 ops/sec ±0.71% (95 runs sampled)
source-map-0.8.0: encoded originalPositionFor x 6,270,211 ops/sec ±0.64% (94 runs sampled)
Fastest is trace-mapping:    decoded originalPositionFor


***


preact.js.map - 1992 segments

Memory Usage:
trace-mapping decoded          37128 bytes
trace-mapping encoded         247280 bytes
source-map-js                1143536 bytes
source-map-0.6.1             1290992 bytes
source-map-0.8.0               96544 bytes
Smallest memory usage is trace-mapping decoded

Init speed:
trace-mapping:    decoded JSON input x 3,483 ops/sec ±0.30% (98 runs sampled)
trace-mapping:    encoded JSON input x 6,092 ops/sec ±0.18% (97 runs sampled)
trace-mapping:    decoded Object input x 249,076 ops/sec ±0.24% (98 runs sampled)
trace-mapping:    encoded Object input x 14,555 ops/sec ±0.48% (100 runs sampled)
source-map-js:    encoded Object input x 2,447 ops/sec ±0.36% (99 runs sampled)
source-map-0.6.1: encoded Object input x 1,201 ops/sec ±0.57% (96 runs sampled)
Fastest is trace-mapping:    decoded Object input

Trace speed:
trace-mapping:    decoded originalPositionFor x 7,620,192 ops/sec ±0.09% (99 runs sampled)
trace-mapping:    encoded originalPositionFor x 6,872,554 ops/sec ±0.30% (97 runs sampled)
source-map-js:    encoded originalPositionFor x 2,489,570 ops/sec ±0.35% (94 runs sampled)
source-map-0.6.1: encoded originalPositionFor x 1,698,633 ops/sec ±0.28% (98 runs sampled)
source-map-0.8.0: encoded originalPositionFor x 4,015,644 ops/sec ±0.22% (98 runs sampled)
Fastest is trace-mapping:    decoded originalPositionFor


***


react.js.map - 5726 segments

Memory Usage:
trace-mapping decoded          16176 bytes
trace-mapping encoded         681552 bytes
source-map-js                2418352 bytes
source-map-0.6.1             2443672 bytes
source-map-0.8.0              111768 bytes
Smallest memory usage is trace-mapping decoded

Init speed:
trace-mapping:    decoded JSON input x 1,720 ops/sec ±0.34% (98 runs sampled)
trace-mapping:    encoded JSON input x 4,406 ops/sec ±0.35% (100 runs sampled)
trace-mapping:    decoded Object input x 92,122 ops/sec ±0.10% (99 runs sampled)
trace-mapping:    encoded Object input x 5,385 ops/sec ±0.37% (99 runs sampled)
source-map-js:    encoded Object input x 794 ops/sec ±0.40% (98 runs sampled)
source-map-0.6.1: encoded Object input x 416 ops/sec ±0.54% (91 runs sampled)
Fastest is trace-mapping:    decoded Object input

Trace speed:
trace-mapping:    decoded originalPositionFor x 32,759,519 ops/sec ±0.33% (100 runs sampled)
trace-mapping:    encoded originalPositionFor x 31,116,306 ops/sec ±0.33% (97 runs sampled)
source-map-js:    encoded originalPositionFor x 17,458,435 ops/sec ±0.44% (97 runs sampled)
source-map-0.6.1: encoded originalPositionFor x 12,687,097 ops/sec ±0.43% (95 runs sampled)
source-map-0.8.0: encoded originalPositionFor x 23,538,275 ops/sec ±0.38% (95 runs sampled)
Fastest is trace-mapping:    decoded originalPositionFor
```

[source-map]: https://www.npmjs.com/package/source-map
",README,en,9017,markdown,text,{}
md,"# @babel/helpers

> Collection of helper functions used by Babel transforms.

See our website [@babel/helpers](https://babeljs.io/docs/en/babel-helpers) for more information.

## Install

Using npm:

```sh
npm install --save-dev @babel/helpers
```

or using yarn:

```sh
yarn add @babel/helpers --dev
```
",README_1,en,324,markdown,text,{}
md,"# @babel/helper-skip-transparent-expression-wrappers

> Helper which skips types and parentheses

See our website [@babel/helper-skip-transparent-expression-wrappers](https://babeljs.io/docs/en/babel-helper-skip-transparent-expression-wrappers) for more information.

## Install

Using npm:

```sh
npm install --save @babel/helper-skip-transparent-expression-wrappers
```

or using yarn:

```sh
yarn add @babel/helper-skip-transparent-expression-wrappers
```
",README_2,en,478,markdown,text,{}
md,"# braces [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/braces.svg?style=flat)](https://www.npmjs.com/package/braces) [![NPM monthly downloads](https://img.shields.io/npm/dm/braces.svg?style=flat)](https://npmjs.org/package/braces) [![NPM total downloads](https://img.shields.io/npm/dt/braces.svg?style=flat)](https://npmjs.org/package/braces) [![Linux Build Status](https://img.shields.io/travis/micromatch/braces.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/braces)

> Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.

Please consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.

## Install

Install with [npm](https://www.npmjs.com/):

```sh
$ npm install --save braces
```

## v3.0.0 Released!!

See the [changelog](CHANGELOG.md) for details.

## Why use braces?

Brace patterns make globs more powerful by adding the ability to match specific ranges and sequences of characters.

* **Accurate** - complete support for the [Bash 4.3 Brace Expansion](www.gnu.org/software/bash/) specification (passes all of the Bash braces tests)
* **[fast and performant](#benchmarks)** - Starts fast, runs fast and [scales well](#performance) as patterns increase in complexity.
* **Organized code base** - The parser and compiler are easy to maintain and update when edge cases crop up.
* **Well-tested** - Thousands of test assertions, and passes all of the Bash, minimatch, and [brace-expansion](https://github.com/juliangruber/brace-expansion) unit tests (as of the date this was written).
* **Safer** - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see [catastrophic backtracking](https://www.regular-expressions.info/catastrophic.html)).
* [Supports lists](#lists) - (aka ""sets"") `a/{b,c}/d` => `['a/b/d', 'a/c/d']`
* [Supports sequences](#sequences) - (aka ""ranges"") `{01..03}` => `['01', '02', '03']`
* [Supports steps](#steps) - (aka ""increments"") `{2..10..2}` => `['2', '4', '6', '8', '10']`
* [Supports escaping](#escaping) - To prevent evaluation of special characters.

## Usage

The main export is a function that takes one or more brace `patterns` and `options`.

```js
const braces = require('braces');
// braces(patterns[, options]);

console.log(braces(['{01..05}', '{a..e}']));
//=> ['(0[1-5])', '([a-e])']

console.log(braces(['{01..05}', '{a..e}'], { expand: true }));
//=> ['01', '02', '03', '04', '05', 'a', 'b', 'c', 'd', 'e']
```

### Brace Expansion vs. Compilation

By default, brace patterns are compiled into strings that are optimized for creating regular expressions and matching.

**Compiled**

```js
console.log(braces('a/{x,y,z}/b')); 
//=> ['a/(x|y|z)/b']
console.log(braces(['a/{01..20}/b', 'a/{1..5}/b'])); 
//=> [ 'a/(0[1-9]|1[0-9]|20)/b', 'a/([1-5])/b' ]
```

**Expanded**

Enable brace expansion by setting the `expand` option to true, or by using [braces.expand()](#expand) (returns an array similar to what you'd expect from Bash, or `echo {1..5}`, or [minimatch](https://github.com/isaacs/minimatch)):

```js
console.log(braces('a/{x,y,z}/b', { expand: true }));
//=> ['a/x/b', 'a/y/b', 'a/z/b']

console.log(braces.expand('{01..10}'));
//=> ['01','02','03','04','05','06','07','08','09','10']
```

### Lists

Expand lists (like Bash ""sets""):

```js
console.log(braces('a/{foo,bar,baz}/*.js'));
//=> ['a/(foo|bar|baz)/*.js']

console.log(braces.expand('a/{foo,bar,baz}/*.js'));
//=> ['a/foo/*.js', 'a/bar/*.js', 'a/baz/*.js']
```

### Sequences

Expand ranges of characters (like Bash ""sequences""):

```js
console.log(braces.expand('{1..3}'));                // ['1', '2', '3']
console.log(braces.expand('a/{1..3}/b'));            // ['a/1/b', 'a/2/b', 'a/3/b']
console.log(braces('{a..c}', { expand: true }));     // ['a', 'b', 'c']
console.log(braces('foo/{a..c}', { expand: true })); // ['foo/a', 'foo/b', 'foo/c']

// supports zero-padded ranges
console.log(braces('a/{01..03}/b'));   //=> ['a/(0[1-3])/b']
console.log(braces('a/{001..300}/b')); //=> ['a/(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)/b']
```

See [fill-range](https://github.com/jonschlinkert/fill-range) for all available range-expansion options.

### Steppped ranges

Steps, or increments, may be used with ranges:

```js
console.log(braces.expand('{2..10..2}'));
//=> ['2', '4', '6', '8', '10']

console.log(braces('{2..10..2}'));
//=> ['(2|4|6|8|10)']
```

When the [.optimize](#optimize) method is used, or [options.optimize](#optionsoptimize) is set to true, sequences are passed to [to-regex-range](https://github.com/jonschlinkert/to-regex-range) for expansion.

### Nesting

Brace patterns may be nested. The results of each expanded string are not sorted, and left to right order is preserved.

**""Expanded"" braces**

```js
console.log(braces.expand('a{b,c,/{x,y}}/e'));
//=> ['ab/e', 'ac/e', 'a/x/e', 'a/y/e']

console.log(braces.expand('a/{x,{1..5},y}/c'));
//=> ['a/x/c', 'a/1/c', 'a/2/c', 'a/3/c', 'a/4/c', 'a/5/c', 'a/y/c']
```

**""Optimized"" braces**

```js
console.log(braces('a{b,c,/{x,y}}/e'));
//=> ['a(b|c|/(x|y))/e']

console.log(braces('a/{x,{1..5},y}/c'));
//=> ['a/(x|([1-5])|y)/c']
```

### Escaping

**Escaping braces**

A brace pattern will not be expanded or evaluted if _either the opening or closing brace is escaped_:

```js
console.log(braces.expand('a\\{d,c,b}e'));
//=> ['a{d,c,b}e']

console.log(braces.expand('a{d,c,b\\}e'));
//=> ['a{d,c,b}e']
```

**Escaping commas**

Commas inside braces may also be escaped:

```js
console.log(braces.expand('a{b\\,c}d'));
//=> ['a{b,c}d']

console.log(braces.expand('a{d\\,c,b}e'));
//=> ['ad,ce', 'abe']
```

**Single items**

Following bash conventions, a brace pattern is also not expanded when it contains a single character:

```js
console.log(braces.expand('a{b}c'));
//=> ['a{b}c']
```

## Options

### options.maxLength

**Type**: `Number`

**Default**: `65,536`

**Description**: Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera.

```js
console.log(braces('a/{b,c}/d', { maxLength: 3 }));  //=> throws an error
```

### options.expand

**Type**: `Boolean`

**Default**: `undefined`

**Description**: Generate an ""expanded"" brace pattern (alternatively you can use the `braces.expand()` method, which does the same thing).

```js
console.log(braces('a/{b,c}/d', { expand: true }));
//=> [ 'a/b/d', 'a/c/d' ]
```

### options.nodupes

**Type**: `Boolean`

**Default**: `undefined`

**Description**: Remove duplicates from the returned array.

### options.rangeLimit

**Type**: `Number`

**Default**: `1000`

**Description**: To prevent malicious patterns from being passed by users, an error is thrown when `braces.expand()` is used or `options.expand` is true and the generated range will exceed the `rangeLimit`.

You can customize `options.rangeLimit` or set it to `Inifinity` to disable this altogether.

**Examples**

```js
// pattern exceeds the ""rangeLimit"", so it's optimized automatically
console.log(braces.expand('{1..1000}'));
//=> ['([1-9]|[1-9][0-9]{1,2}|1000)']

// pattern does not exceed ""rangeLimit"", so it's NOT optimized
console.log(braces.expand('{1..100}'));
//=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']
```

### options.transform

**Type**: `Function`

**Default**: `undefined`

**Description**: Customize range expansion.

**Example: Transforming non-numeric values**

```js
const alpha = braces.expand('x/{a..e}/y', {
  transform(value, index) {
    // When non-numeric values are passed, ""value"" is a character code.
    return 'foo/' + String.fromCharCode(value) + '-' + index;
  }
});
console.log(alpha);
//=> [ 'x/foo/a-0/y', 'x/foo/b-1/y', 'x/foo/c-2/y', 'x/foo/d-3/y', 'x/foo/e-4/y' ]
```

**Example: Transforming numeric values**

```js
const numeric = braces.expand('{1..5}', {
  transform(value) {
    // when numeric values are passed, ""value"" is a number
    return 'foo/' + value * 2;
  }
});
console.log(numeric); 
//=> [ 'foo/2', 'foo/4', 'foo/6', 'foo/8', 'foo/10' ]
```

### options.quantifiers

**Type**: `Boolean`

**Default**: `undefined`

**Description**: In regular expressions, quanitifiers can be used to specify how many times a token can be repeated. For example, `a{1,3}` will match the letter `a` one to three times.

Unfortunately, regex quantifiers happen to share the same syntax as [Bash lists](#lists)

The `quantifiers` option tells braces to detect when [regex quantifiers](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#quantifiers) are defined in the given pattern, and not to try to expand them as lists.

**Examples**

```js
const braces = require('braces');
console.log(braces('a/b{1,3}/{x,y,z}'));
//=> [ 'a/b(1|3)/(x|y|z)' ]
console.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true}));
//=> [ 'a/b{1,3}/(x|y|z)' ]
console.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true, expand: true}));
//=> [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ]
```

### options.unescape

**Type**: `Boolean`

**Default**: `undefined`

**Description**: Strip backslashes that were used for escaping from the result.

## What is ""brace expansion""?

Brace expansion is a type of parameter expansion that was made popular by unix shells for generating lists of strings, as well as regex-like matching when used alongside wildcards (globs).

In addition to ""expansion"", braces are also used for matching. In other words:

* [brace expansion](#brace-expansion) is for generating new lists
* [brace matching](#brace-matching) is for filtering existing lists

<details>
<summary><strong>More about brace expansion</strong> (click to expand)</summary>

There are two main types of brace expansion:

1. **lists**: which are defined using comma-separated values inside curly braces: `{a,b,c}`
2. **sequences**: which are defined using a starting value and an ending value, separated by two dots: `a{1..3}b`. Optionally, a third argument may be passed to define a ""step"" or increment to use: `a{1..100..10}b`. These are also sometimes referred to as ""ranges"".

Here are some example brace patterns to illustrate how they work:

**Sets**

```
{a,b,c}       => a b c
{a,b,c}{1,2}  => a1 a2 b1 b2 c1 c2
```

**Sequences**

```
{1..9}        => 1 2 3 4 5 6 7 8 9
{4..-4}       => 4 3 2 1 0 -1 -2 -3 -4
{1..20..3}    => 1 4 7 10 13 16 19
{a..j}        => a b c d e f g h i j
{j..a}        => j i h g f e d c b a
{a..z..3}     => a d g j m p s v y
```

**Combination**

Sets and sequences can be mixed together or used along with any other strings.

```
{a,b,c}{1..3}   => a1 a2 a3 b1 b2 b3 c1 c2 c3
foo/{a,b,c}/bar => foo/a/bar foo/b/bar foo/c/bar
```

The fact that braces can be ""expanded"" from relatively simple patterns makes them ideal for quickly generating test fixtures, file paths, and similar use cases.

## Brace matching

In addition to _expansion_, brace patterns are also useful for performing regular-expression-like matching.

For example, the pattern `foo/{1..3}/bar` would match any of following strings:

```
foo/1/bar
foo/2/bar
foo/3/bar
```

But not:

```
baz/1/qux
baz/2/qux
baz/3/qux
```

Braces can also be combined with [glob patterns](https://github.com/jonschlinkert/micromatch) to perform more advanced wildcard matching. For example, the pattern `*/{1..3}/*` would match any of following strings:

```
foo/1/bar
foo/2/bar
foo/3/bar
baz/1/qux
baz/2/qux
baz/3/qux
```

## Brace matching pitfalls

Although brace patterns offer a user-friendly way of matching ranges or sets of strings, there are also some major disadvantages and potential risks you should be aware of.

### tldr

**""brace bombs""**

* brace expansion can eat up a huge amount of processing resources
* as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially
* users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!)

For a more detailed explanation with examples, see the [geometric complexity](#geometric-complexity) section.

### The solution

Jump to the [performance section](#performance) to see how Braces solves this problem in comparison to other libraries.

### Geometric complexity

At minimum, brace patterns with sets limited to two elements have quadradic or `O(n^2)` complexity. But the complexity of the algorithm increases exponentially as the number of sets, _and elements per set_, increases, which is `O(n^c)`.

For example, the following sets demonstrate quadratic (`O(n^2)`) complexity:

```
{1,2}{3,4}      => (2X2)    => 13 14 23 24
{1,2}{3,4}{5,6} => (2X2X2)  => 135 136 145 146 235 236 245 246
```

But add an element to a set, and we get a n-fold Cartesian product with `O(n^c)` complexity:

```
{1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248 
                                    249 257 258 259 267 268 269 347 348 349 357 
                                    358 359 367 368 369
```

Now, imagine how this complexity grows given that each element is a n-tuple:

```
{1..100}{1..100}         => (100X100)     => 10,000 elements (38.4 kB)
{1..100}{1..100}{1..100} => (100X100X100) => 1,000,000 elements (5.76 MB)
```

Although these examples are clearly contrived, they demonstrate how brace patterns can quickly grow out of control.

**More information**

Interested in learning more about brace expansion?

* [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion)
* [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion)
* [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product)

</details>

## Performance

Braces is not only screaming fast, it's also more accurate the other brace expansion libraries.

### Better algorithms

Fortunately there is a solution to the [""brace bomb"" problem](#brace-matching-pitfalls): _don't expand brace patterns into an array when they're used for matching_.

Instead, convert the pattern into an optimized regular expression. This is easier said than done, and braces is the only library that does this currently.

**The proof is in the numbers**

Minimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using `braces()` and `minimatch.braceExpand()`, respectively.

| **Pattern**                 | **braces**         | **[minimatch][]**            |
| ---                         | ---                | ---                          |
| `{1..9007199254740991}`[^1] | `298 B` (5ms 459μs)|  N/A (freezes)               |
| `{1..1000000000000000}`     | `41 B` (1ms 15μs)  |  N/A (freezes)               |
| `{1..100000000000000}`      | `40 B` (890μs)     |  N/A (freezes)               |
| `{1..10000000000000}`       | `39 B` (2ms 49μs)  |  N/A (freezes)               |
| `{1..1000000000000}`        | `38 B` (608μs)     |  N/A (freezes)               |
| `{1..100000000000}`         | `37 B` (397μs)     |  N/A (freezes)               |
| `{1..10000000000}`          | `35 B` (983μs)     |  N/A (freezes)               |
| `{1..1000000000}`           | `34 B` (798μs)     |  N/A (freezes)               |
| `{1..100000000}`            | `33 B` (733μs)     |  N/A (freezes)               |
| `{1..10000000}`             | `32 B` (5ms 632μs) | `78.89 MB` (16s 388ms 569μs) |
| `{1..1000000}`              | `31 B` (1ms 381μs) | `6.89 MB` (1s 496ms 887μs)   |
| `{1..100000}`               | `30 B` (950μs)     | `588.89 kB` (146ms 921μs)    |
| `{1..10000}`                | `29 B` (1ms 114μs) | `48.89 kB` (14ms 187μs)      |
| `{1..1000}`                 | `28 B` (760μs)     | `3.89 kB` (1ms 453μs)        |
| `{1..100}`                  | `22 B` (345μs)     | `291 B` (196μs)              |
| `{1..10}`                   | `10 B` (533μs)     | `20 B` (37μs)                |
| `{1..3}`                    | `7 B` (190μs)      | `5 B` (27μs)                 |

### Faster algorithms

When you need expansion, braces is still much faster.

_(the following results were generated using `braces.expand()` and `minimatch.braceExpand()`, respectively)_

| **Pattern**     | **braces**                  | **[minimatch][]**            |
| ---             | ---                         | ---                          |
| `{1..10000000}` | `78.89 MB` (2s 698ms 642μs) | `78.89 MB` (18s 601ms 974μs) |
| `{1..1000000}`  | `6.89 MB` (458ms 576μs)     | `6.89 MB` (1s 491ms 621μs)   |
| `{1..100000}`   | `588.89 kB` (20ms 728μs)    | `588.89 kB` (156ms 919μs)    |
| `{1..10000}`    | `48.89 kB` (2ms 202μs)      | `48.89 kB` (13ms 641μs)      |
| `{1..1000}`     | `3.89 kB` (1ms 796μs)       | `3.89 kB` (1ms 958μs)        |
| `{1..100}`      | `291 B` (424μs)             | `291 B` (211μs)              |
| `{1..10}`       | `20 B` (487μs)              | `20 B` (72μs)                |
| `{1..3}`        | `5 B` (166μs)               | `5 B` (27μs)                 |

If you'd like to run these comparisons yourself, see [test/support/generate.js](test/support/generate.js).

## Benchmarks

### Running benchmarks

Install dev dependencies:

```bash
npm i -d && npm benchmark
```

### Latest results

Braces is more accurate, without sacrificing performance.

```bash
# range (expanded)
  braces x 29,040 ops/sec ±3.69% (91 runs sampled))
  minimatch x 4,735 ops/sec ±1.28% (90 runs sampled)

# range (optimized for regex)
  braces x 382,878 ops/sec ±0.56% (94 runs sampled)
  minimatch x 1,040 ops/sec ±0.44% (93 runs sampled)

# nested ranges (expanded)
  braces x 19,744 ops/sec ±2.27% (92 runs sampled))
  minimatch x 4,579 ops/sec ±0.50% (93 runs sampled)

# nested ranges (optimized for regex)
  braces x 246,019 ops/sec ±2.02% (93 runs sampled)
  minimatch x 1,028 ops/sec ±0.39% (94 runs sampled)

# set (expanded) 
  braces x 138,641 ops/sec ±0.53% (95 runs sampled)
  minimatch x 219,582 ops/sec ±0.98% (94 runs sampled)

# set (optimized for regex)
  braces x 388,408 ops/sec ±0.41% (95 runs sampled)
  minimatch x 44,724 ops/sec ±0.91% (89 runs sampled)

# nested sets (expanded)
  braces x 84,966 ops/sec ±0.48% (94 runs sampled)
  minimatch x 140,720 ops/sec ±0.37% (95 runs sampled)

# nested sets (optimized for regex)
  braces x 263,340 ops/sec ±2.06% (92 runs sampled)
  minimatch x 28,714 ops/sec ±0.40% (90 runs sampled)
```

## About

<details>
<summary><strong>Contributing</strong></summary>

Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).

</details>

<details>
<summary><strong>Running Tests</strong></summary>

Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:

```sh
$ npm install && npm test
```

</details>

<details>
<summary><strong>Building docs</strong></summary>

_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_

To generate the readme, run the following command:

```sh
$ npm install -g verbose/verb#dev verb-generate-readme && verb
```

</details>

### Contributors

| **Commits** | **Contributor** |  
| --- | --- |  
| 197 | [jonschlinkert](https://github.com/jonschlinkert) |  
| 4   | [doowb](https://github.com/doowb) |  
| 1   | [es128](https://github.com/es128) |  
| 1   | [eush77](https://github.com/eush77) |  
| 1   | [hemanth](https://github.com/hemanth) |  
| 1   | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |  

### Author

**Jon Schlinkert**

* [GitHub Profile](https://github.com/jonschlinkert)
* [Twitter Profile](https://twitter.com/jonschlinkert)
* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)

### License

Copyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).
Released under the [MIT License](LICENSE).

***

_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 08, 2019._",README_3,en,21722,markdown,text,{}
md,"# @babel/plugin-proposal-private-methods

> This plugin transforms private class methods

See our website [@babel/plugin-proposal-private-methods](https://babeljs.io/docs/en/babel-plugin-proposal-private-methods) for more information.

## Install

Using npm:

```sh
npm install --save-dev @babel/plugin-proposal-private-methods
```

or using yarn:

```sh
yarn add @babel/plugin-proposal-private-methods --dev
```
",README_4,en,432,markdown,text,{}
md,"# once

Only call a function once.

## usage

```javascript
var once = require('once')

function load (file, cb) {
  cb = once(cb)
  loader.load('file')
  loader.once('load', cb)
  loader.once('error', cb)
}
```

Or add to the Function.prototype in a responsible way:

```javascript
// only has to be done once
require('once').proto()

function load (file, cb) {
  cb = cb.once()
  loader.load('file')
  loader.once('load', cb)
  loader.once('error', cb)
}
```

Ironically, the prototype feature makes this module twice as
complicated as necessary.

To check whether you function has been called, use `fn.called`. Once the
function is called for the first time the return value of the original
function is saved in `fn.value` and subsequent calls will continue to
return this value.

```javascript
var once = require('once')

function load (cb) {
  cb = once(cb)
  var stream = createStream()
  stream.once('data', cb)
  stream.once('end', function () {
    if (!cb.called) cb(new Error('not found'))
  })
}
```

## `once.strict(func)`

Throw an error if the function is called twice.

Some functions are expected to be called only once. Using `once` for them would
potentially hide logical errors.

In the example below, the `greet` function has to call the callback only once:

```javascript
function greet (name, cb) {
  // return is missing from the if statement
  // when no name is passed, the callback is called twice
  if (!name) cb('Hello anonymous')
  cb('Hello ' + name)
}

function log (msg) {
  console.log(msg)
}

// this will print 'Hello anonymous' but the logical error will be missed
greet(null, once(msg))

// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time
greet(null, once.strict(msg))
```
",README_5,en,1851,markdown,text,{}
md,"# Serializable Closure

<a href=""https://github.com/laravel/serializable-closure/actions"">
    <img src=""https://github.com/laravel/serializable-closure/workflows/tests/badge.svg"" alt=""Build Status"">
</a>
<a href=""https://packagist.org/packages/laravel/serializable-closure"">
    <img src=""https://img.shields.io/packagist/dt/laravel/serializable-closure"" alt=""Total Downloads"">
</a>
<a href=""https://packagist.org/packages/laravel/serializable-closure"">
    <img src=""https://img.shields.io/packagist/v/laravel/serializable-closure"" alt=""Latest Stable Version"">
</a>
<a href=""https://packagist.org/packages/laravel/serializable-closure"">
    <img src=""https://img.shields.io/packagist/l/laravel/serializable-closure"" alt=""License"">
</a>

## Introduction

> This project is a fork of the excellent [opis/closure: 3.x](https://github.com/opis/closure) package. At Laravel, we decided to fork this package as the upcoming version [4.x](https://github.com/opis/closure) is a complete rewrite on top of the [FFI extension](https://www.php.net/manual/en/book.ffi.php). As Laravel is a web framework, and FFI is not enabled by default in web requests, this fork allows us to keep using the `3.x` series while adding support for new PHP versions.

Laravel Serializable Closure provides an easy and secure way to **serialize closures in PHP**.

## Official Documentation

### Installation

> **Requires [PHP 7.4+](https://php.net/releases/)**

First, install Laravel Serializable Closure via the [Composer](https://getcomposer.org/) package manager:

```bash
composer require laravel/serializable-closure
```

### Usage

You may serialize a closure this way:

```php
use Laravel\SerializableClosure\SerializableClosure;

$closure = fn () => 'james';

// Recommended
SerializableClosure::setSecretKey('secret');

$serialized = serialize(new SerializableClosure($closure));
$closure = unserialize($serialized)->getClosure();

echo $closure(); // james;
```

### Caveats

1. Creating **anonymous classes** within closures is not supported.
2. Using attributes within closures is not supported.
3. Serializing closures on REPL environments such as Laravel Tinker is not supported.

## Contributing

Thank you for considering contributing to Serializable Closure! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).

## Code of Conduct

In order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).

## Security Vulnerabilities

Please review [our security policy](https://github.com/laravel/serializable-closure/security/policy) on how to report security vulnerabilities.

## License

Serializable Closure is open-sourced software licensed under the [MIT license](LICENSE.md).
",README_6,en,2904,markdown,text,{}
md,"# [postcss][postcss]-merge-rules

> Merge CSS rules with PostCSS.

## Install

With [npm](https://npmjs.org/package/postcss-merge-rules) do:

```
npm install postcss-merge-rules --save
```

## Examples

This module will attempt to merge *adjacent* CSS rules:

### By declarations

#### Input

```css
a {
    color: blue;
    font-weight: bold
}

p {
    color: blue;
    font-weight: bold
}
```

#### Output

```css
a,p {
    color: blue;
    font-weight: bold
}
```

### By selectors

#### Input

```css
a {
    color: blue
}

a {
    font-weight: bold
}
```

#### Output

```css
a {
    color: blue;
    font-weight: bold
}
```

### By partial declarations

#### Input

```css
a {
    font-weight: bold
}

p {
    color: blue;
    font-weight: bold
}
```

#### Output

```css
a,p {
    font-weight: bold
}

p {
    color: blue
}
```

## Usage

See the [PostCSS documentation](https://github.com/postcss/postcss#usage) for
examples for your environment.

## Contributors

See [CONTRIBUTORS.md](https://github.com/cssnano/cssnano/blob/master/CONTRIBUTORS.md).

## License

MIT © [Ben Briggs](http://beneb.info)

[postcss]: https://github.com/postcss/postcss
",README_7,en,1264,markdown,text,{}
md,"# Installation
> `npm install --save @types/glob`

# Summary
This package contains type definitions for Glob (https://github.com/isaacs/node-glob).

# Details
Files were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/glob.

### Additional Details
 * Last updated: Tue, 19 Oct 2021 22:01:22 GMT
 * Dependencies: [@types/minimatch](https://npmjs.com/package/@types/minimatch), [@types/node](https://npmjs.com/package/@types/node)
 * Global values: none

# Credits
These definitions were written by [vvakame](https://github.com/vvakame), [voy](https://github.com/voy), [Klaus Meinhardt](https://github.com/ajafff), and [Piotr Błażejewicz](https://github.com/peterblazejewicz).
",README_8,en,728,markdown,text,{}
md,"# `unlessEmpty()`

Alias for the [`whenNotEmpty()`](#whenNotEmpty) method

[View source on GitHub](https://github.com/ecrmnn/collect.js/blob/master/src/methods/unlessEmpty.js)",unlessEmpty,en,179,markdown,text,{}
php,"<?php

namespace EasyCorp\Bundle\EasyAdminBundle\Configuration;

final class ActionCollection
{
    private const BATCH_ACTION = 'batch_action';
    private const ACTION = 'action';
    private const ROW_ACTION = 'row_action';

    // $actions = ['item' => ['detail' => $action1, 'index' => $action2], 'global' => ..., 'batch' => ...]
    private $actions = [];

    public static function new(): self
    {
        return new self();
    }

    public function addBatchAction(Action $actionConfig): self
    {
        $this->actions[self::BATCH_ACTION][(string) $actionConfig] = $actionConfig;

        return $this;
    }

    public function addRowAction(Action $actionConfig): self
    {
        $this->actions[self::ROW_ACTION][(string) $actionConfig] = $actionConfig;

        return $this;
    }

    public function addAction(string $page, Action $actionConfig): self
    {
        $validPageNames = [Action::INDEX, Action::DETAIL, 'form'];
        if (!\in_array($page, $validPageNames)) {
            throw new \InvalidArgumentException(sprintf('The ""%s"" action is added to the ""%s"" page, but it must be added to one of the following valid pages: %s.', (string) $actionConfig, $page, implode(', ', $validPageNames)));
        }

        $this->actions[self::ACTION][(string) $actionConfig] = $actionConfig;

        return $this;
    }

    public function removeBatchAction(string $actionName): self
    {
        if (!\array_key_exists($actionName, $this->actions[self::BATCH_ACTION])) {
            throw new \InvalidArgumentException(sprintf('The given ""%s"" action cannot be removed from the list of batch actions because it\'s not an action of type ""batch"". Maybe it\'s a ""row action"" or a normal action?', $actionName));
        }

        unset($this->actions[self::BATCH_ACTION][$actionName]);
    }

    public function removeRowAction(string $actionName): self
    {
        if (!\array_key_exists($actionName, $this->actions[self::ROW_ACTION])) {
            throw new \InvalidArgumentException(sprintf('The given ""%s"" action cannot be removed from the list of row actions because it\'s not an action of type ""row"". Maybe it\'s a ""batch action"" or a normal action?', $actionName));
        }

        unset($this->actions[self::ROW_ACTION][$actionName]);
    }

    public function removeAction(string $pageName, string $actionName): self
    {
        if (!\array_key_exists($actionName, $this->actions[self::ACTION][$pageName])) {
            throw new \InvalidArgumentException(sprintf('The given ""%s"" action cannot be removed from the list of ""%s"" actions because it\'s not defined for that page. Maybe it\'s associated to a different page or it\'s another type of action (""batch action"" or ""row action"")?', $actionName, $pageName));
        }

        unset($this->actions[self::ACTION][$actionName][$pageName]);
    }

    public function getBatchActions(): array
    {
        return $this->actions[self::BATCH_ACTION];
    }

    public function getRowActions(): array
    {
        return $this->actions[self::ROW_ACTION];
    }

    public function getActions(): array
    {
        return $this->actions[self::ACTION];
    }
}
",ActionCollection,en,3245,php,code,{}
php,"<?php
namespace tests;

use PHPUnit_Framework_TestSuite;
use tests\app\ApplicationTests;

class AllTests
{
    public static function suite()
    {
        $suite = new PHPUnit_Framework_TestSuite('All Tests');

        $suite->addTestSuite(ApplicationTests::suite());

        return $suite;
    }
}
 ",AllTests,en,319,php,code,{}
php,"<?php
namespace Bugzilla;

use Cache\Cache;

/**
 * Bugzilla class
 *
 * Bugzilla functions: perform searches, map locale code to componente name
 *
 *
 * @package Bugzilla
 */
class Bugzilla
{
    /**
     * Parse CSV content generated by an advanced search in Bugzilla
     *
     * @param array  $csv  CSV content of Bugzilla search (read with file())
     * @param string $full Return short or long results (default to false)
     *
     * @return array List of bugs and their descriptions
     */
    public static function getBugsFromCSV($csv, $full = false)
    {
        $full_bugs = [];
        $short_bugs = [];
        $single_bug = [];

        $csv_content = array_map('str_getcsv', $csv);
        foreach ($csv_content as $line) {
            if ($line[0] == 'bug_id') {
                /* If it starts with bug_id, I'm reading the first line
                 * with all field names
                 */
                $fields = $line;
                continue;
            }
            foreach ($fields as $key => $field) {
                $single_bug[$field] = $line[$key];
            }
            $short_bugs[$single_bug['bug_id']] = $single_bug['short_desc'];
            $full_bugs[] = $single_bug;
        }

        return $full ? $full_bugs : $short_bugs;
    }

    /**
     * Given a locale code and a product, determine the correct component name
     * on Bugzilla
     *
     * @param string  $locale     Locale code
     * @param string  $component  If I need the locale code for Mozilla
     *                            Localizations or www.mozilla.org (default)
     * @param boolean $log_errors If I need to log the error for missing locale
     * @param string  $url_query  URI of the JSON file to read
     *
     * @return string ""Locale / Language name"" for Bugzilla queries
     */
    public static function getBugzillaLocaleField($locale, $component = 'www', $log_errors = false, $url_query = '')
    {
        if ($url_query == '') {
            $url_query = ""https://l10n.mozilla-community.org/~flod/mozilla-l10n-query/?bugzilla={$component}"";
        }

        // Some locales don't exist on Bugzilla, map them to another code
        $exceptions = [
            'es'      => 'es-ES',
            'sr-Latn' => 'sr',
        ];
        if (isset($exceptions[$locale])) {
            $locale = $exceptions[$locale];
        }

        // Check if I have a cached request for this element
        $cache_id = ""bugzilla_{$component}"";
        if (! $json_data = Cache::getKey($cache_id)) {
            // No cache. Read remote and cache answer
            $json_data = json_decode(file_get_contents($url_query), true);
            Cache::setKey($cache_id, $json_data);
        }

        if (isset($json_data[$locale])) {
            // Return the default language name if it exists
            return $json_data[$locale];
        }

        // Locale does not exist in mapping. Log error if necessary
        if ($log_errors) {
            error_log(""Missing locale {$locale} in locale mappings (Bugzilla Class)"");
        }

        return $locale;
    }
}
",Bugzilla,en,3197,php,code,{}
php,"<?php
/**
 * Created by PhpStorm.
 * User: liyuliang
 * Date: 2017/6/27
 * Time: 上午11:16
 */

namespace AppBundle\Filter\Product;


class Factory extends \AppBundle\Filter\Factory
{

}",Factory,en,202,php,code,{}
php,"<?php 
require_once(""../../kernel/kernel.php"");

//On détruit la session complète
session_destroy();

//On redirige le joueur vers la page d'accueil
header(""Location: ../../index.php"");

require_once(""../../html/footer.php""); ?>",index,fr,239,php,code,{}
php,"<!DOCTYPE html>

<html>
	<head>
		<meta charset=""UTF-8"">
		<title>MineSweeper</title>
		<link rel=""stylesheet"" style=""text/css"" href=""style.css"">
		
		<script src=""jquery.js""></script>
		<script src=""script.js""></script>
	</head>
	
	<body>
		<section class=""wrapper"">
			<h1>MINESWEEPER</h1>
			
			<table class=""board""></table>
			<aside class=""hud"">
				<h3 class='status'>SCORE</h3>
				<p>Mines restantes : </p>
				<p>10<p>
				<button class='play'>PLAY !</button>
			</aside>
			
			<div style=""clear:both;""></div>
		</section>
	</body>
</html>",index_1,en,577,php,code,{}
php,"<?php


namespace QsSendMsg\Model;


use Gy_Library\GyListModel;

class MsgTplModel extends GyListModel
{

}",MsgTplModel,en,119,php,code,{}
php,"<?php

$id = isset($vars[1]) ? $vars[1] : null;
$object = Project::findById($id);
if (is_null($object)) {
  HTML::forward('core/404');
}

// bootstrap field widgets
FormWidgetImage::bootstrap('images');
FormWidgetImage::bootstrap('thumbnail');
FormWidgetDatepicker::bootstrap('date');
FormWidgetPlupfile::bootstrap('attachment');
FormWidgetPlupfile::bootstrap('application');

// handle form submission
if (isset($_POST['submit'])) {
  $error_flag = false;

  /// validation
  
  // validation for $title
  $title = isset($_POST[""title""]) ? strip_tags($_POST[""title""]) : null;
  if (empty($title)) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""title is required."", ""zh"" => ""请填写title""))));
    $error_flag = true;
  }

  if (strlen($title) >= 150) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Max length for title is 150"", ""zh"" => ""title 不能超过150个字符""))));
    $error_flag = true;
  }
  
  // validation for $password
  $password = isset($_POST[""password""]) ? strip_tags($_POST[""password""]) : null;
  $retype_password = isset($_POST[""retype_password""]) ? strip_tags($_POST[""retype_password""]) : null;
  if (empty($password)) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""password is required."", ""zh"" => ""请填写password""))));
    $error_flag = true;
  }

  if (strlen($password) >= 15) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Max length for password is 15"", ""zh"" => ""password 不能超过15个字符""))));
    $error_flag = true;
  }

  if ($password != $retype_password) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Retype value does not match for password"", ""zh"" => ""再次输入的password与原值不匹配""))));
    $error_flag = true;
  }
  
  // validation for $email
  $email = isset($_POST[""email""]) ? strip_tags($_POST[""email""]) : null;
  $retype_email = isset($_POST[""retype_email""]) ? strip_tags($_POST[""retype_email""]) : null;
  if (empty($email)) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""email is required."", ""zh"" => ""请填写email""))));
    $error_flag = true;
  }

  if (strlen($email) >= 30) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Max length for email is 30"", ""zh"" => ""email 不能超过30个字符""))));
    $error_flag = true;
  }

  if ($email != $retype_email) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Retype value does not match for email"", ""zh"" => ""再次输入的email与原值不匹配""))));
    $error_flag = true;
  }
  
  // validation for $description_en
  $description_en = isset($_POST[""description_en""]) ? $_POST[""description_en""] : null;  
  // validation for $description_zh
  $description_zh = isset($_POST[""description_zh""]) ? $_POST[""description_zh""] : null;
  if (empty($description_zh)) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""description_zh is required."", ""zh"" => ""请填写description_zh""))));
    $error_flag = true;
  }
  
  // validation for $active
  $active = isset($_POST[""active""]) ? 1 : 0;  
  // validation for $price
  $price = isset($_POST[""price""]) ? strip_tags($_POST[""price""]) : null;  
  // validation for $images
  $images = isset($_POST[""images""]) ? strip_tags(trim($_POST[""images""])) : null;  
  // validation for $thumbnail
  $thumbnail = isset($_POST[""thumbnail""]) ? strip_tags(trim($_POST[""thumbnail""])) : null;
  if (empty($thumbnail)) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""thumbnail is required."", ""zh"" => ""请填写thumbnail""))));
    $error_flag = true;
  }
  
  // validation for $date
  $date = isset($_POST[""date""]) ? strip_tags($_POST[""date""]) : null;
  if (empty($date)) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""date is required."", ""zh"" => ""请填写date""))));
    $error_flag = true;
  }
  
  // validation for $attachment
  $attachment = isset($_POST[""attachment""]) ? strip_tags(trim($_POST[""attachment""])) : null;
  // check not empty
  if (empty($attachment)) {
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""attachment is required."", ""zh"" => ""请填写attachment""))));
    $error_flag = true;
  }

  // check upload_dir
  if (!is_dir(WEBROOT . DS . ""files/plupfiletest"")) {
    mkdir(WEBROOT . DS . ""files/plupfiletest"");
  }
  if (!is_writable(WEBROOT . DS . ""files/plupfiletest"")) {
    $error_flag = true;
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Upload dir is not writable."", ""zh"" => ""上传文件夹不可写""))));
  } else {
    $files = explode(""\n"", trim($attachment));
    // check max_file_number
    if (sizeof($files) > 3) {
      Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Max file allowed to be uploed is 3. Please reduce uploaed files."", ""zh"" => ""您最多可以上传3个文件，请减少上传的文件数量""))));
      $error_flag = true;
    }
    // check file extension
    foreach ($files as $file) {
      $file = trim($file);
      $tokens = explode(""."", $file);
      $extension = array_pop($tokens);
      if (!in_array(strtolower($extension), array('jpg','png','gif','zip'))) {
        Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Only file with extension jpg,png,gif,zip is allowed. Please restrict your files with these types."", ""zh"" => ""上传文件仅支持jpg,png,gif,zip，请检查您的上传文件""))));
        $error_flag = true;
        break;
      }
    }
  }
  
  // validation for $application
  $application = isset($_POST[""application""]) ? strip_tags(trim($_POST[""application""])) : null;
  // check upload_dir
  if (!is_dir(WEBROOT . DS . ""files/plupfiletest"")) {
    mkdir(WEBROOT . DS . ""files/plupfiletest"");
  }
  if (!is_writable(WEBROOT . DS . ""files/plupfiletest"")) {
    $error_flag = true;
    Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Upload dir is not writable."", ""zh"" => ""上传文件夹不可写""))));
  } else {
    $files = explode(""\n"", trim($application));
    // check max_file_number
    if (sizeof($files) > 1) {
      Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Max file allowed to be uploed is 1. Please reduce uploaed files."", ""zh"" => ""您最多可以上传1个文件，请减少上传的文件数量""))));
      $error_flag = true;
    }
    // check file extension
    foreach ($files as $file) {
      $file = trim($file);
      $tokens = explode(""."", $file);
      $extension = array_pop($tokens);
      if (!in_array(strtolower($extension), array('jpg','png','gif','zip'))) {
        Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Only file with extension jpg,png,gif,zip is allowed. Please restrict your files with these types."", ""zh"" => ""上传文件仅支持jpg,png,gif,zip，请检查您的上传文件""))));
        $error_flag = true;
        break;
      }
    }
  }
  /// proceed submission
  
  // proceed for $title
  $object->setTitle($title);
  
  // proceed for $password
  $object->setPassword($password);
  
  // proceed for $email
  $object->setEmail($email);
  
  // proceed for $description_en
  $object->setDescriptionEn($description_en);
  
  // proceed for $description_zh
  $object->setDescriptionZh($description_zh);
  
  // proceed for $active
  $object->setActive($active);
  
  // proceed for $price
  if (!empty($price)) {
    $object->setPrice($price);
  }
  
  // proceed for $images
  $object->setImages($images);
  
  // proceed for $thumbnail
  $object->setThumbnail($thumbnail);
  
  // proceed for $date
  $object->setDate($date/1000);
  
  // proceed for $attachment
  $files = explode(""\n"", trim($attachment));
  $rtn = array();
  foreach ($files as $file) {
    $file = trim($file);
    // for cache file, we move it to its proper location 
    if (strpos($file, str_replace(WEBROOT . DS, """", CACHE_DIR)) === 0) {
      $oldname = WEBROOT . DS . $file;
      $newname = WEBROOT . DS . ""files/plupfiletest"" . str_replace(CACHE_DIR, """", WEBROOT . DS . $file);
      rename($oldname, $newname);
      $file = str_replace(WEBROOT . DS, """", $newname);
    }
    $rtn[] = $file;
  }
  $object->setAttachment(implode(""\n"", $rtn));
  
  // proceed for $application
  $files = explode(""\n"", trim($application));
  $rtn = array();
  foreach ($files as $file) {
    $file = trim($file);
    // for cache file, we move it to its proper location 
    if (strpos($file, str_replace(WEBROOT . DS, """", CACHE_DIR)) === 0) {
      $oldname = WEBROOT . DS . $file;
      $newname = WEBROOT . DS . ""files/plupfiletest"" . str_replace(CACHE_DIR, """", WEBROOT . DS . $file);
      rename($oldname, $newname);
      $file = str_replace(WEBROOT . DS, """", $newname);
    }
    $rtn[] = $file;
  }
  $object->setApplication(implode(""\n"", $rtn));
  if ($error_flag == false) {
    if ($object->save()) {
      Message::register(new Message(Message::SUCCESS, i18n(array(""en"" => ""Record saved"", ""zh"" => ""记录保存成功""))));
      HTML::forwardBackToReferer();
    } else {
      Message::register(new Message(Message::DANGER, i18n(array(""en"" => ""Record failed to save"", ""zh"" => ""记录保存失败""))));
    }
  }
}



$html = new HTML();

$html->renderOut('core/backend/html_header', array(
  'title' => i18n(array(
  'en' => 'Edit Project',
  'zh' => 'Edit 项目',
  )),
));
$html->output('<div id=""wrapper"">');
$html->renderOut('core/backend/header');


$html->renderOut('project/backend/project_edit', array(
  'object' => $object
));


$html->output('</div>');

$html->renderOut('core/backend/html_footer');

exit;

",project_edit,en,9874,php,code,{}
php,"<?php
/*define(""NOAUTH"", true);
define(""CRON_PAGE"", $_SERVER['PHP_SELF']);*/
/**
 * Created by HCV-TARGET.
 * User: kbergqui
 * Date: 8/20/14
 * Time: 9:29 AM
 */
/**
 * debug
 */
$getdebug = $_GET['debug'] ? $_GET['debug'] : false;
$debug = $getdebug ? true : false;
$subjects = $_GET['id'] ? $_GET['id'] : '';
$enable_kint = $debug && $subjects != '' ? true : false;
/**
 * includes
 */
$base_path = dirname(dirname(dirname(__FILE__)));
require_once $base_path . ""/redcap_connect.php"";
require_once $base_path . '/plugins/includes/functions.php';
require_once APP_PATH_CLASSES . ""Message.php"";
require_once APP_PATH_DOCROOT . 'ProjectGeneral/header.php';
/**
 * restricted use
 */
$allowed_pids = array('38');
REDCap::allowProjects($allowed_pids);
Kint::enabled($debug);
global $Proj, $project_id;
d($Proj);
/**
 * get DQ rule output
 */
if (isset($_GET['rule_id']) && $_GET['rule_id'] != 'ALL_RULES' && is_numeric($_GET['rule_id'])) {
	$rule_id = $_GET['rule_id'];
	/**
	 * Instantiate DataQuality object
	 */
	$dq = new DataQuality();
	d($dq);
	/**
	 * get rule info
	 */
	$rule_info = $dq->getRule($rule_id);
	d($rule_info);
	/**
	 * get the first field in the rule logic
	 */
	$field = array_shift(array_keys(getBracketedFields($rule_info['logic'], true, true, false)));
	if (strpos($field, '.') !== false) {
		$field = substr($field, strpos($field, '.') + 1);
	}
	d($field);
	$destination_form = $Proj->metadata[$field]['form_name'];
	/**
	 * Execute this rule
	 */
	$dq->executeRule($rule_id);
//	$results_table = $dq->displayResultsTable($rule_info);
//	print $results_table[2];
//	print $results_table[1];
	/**
	 * cycle through rule results
	 */
	$rule_results = $dq->getLogicCheckResults();

	foreach ($rule_results AS $results) {
		foreach ($results AS $result) {
			$dag_prefix = substr(get_single_field($result['record'], $project_id, $Proj->firstEventId, 'dm_usubjid', ''), 0, 3);
			$dag_result = db_query(""SELECT group_name FROM redcap_data_access_groups WHERE project_id = '$project_id' AND LEFT(group_name, 3) = '$dag_prefix'"");
			if ($dag_result) {
				$dag_name = db_result($dag_result, 0, 'group_name');
				$dag_name = prep($dag_name);
			}
			/**
			 * if the result is excluded ignore it
			 */
			if ($result['exclude'] != 1) {
				$today = date('Y-m-d');
				$redcap_event_name = $Proj->getUniqueEventNames($result['event_id']);
				$check_table = array();
				$check_table_result = db_query(""SELECT * FROM _target_notifications WHERE project_id = '$project_id' AND record = '{$result['record']}' AND redcap_event_name = '$redcap_event_name' AND redcap_data_access_group = '$dag_name' AND form_name = '$destination_form' AND type = 'rule' AND type_id = '$rule_id' AND action_date = '$today'"");
				if ($check_table_result) {
					$check_table = db_fetch_assoc($check_table_result);
				} else {
					error_log(db_error());
				}
				if (count($check_table) == 0) {
					$sql = ""INSERT INTO _target_notifications SET project_id = '$project_id', record = '{$result['record']}', redcap_event_name = '$redcap_event_name', redcap_data_access_group = '$dag_name', form_name = '$destination_form', type = 'rule', type_id = '$rule_id', action_date = '$today'"";
					if (!$debug) {
						if (!db_query($sql)) {
							error_log(db_error());
						}
					} else {
						d($sql);
					}
				}
			}
		}
	}
	/**
	 * initialize variables
	 */
	$item_count = 0;
	$today = date('Y-m-d');
	$rows = '';
	/**
	 * query target_email_actions for any actions that haven't yet been digested.
	 * digest and send them
	 */
	$actions_result = db_query(""SELECT DISTINCT * FROM _target_notifications WHERE (digest_date IS NULL OR digest_date = '') AND project_id = '$project_id' AND type = 'rule' AND type_id = '$rule_id' AND sent = 0 ORDER BY abs(record) ASC"");
	if ($actions_result) {
		while ($actions_row = db_fetch_assoc($actions_result)) {
			$item_count++;
			foreach ($actions_row AS $key => $value) {
				$$key = $value;
			}
			$event_keys = Event::getUniqueKeys($project_id);
			$event_id = array_search($redcap_event_name, $event_keys);
			$url = APP_PATH_WEBROOT_FULL . ""redcap_v"" . $redcap_version . ""/DataEntry/index.php?pid=$project_id&id=$record&event_id=$event_id&page=$form_name"";
			$rows .= RCView::tr(array('style' => 'border:1px solid #d0d0d0;'),
				RCView::td(array('class' => 'data_1', 'style' => ""font-family:Verdana;font-size:8pt;background-color:"" . row_style($item_count) . "";border:1px solid #CCCCCC;text-align:left;padding:5px 8px;""),
					""<a href='{$url}'>$record</a>""
				) .
				RCView::td(array('class' => 'data_1', 'style' => ""font-family:Verdana;font-size:8pt;background-color:"" . row_style($item_count) . "";border:1px solid #CCCCCC;text-align:left;padding:5px 8px;""),
					$redcap_data_access_group
				)
			);
			$update_query = ""UPDATE _target_notifications SET digest_date = '$today', sent = 1 WHERE action_id = '$action_id'"";
			if (!$debug) {
				if (!db_query($update_query)) {
					error_log(db_error());
				}
			} else {
				d($update_query);
			}
		}
		if ($item_count > 0) {
			/**
			 * construct html for email
			 */
			$html = ""<div>"";
			$html .= RCView::h1(array('style' => 'font-family:Verdana;font-size:14px;'), ""New {$rule_info['name']}"");
			$html .= RCView::p(array('style' => 'font-family:Verdana;font-size:10px;'), ""Click each link to go to Form"");
			$html .= RCView::table(array('id' => 'site_source_uploads', 'class' => 'dt', 'cellspacing' => '0', 'style' => 'width:500px;'),
				RCView::tr('',
					RCView::th(array('class' => 'header', 'style' => 'background-color:#FFFFE0;height:18px;border:1px solid #CCCCCC;text-align:left;padding:5px 8px;width:50%;font-weight:bold;font-family:Arial,Helvetica,sans-serif;font-size:12px;'),
						""Subject #""
					) .
					RCView::th(array('class' => 'header', 'style' => 'background-color:#FFFFE0;height:18px;border:1px solid #CCCCCC;text-align:left;padding:5px 8px;width:50%;font-weight:bold;font-family:Arial,Helvetica,sans-serif;font-size:12px;'),
						""Site""
					)
				) .
				$rows
			);
			$html .= ""</div>"";
			/**
			 * set up email for sending
			 */
			$to = array(
				'Ken Bergquist' => 'kbergqui@email.unc.edu'
			);
			//$to = array('Ken Bergquist' => 'kbergqui@email.unc.edu');
			$from = array('Ken Bergquist' => 'kbergqui@email.unc.edu');
			$subject = ""HCV-TARGET {$rule_info['name']} Notification"";
			$email = new Message ();
			foreach ($from as $name => $address) {
				$email->setFrom($address);
				$email->setFromName($name);
			}
			$email->setSubject($subject);
			$email->setBody($html);
			foreach ($to as $name => $address) {
				$email->setTo($address);
				$email->setToName($name);
				if (!$debug) {
					if (!$email->send()) {
						error_log(""ERROR: Failed to send {$rule_info['name']} digest"");
					}
				}
			}
			d($email);
		} else {
			error_log(""NOTICE: No {$rule_info['name']} were available to be digested"");
		}
	}
}",send_rule_notification,en,7060,php,code,{}
php,"<?php
/**
 * Created by PhpStorm.
 * User: argshub
 * Date: 1/2/2017
 * Time: 3:42 AM
 */

namespace Purpose\Library;

use Turbo\Shelf\HTTP\Session\UserSessions;

class Session
{
    use UserSessions;
}",Session,en,217,php,code,{}
py,"#-*- coding:utf-8 -*-
'''
defined Signal
'''
__author__ = 'Tony Zhu'
import sys
from PyQt4.QtCore import pyqtSignal, Qt
from PyQt4.QtGui import *


class SignalEmit(QWidget):
    helpSignal = pyqtSignal(str)
    printSignal = pyqtSignal(list)
    #声明一个多重载版本的信号，包括了一个带int和str类型参数的信号，以及带str参数的信号
    previewSignal = pyqtSignal([int,str],[str])
    def __init__(self):
        QWidget.__init__(self)
        self.initUI()


    def initUI(self):

        self.creatContorls(u""打印控制："")
        self.creatResult(u""操作结果："")

        layout = QHBoxLayout()
        layout.addWidget(self.controlsGroup)
        layout.addWidget(self.resultGroup)
        self.setLayout(layout)

        self.helpSignal.connect(self.showHelpMessage)
        self.printSignal.connect(self.printPaper)
        self.previewSignal[str].connect(self.previewPaper)
        self.previewSignal[int,str].connect(self.previewPaperWithArgs)
        self.printButton.clicked.connect(self.emitPrintSignal)
        self.previewButton.clicked.connect(self.emitPreviewSignal)

        self.setGeometry(300, 300, 290, 150)
        self.setWindowTitle(u'defined signal')
        self.show()

    def creatContorls(self,title):
        self.controlsGroup = QGroupBox(title)
        self.printButton = QPushButton(u""打印"")
        self.previewButton  = QPushButton(u""预览"")
        numberLabel = QLabel(u""打印份数："")
        pageLabel = QLabel(u""纸张类型："")
        self.previewStatus = QCheckBox(u""全屏预览"")
        self.numberSpinBox = QSpinBox()
        self.numberSpinBox.setRange(1, 100)
        self.styleCombo = QComboBox(self)
        self.styleCombo.addItem(u""A4"")
        self.styleCombo.addItem(u""A5"")

        controlsLayout = QGridLayout()
        controlsLayout.addWidget(numberLabel, 0, 0)
        controlsLayout.addWidget(self.numberSpinBox, 0, 1)
        controlsLayout.addWidget(pageLabel, 0, 2)
        controlsLayout.addWidget(self.styleCombo, 0, 3)
        controlsLayout.addWidget(self.printButton, 0, 4)
        controlsLayout.addWidget(self.previewStatus, 3, 0)
        controlsLayout.addWidget(self.previewButton, 3, 1)
        self.controlsGroup.setLayout(controlsLayout)

    def creatResult(self,title):
        self.resultGroup = QGroupBox(title)
        self.resultLabel = QLabel("""")
        layout = QHBoxLayout()
        layout.addWidget(self.resultLabel)
        self.resultGroup.setLayout(layout)

    def emitPreviewSignal(self):
        if self.previewStatus.isChecked() == True:
            self.previewSignal[int,str].emit(1080,u"" Full Screen"")
        elif self.previewStatus.isChecked() == False:
            self.previewSignal[str].emit(u""Preview"")

    def emitPrintSignal(self):
        pList = []
        pList.append(self.numberSpinBox.value ())
        pList.append(self.styleCombo.currentText())
        self.printSignal.emit(pList)

    def printPaper(self,list):
        self.resultLabel.setText(u""Print: ""+u""份数：""+ str(list[0]) +u""  纸张：""+str(list[1]))

    def previewPaperWithArgs(self,style,text):
        self.resultLabel.setText(str(style)+text)

    def previewPaper(self,text):
        self.resultLabel.setText(text)

    def keyPressEvent(self, event):

        if event.key() == Qt.Key_F1:
            self.helpSignal.emit(u""help message"")

    def showHelpMessage(self,message):
        self.resultLabel.setText(message)
        #self.statusBar().showMessage(message)


if __name__ == '__main__':

    app = QApplication(sys.argv)
    dispatch = SignalEmit()
    sys.exit(app.exec_())",19EventSignalDemo,en,3725,python,code,{}
py,"# coding=utf-8
""""""
desc..
    :copyright: (c) 2015 by fangpeng.
    :license: MIT, see LICENSE for more details.
""""""
__date__ = '12/15/15'
import datetime
import redis
from flask import Flask, render_template, request, redirect, jsonify
from flask.ext.bootstrap import Bootstrap
from flask.ext.sqlalchemy import SQLAlchemy

from forms import AddTaskForm


app = Flask(__name__)
app.config.update(
    DEBUG=True,
    SECRET_KEY='...',
    BEANSTALKD_HOST='127.0.0.1',
    BEANSTALKD_PORT='11300',
    SQLALCHEMY_COMMIT_ON_TEARDOWN=True,
    SQLALCHEMY_TRACK_MODIFICATIONS=True,
    SQLALCHEMY_DATABASE_URI='mysql://root:!qaz2wsx@192.168.0.120/cron'
)

bootstrap = Bootstrap(app)
db = SQLAlchemy(app)

rd = redis.Redis(password='2015yunlianxiQAZWSX')

# 键空间通知（keyspace notification）
subKey = '__keyevent@0__:expired'


class Task(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80))
    redis_key = db.Column(db.String(128), unique=True)
    start_time = db.Column(db.DateTime)
    create_date = db.Column(db.DateTime, default=datetime.datetime.now())

    def __init__(self, name, redis_key, start_time):
        self.name = name
        self.redis_key = redis_key
        start_time = ':'.join(start_time.split(':')[:2])
        self.start_time = datetime.datetime.strptime(start_time, ""%Y-%m-%d %H:%M"")
        # self.seconds as key expire seconds
        self.seconds = int((self.start_time - datetime.datetime.now()).total_seconds())

    def __repr__(self):
        return '<Task name:%r, key:%r>' % (self.name, self.redis_key)


@app.route('/')
def task_list():
    tasks = Task.query.order_by(Task.start_time.desc())
    task_lists = []
    for obj in tasks:
        dic = {}
        dic['id'] = obj.id
        dic['name'] = obj.name
        dic['redis_key'] = obj.redis_key
        dic['start_time'] = obj.start_time
        dic['expired'] = 0 if rd.exists(obj.redis_key) else 1
        dic['create_date'] = obj.create_date
        task_lists.append(dic)
        # todo: task执行结果回调
    return render_template('index.html', tasks=task_lists)


@app.route('/add', methods=['GET', 'POST'])
def add_task():
    task_id = request.args.get('tid')
    ori_task = Task.query.filter(Task.id == task_id).first()
    form = AddTaskForm()
    if ori_task:
        form = AddTaskForm(name=ori_task.name, key=ori_task.redis_key, ctime=ori_task.start_time)

    if request.method == 'POST' and form.validate():
        tid = request.values.get('tid')
        str_key = form.key.data
        task = Task(form.name.data, str_key, form.ctime.data)
        if tid:
            # update
            tsObj = Task.query.filter(Task.id == tid).first()
            ori_str_key = tsObj.redis_key
            rd.delete(ori_str_key)
            tsObj.redis_key = str_key
            tsObj.name = form.name.data
            tsObj.start_time = form.ctime.data
            db.session.commit()
        else:
            db.session.add(task)

        rd.setex(str_key, 1, task.seconds)
        return redirect('/')
    return render_template('add.html', form=form)


@app.route('/del/<tid>')
def del_task(tid):
    task = Task.query.filter(Task.id == tid).first()
    str_key = task.redis_key
    db.session.delete(task)
    rd.delete(str_key)
    return redirect('/')


if __name__ == '__main__':
    app.run()",app,en,3467,python,code,{}
py,"""""""passlib.crypto._blowfish.base - unoptimized pure-python blowfish engine""""""
#=============================================================================
# imports
#=============================================================================
# core
import struct
# pkg
from passlib.utils import repeat_string
# local
__all__ = [
    ""BlowfishEngine"",
]

#=============================================================================
# blowfish constants
#=============================================================================
BLOWFISH_P = BLOWFISH_S = None

def _init_constants():
    global BLOWFISH_P, BLOWFISH_S

    # NOTE: blowfish's spec states these numbers are the hex representation
    # of the fractional portion of PI, in order.

    # Initial contents of key schedule - 18 integers
    BLOWFISH_P = [
        0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,
        0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,
        0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,
        0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917,
        0x9216d5d9, 0x8979fb1b,
    ]

    # all 4 blowfish S boxes in one array - 256 integers per S box
    BLOWFISH_S = [
        # sbox 1
        [
        0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7,
        0xb8e1afed, 0x6a267e96, 0xba7c9045, 0xf12c7f99,
        0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,
        0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e,
        0x0d95748f, 0x728eb658, 0x718bcd58, 0x82154aee,
        0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,
        0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef,
        0x8e79dcb0, 0x603a180e, 0x6c9e0e8b, 0xb01e8a3e,
        0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,
        0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440,
        0x55ca396a, 0x2aab10b6, 0xb4cc5c34, 0x1141e8ce,
        0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,
        0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e,
        0xafd6ba33, 0x6c24cf5c, 0x7a325381, 0x28958677,
        0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,
        0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032,
        0xef845d5d, 0xe98575b1, 0xdc262302, 0xeb651b88,
        0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,
        0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e,
        0x21c66842, 0xf6e96c9a, 0x670c9c61, 0xabd388f0,
        0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,
        0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98,
        0xa1f1651d, 0x39af0176, 0x66ca593e, 0x82430e88,
        0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,
        0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6,
        0x4ed3aa62, 0x363f7706, 0x1bfedf72, 0x429b023d,
        0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,
        0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7,
        0xe3fe501a, 0xb6794c3b, 0x976ce0bd, 0x04c006ba,
        0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,
        0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f,
        0x6dfc511f, 0x9b30952c, 0xcc814544, 0xaf5ebd09,
        0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,
        0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb,
        0x5579c0bd, 0x1a60320a, 0xd6a100c6, 0x402c7279,
        0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,
        0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab,
        0x323db5fa, 0xfd238760, 0x53317b48, 0x3e00df82,
        0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,
        0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573,
        0x695b27b0, 0xbbca58c8, 0xe1ffa35d, 0xb8f011a0,
        0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,
        0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790,
        0xe1ddf2da, 0xa4cb7e33, 0x62fb1341, 0xcee4c6e8,
        0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,
        0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0,
        0xd08ed1d0, 0xafc725e0, 0x8e3c5b2f, 0x8e7594b7,
        0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,
        0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad,
        0x2f2f2218, 0xbe0e1777, 0xea752dfe, 0x8b021fa1,
        0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,
        0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9,
        0x165fa266, 0x80957705, 0x93cc7314, 0x211a1477,
        0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,
        0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49,
        0x00250e2d, 0x2071b35e, 0x226800bb, 0x57b8e0af,
        0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,
        0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5,
        0x83260376, 0x6295cfa9, 0x11c81968, 0x4e734a41,
        0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,
        0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400,
        0x08ba6fb5, 0x571be91f, 0xf296ec6b, 0x2a0dd915,
        0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,
        0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a,
        ],
        # sbox 2
        [
        0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623,
        0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,
        0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1,
        0x193602a5, 0x75094c29, 0xa0591340, 0xe4183a3e,
        0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,
        0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,
        0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e,
        0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,
        0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737,
        0x3e07841c, 0x7fdeae5c, 0x8e7d44ec, 0x5716f2b8,
        0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,
        0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd,
        0xd19113f9, 0x7ca92ff6, 0x94324773, 0x22f54701,
        0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,
        0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41,
        0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331,
        0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,
        0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af,
        0xde9a771f, 0xd9930810, 0xb38bae12, 0xdccf3f2e,
        0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,
        0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c,
        0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2,
        0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,
        0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd,
        0x71dff89e, 0x10314e55, 0x81ac77d6, 0x5f11199b,
        0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,
        0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e,
        0x86e34570, 0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3,
        0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,
        0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a,
        0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4,
        0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,
        0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66,
        0xe3bc4595, 0xa67bc883, 0xb17f37d1, 0x018cff28,
        0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,
        0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84,
        0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510,
        0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,
        0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14,
        0xeecc86bc, 0x60622ca7, 0x9cab5cab, 0xb2f3846e,
        0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,
        0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7,
        0x9b540b19, 0x875fa099, 0x95f7997e, 0x623d7da8,
        0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,
        0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99,
        0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696,
        0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,
        0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73,
        0x5d4a14d9, 0xe864b7e3, 0x42105d14, 0x203e13e0,
        0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,
        0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105,
        0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250,
        0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,
        0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285,
        0x095bbf00, 0xad19489d, 0x1462b174, 0x23820e00,
        0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,
        0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb,
        0x7cde3759, 0xcbee7460, 0x4085f2a7, 0xce77326e,
        0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,
        0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc,
        0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9,
        0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,
        0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20,
        0x153e21e7, 0x8fb03d4a, 0xe6e39f2b, 0xdb83adf7,
        ],
        # sbox 3
        [
        0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,
        0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068,
        0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af,
        0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,
        0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45,
        0xbfbc09ec, 0x03bd9785, 0x7fac6dd0, 0x31cb8504,
        0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,
        0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb,
        0x68dc1462, 0xd7486900, 0x680ec0a4, 0x27a18dee,
        0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,
        0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42,
        0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,
        0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,
        0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb,
        0xfb0af54e, 0xd8feb397, 0x454056ac, 0xba489527,
        0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,
        0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33,
        0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c,
        0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,
        0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc,
        0x07f9c9ee, 0x41041f0f, 0x404779a4, 0x5d886e17,
        0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,
        0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b,
        0x0e12b4c2, 0x02e1329e, 0xaf664fd1, 0xcad18115,
        0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,
        0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728,
        0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0,
        0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,
        0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37,
        0xa812dc60, 0xa1ebddf8, 0x991be14c, 0xdb6e6b0d,
        0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,
        0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b,
        0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3,
        0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,
        0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d,
        0x6842ada7, 0xc66a2b3b, 0x12754ccc, 0x782ef11c,
        0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,
        0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9,
        0x44421659, 0x0a121386, 0xd90cec6e, 0xd5abea2a,
        0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,
        0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d,
        0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc,
        0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,
        0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61,
        0x4e58f48f, 0xf2ddfda2, 0xf474ef38, 0x8789bdc2,
        0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,
        0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2,
        0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c,
        0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,
        0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633,
        0xe85a1f02, 0x09f0be8c, 0x4a99a025, 0x1d6efe10,
        0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,
        0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52,
        0x50115e01, 0xa70683fa, 0xa002b5c4, 0x0de6d027,
        0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,
        0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62,
        0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634,
        0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,
        0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24,
        0x86e3725f, 0x724d9db9, 0x1ac15bb4, 0xd39eb8fc,
        0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,
        0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c,
        0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837,
        0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0,
        ],
        # sbox 4
        [
        0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b,
        0x5cb0679e, 0x4fa33742, 0xd3822740, 0x99bc9bbe,
        0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,
        0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4,
        0x5748ab2f, 0xbc946e79, 0xc6a376d2, 0x6549c2c8,
        0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,
        0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304,
        0xa1fad5f0, 0x6a2d519a, 0x63ef8ce2, 0x9a86ee22,
        0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,
        0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6,
        0x2826a2f9, 0xa73a3ae1, 0x4ba99586, 0xef5562e9,
        0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,
        0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593,
        0xe990fd5a, 0x9e34d797, 0x2cf0b7d9, 0x022b8b51,
        0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,
        0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c,
        0xe029ac71, 0xe019a5e6, 0x47b0acfd, 0xed93fa9b,
        0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,
        0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c,
        0x15056dd4, 0x88f46dba, 0x03a16125, 0x0564f0bd,
        0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,
        0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319,
        0x7533d928, 0xb155fdf5, 0x03563482, 0x8aba3cbb,
        0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,
        0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991,
        0xea7a90c2, 0xfb3e7bce, 0x5121ce64, 0x774fbe32,
        0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,
        0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166,
        0xb39a460a, 0x6445c0dd, 0x586cdecf, 0x1c20c8ae,
        0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,
        0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5,
        0x72eacea8, 0xfa6484bb, 0x8d6612ae, 0xbf3c6f47,
        0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,
        0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d,
        0x4040cb08, 0x4eb4e2cc, 0x34d2466a, 0x0115af84,
        0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,
        0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8,
        0x611560b1, 0xe7933fdc, 0xbb3a792b, 0x344525bd,
        0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,
        0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7,
        0x1a908749, 0xd44fbd9a, 0xd0dadecb, 0xd50ada38,
        0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,
        0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c,
        0xbf97222c, 0x15e6fc2a, 0x0f91fc71, 0x9b941525,
        0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,
        0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442,
        0xe0ec6e0e, 0x1698db3b, 0x4c98a0be, 0x3278e964,
        0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,
        0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8,
        0xdf359f8d, 0x9b992f2e, 0xe60b6f47, 0x0fe3f11d,
        0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,
        0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299,
        0xf523f357, 0xa6327623, 0x93a83531, 0x56cccd02,
        0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,
        0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614,
        0xe6c6c7bd, 0x327a140a, 0x45e1d006, 0xc3f27b9a,
        0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,
        0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b,
        0x53113ec0, 0x1640e3d3, 0x38abbd60, 0x2547adf0,
        0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,
        0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e,
        0x1948c25c, 0x02fb8a8c, 0x01c36ae4, 0xd6ebe1f9,
        0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,
        0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6,
        ]
    ]

#=============================================================================
# engine
#=============================================================================
class BlowfishEngine(object):

    def __init__(self):
        if BLOWFISH_P is None:
            _init_constants()
        self.P = list(BLOWFISH_P)
        self.S = [ list(box) for box in BLOWFISH_S ]

    #===================================================================
    # common helpers
    #===================================================================
    @staticmethod
    def key_to_words(data, size=18):
        """"""convert data to tuple of <size> 4-byte integers, repeating or
        truncating data as needed to reach specified size""""""
        assert isinstance(data, bytes)
        dlen = len(data)
        if not dlen:
            # return all zeros - original C code would just read the NUL after
            # the password, so mimicing that behavior for this edge case.
            return [0]*size

        # repeat data until it fills up 4*size bytes
        data = repeat_string(data, size<<2)

        # unpack
        return struct.unpack("">%dI"" % (size,), data)

    #===================================================================
    # blowfish routines
    #===================================================================
    def encipher(self, l, r):
        """"""loop version of blowfish encipher routine""""""
        P, S = self.P, self.S
        l ^= P[0]
        i = 1
        while i < 17:
            # Feistel substitution on left word
            r = ((((S[0][l >> 24] + S[1][(l >> 16) & 0xff]) ^ S[2][(l >> 8) & 0xff]) +
                  S[3][l & 0xff]) & 0xffffffff) ^ P[i] ^ r
            # swap vars so even rounds do Feistel substition on right word
            l, r = r, l
            i += 1
        return r ^ P[17], l

    # NOTE: decipher is same as above, just with reversed(P) instead.

    def expand(self, key_words):
        """"""perform stock Blowfish keyschedule setup""""""
        assert len(key_words) >= 18, ""key_words must be at least as large as P""
        P, S, encipher = self.P, self.S, self.encipher

        i = 0
        while i < 18:
            P[i] ^= key_words[i]
            i += 1

        i = l = r = 0
        while i < 18:
            P[i], P[i+1] = l,r = encipher(l,r)
            i += 2

        for box in S:
            i = 0
            while i < 256:
                box[i], box[i+1] = l,r = encipher(l,r)
                i += 2

    #===================================================================
    # eks-blowfish routines
    #===================================================================
    def eks_salted_expand(self, key_words, salt_words):
        """"""perform EKS' salted version of Blowfish keyschedule setup""""""
        # NOTE: this is the same as expand(), except for the addition
        #       of the operations involving *salt_words*.

        assert len(key_words) >= 18, ""key_words must be at least as large as P""
        salt_size = len(salt_words)
        assert salt_size, ""salt_words must not be empty""
        assert not salt_size & 1, ""salt_words must have even length""
        P, S, encipher = self.P, self.S, self.encipher

        i = 0
        while i < 18:
            P[i] ^= key_words[i]
            i += 1

        s = i = l = r = 0
        while i < 18:
            l ^= salt_words[s]
            r ^= salt_words[s+1]
            s += 2
            if s == salt_size:
                s = 0
            P[i], P[i+1] = l,r = encipher(l,r) # next()
            i += 2

        for box in S:
            i = 0
            while i < 256:
                l ^= salt_words[s]
                r ^= salt_words[s+1]
                s += 2
                if s == salt_size:
                    s = 0
                box[i], box[i+1] = l,r = encipher(l,r) # next()
                i += 2

    def eks_repeated_expand(self, key_words, salt_words, rounds):
        """"""perform rounds stage of EKS keyschedule setup""""""
        expand = self.expand
        n = 0
        while n < rounds:
            expand(key_words)
            expand(salt_words)
            n += 1

    def repeat_encipher(self, l, r, count):
        """"""repeatedly apply encipher operation to a block""""""
        encipher = self.encipher
        n = 0
        while n < count:
            l, r = encipher(l, r)
            n += 1
        return l, r

    #===================================================================
    # eoc
    #===================================================================

#=============================================================================
# eof
#=============================================================================
",base,en,20831,python,code,{}
py,/usr/lib/python2.7/copy_reg.py,copy_reg,pt,30,python,code,{}
py,"#coding=utf-8
#上面一句是定义python的编码，必须写在第一句

from pandas import DataFrame
import pandas as pd
import numpy as np


#脚本语言没有真正的入口，所以用__name__来区分。否则在被包含时就被执行
if __name__ == '__main__':
    df = DataFrame(np.random.randn(4, 5), columns=['A', 'B', 'C', 'D', 'E'])
    print df
    df['Col_sum'] = df.apply(lambda x: x.sum(), axis=1)
    print df
    df.loc['Row_sum'] = df.apply(lambda x: x.sum())
    print df

    opeDf = pd.DataFrame([[1, 2, 3], [4, 5, 6]], columns=['col1', 'col2', 'col3'], index=['a', 'b'])
    print opeDf
    print opeDf['col1'].sum()


",Dm015_dataframe_sum,en,670,python,code,{}
py,"######################## BEGIN LICENSE BLOCK ########################
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Mark Pilgrim - port to Python
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301  USA
######################### END LICENSE BLOCK #########################

from . import constants
from .escsm import (HZSMModel, ISO2022CNSMModel, ISO2022JPSMModel,
                    ISO2022KRSMModel)
from .charsetprober import CharSetProber
from .codingstatemachine import CodingStateMachine
from .compat import wrap_ord


class EscCharSetProber(CharSetProber):
    def __init__(self):
        CharSetProber.__init__(self)
        self._mCodingSM = [
            CodingStateMachine(HZSMModel),
            CodingStateMachine(ISO2022CNSMModel),
            CodingStateMachine(ISO2022JPSMModel),
            CodingStateMachine(ISO2022KRSMModel)
        ]
        self.reset()

    def reset(self):
        CharSetProber.reset(self)
        for codingSM in self._mCodingSM:
            if not codingSM:
                continue
            codingSM.active = True
            codingSM.reset()
        self._mActiveSM = len(self._mCodingSM)
        self._mDetectedCharset = None

    def get_charset_name(self):
        return self._mDetectedCharset

    def get_confidence(self):
        if self._mDetectedCharset:
            return 0.99
        else:
            return 0.00

    def feed(self, aBuf):
        for c in aBuf:
            # PY3K: aBuf is a byte array, so c is an int, not a byte
            for codingSM in self._mCodingSM:
                if not codingSM:
                    continue
                if not codingSM.active:
                    continue
                codingState = codingSM.next_state(wrap_ord(c))
                if codingState == constants.eError:
                    codingSM.active = False
                    self._mActiveSM -= 1
                    if self._mActiveSM <= 0:
                        self._mState = constants.eNotMe
                        return self.get_state()
                elif codingState == constants.eItsMe:
                    self._mState = constants.eFoundIt
                    self._mDetectedCharset = codingSM.get_coding_state_machine()  # nopep8
                    return self.get_state()

        return self.get_state()
",escprober,en,3273,python,code,{}
py,"def is_isbn_or_key(word):
    isbn_or_key = 'key'
    if len(word) == 13 and word.isdigit():
        isbn_or_key = 'isbn'
    short_word = word.replace('-', '')
    if '-'  in word and len(short_word) == 10 and short_word.isdigit():
        isbn_or_key = 'isbn'
    return isbn_or_key",helper,en,291,python,code,{}
py,"import json
import multiprocessing
import os
import re
import argparse
import sys

from datasets import load_dataset, load_metric
from tqdm import tqdm

def get_parser():
    parser = argparse.ArgumentParser(
        description=""HumanEval based on generated samples"",
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )
    parser.add_argument(
        ""--generated-file"",
        type=str,
        help=""Generated .jsonl file"",
    )
    parser.add_argument(
        ""--num-samples"",
        type=int,
        default=100,
        help=""Number of samples generated per prompt"",
    )
    return parser


def first_block(string):
    """"""Split off first block of code by scanning for class, def etc. on newlines.""""""
    return re.split(""\nclass|\ndef|\n#|\n@|\nprint|\nif"", string)[0].rstrip()


def main():
    parser = get_parser()
    args = parser.parse_args()

    # enables code execution in code_eval metric
    os.environ[""HF_ALLOW_CODE_EVAL""] = ""1""

    num_workers = multiprocessing.cpu_count()

    # Load evaluation dataset and metric
    human_eval = load_dataset(""openai_humaneval"")
    code_eval_metric = load_metric(""code_eval"")
    
    num_gen_per_task = args.num_samples
    generated_all = []
    with open(args.generated_file) as generated_file:
        for line in generated_file:
            generated_all.append(json.loads(line.strip()))
    
    # Generate completions for evaluation set
    n_tasks = len(human_eval[""test""])
    generations, references = [], []
    for task in tqdm(range(n_tasks)):
        task_generations = []
        prompt = human_eval[""test""][task][""prompt""]

        for sample in generated_all[task*num_gen_per_task:(task+1)*num_gen_per_task]:
            assert sample['context'] == prompt.strip()
            task_generations.append(prompt + first_block(sample['text']))

        generations.append(task_generations)
        test_func = human_eval[""test""][task][""test""]
        entry_point = f""check({human_eval['test'][task]['entry_point']})""
        references.append(""\n"" + test_func + ""\n"" + entry_point)

    # Evaluate completions with ""code_eval"" metric
    pass_at_k, _ = code_eval_metric.compute(
        references=references, predictions=generations, num_workers=num_workers
    )
    print(f""Results: {pass_at_k}"")


# For some reason the folliwng seems to be necessary sometimes for code_eval to work nice with multiprocessing
# https://stackoverflow.com/questions/60804599/python-multiprocessing-keeps-spawning-the-whole-script
if __name__ == ""__main__"":
    main()
",human_eval,en,2631,python,code,{}
py,"# -*- coding: utf-8 -*-
#
# Copyright (C) 2012 The Python Software Foundation.
# See LICENSE.txt and CONTRIBUTORS.txt.
#
""""""Access to Python's configuration information.""""""

import codecs
import os
import re
import sys
from os.path import pardir, realpath
try:
    import configparser
except ImportError:
    import ConfigParser as configparser


__all__ = [
    'get_config_h_filename',
    'get_config_var',
    'get_config_vars',
    'get_makefile_filename',
    'get_path',
    'get_path_names',
    'get_paths',
    'get_platform',
    'get_python_version',
    'get_scheme_names',
    'parse_config_h',
]


def _safe_realpath(path):
    try:
        return realpath(path)
    except OSError:
        return path


if sys.executable:
    _PROJECT_BASE = os.path.dirname(_safe_realpath(sys.executable))
else:
    # sys.executable can be empty if argv[0] has been changed and Python is
    # unable to retrieve the real program name
    _PROJECT_BASE = _safe_realpath(os.getcwd())

if os.name == ""nt"" and ""pcbuild"" in _PROJECT_BASE[-8:].lower():
    _PROJECT_BASE = _safe_realpath(os.path.join(_PROJECT_BASE, pardir))
# PC/VS7.1
if os.name == ""nt"" and ""\\pc\\v"" in _PROJECT_BASE[-10:].lower():
    _PROJECT_BASE = _safe_realpath(os.path.join(_PROJECT_BASE, pardir, pardir))
# PC/AMD64
if os.name == ""nt"" and ""\\pcbuild\\amd64"" in _PROJECT_BASE[-14:].lower():
    _PROJECT_BASE = _safe_realpath(os.path.join(_PROJECT_BASE, pardir, pardir))


def is_python_build():
    for fn in (""Setup.dist"", ""Setup.local""):
        if os.path.isfile(os.path.join(_PROJECT_BASE, ""Modules"", fn)):
            return True
    return False

_PYTHON_BUILD = is_python_build()

_cfg_read = False

def _ensure_cfg_read():
    global _cfg_read
    if not _cfg_read:
        from ..resources import finder
        backport_package = __name__.rsplit('.', 1)[0]
        _finder = finder(backport_package)
        _cfgfile = _finder.find('sysconfig.cfg')
        assert _cfgfile, 'sysconfig.cfg exists'
        with _cfgfile.as_stream() as s:
            _SCHEMES.readfp(s)
        if _PYTHON_BUILD:
            for scheme in ('posix_prefix', 'posix_home'):
                _SCHEMES.set(scheme, 'include', '{srcdir}/Include')
                _SCHEMES.set(scheme, 'platinclude', '{projectbase}/.')

        _cfg_read = True


_SCHEMES = configparser.RawConfigParser()
_VAR_REPL = re.compile(r'\{([^{]*?)\}')

def _expand_globals(config):
    _ensure_cfg_read()
    if config.has_section('globals'):
        globals = config.items('globals')
    else:
        globals = tuple()

    sections = config.sections()
    for section in sections:
        if section == 'globals':
            continue
        for option, value in globals:
            if config.has_option(section, option):
                continue
            config.set(section, option, value)
    config.remove_section('globals')

    # now expanding local variables defined in the cfg file
    #
    for section in config.sections():
        variables = dict(config.items(section))

        def _replacer(matchobj):
            name = matchobj.group(1)
            if name in variables:
                return variables[name]
            return matchobj.group(0)

        for option, value in config.items(section):
            config.set(section, option, _VAR_REPL.sub(_replacer, value))

#_expand_globals(_SCHEMES)

 # FIXME don't rely on sys.version here, its format is an implementation detail
 # of CPython, use sys.version_info or sys.hexversion
_PY_VERSION = sys.version.split()[0]
_PY_VERSION_SHORT = sys.version[:3]
_PY_VERSION_SHORT_NO_DOT = _PY_VERSION[0] + _PY_VERSION[2]
_PREFIX = os.path.normpath(sys.prefix)
_EXEC_PREFIX = os.path.normpath(sys.exec_prefix)
_CONFIG_VARS = None
_USER_BASE = None


def _subst_vars(path, local_vars):
    """"""In the string `path`, replace tokens like {some.thing} with the
    corresponding value from the map `local_vars`.

    If there is no corresponding value, leave the token unchanged.
    """"""
    def _replacer(matchobj):
        name = matchobj.group(1)
        if name in local_vars:
            return local_vars[name]
        elif name in os.environ:
            return os.environ[name]
        return matchobj.group(0)
    return _VAR_REPL.sub(_replacer, path)


def _extend_dict(target_dict, other_dict):
    target_keys = target_dict.keys()
    for key, value in other_dict.items():
        if key in target_keys:
            continue
        target_dict[key] = value


def _expand_vars(scheme, vars):
    res = {}
    if vars is None:
        vars = {}
    _extend_dict(vars, get_config_vars())

    for key, value in _SCHEMES.items(scheme):
        if os.name in ('posix', 'nt'):
            value = os.path.expanduser(value)
        res[key] = os.path.normpath(_subst_vars(value, vars))
    return res


def format_value(value, vars):
    def _replacer(matchobj):
        name = matchobj.group(1)
        if name in vars:
            return vars[name]
        return matchobj.group(0)
    return _VAR_REPL.sub(_replacer, value)


def _get_default_scheme():
    if os.name == 'posix':
        # the default scheme for posix is posix_prefix
        return 'posix_prefix'
    return os.name


def _getuserbase():
    env_base = os.environ.get(""PYTHONUSERBASE"", None)

    def joinuser(*args):
        return os.path.expanduser(os.path.join(*args))

    # what about 'os2emx', 'riscos' ?
    if os.name == ""nt"":
        base = os.environ.get(""APPDATA"") or ""~""
        if env_base:
            return env_base
        else:
            return joinuser(base, ""Python"")

    if sys.platform == ""darwin"":
        framework = get_config_var(""PYTHONFRAMEWORK"")
        if framework:
            if env_base:
                return env_base
            else:
                return joinuser(""~"", ""Library"", framework, ""%d.%d"" %
                                sys.version_info[:2])

    if env_base:
        return env_base
    else:
        return joinuser(""~"", "".local"")


def _parse_makefile(filename, vars=None):
    """"""Parse a Makefile-style file.

    A dictionary containing name/value pairs is returned.  If an
    optional dictionary is passed in as the second argument, it is
    used instead of a new dictionary.
    """"""
    # Regexes needed for parsing Makefile (and similar syntaxes,
    # like old-style Setup files).
    _variable_rx = re.compile(""([a-zA-Z][a-zA-Z0-9_]+)\s*=\s*(.*)"")
    _findvar1_rx = re.compile(r""\$\(([A-Za-z][A-Za-z0-9_]*)\)"")
    _findvar2_rx = re.compile(r""\${([A-Za-z][A-Za-z0-9_]*)}"")

    if vars is None:
        vars = {}
    done = {}
    notdone = {}

    with codecs.open(filename, encoding='utf-8', errors=""surrogateescape"") as f:
        lines = f.readlines()

    for line in lines:
        if line.startswith('#') or line.strip() == '':
            continue
        m = _variable_rx.match(line)
        if m:
            n, v = m.group(1, 2)
            v = v.strip()
            # `$$' is a literal `$' in make
            tmpv = v.replace('$$', '')

            if ""$"" in tmpv:
                notdone[n] = v
            else:
                try:
                    v = int(v)
                except ValueError:
                    # insert literal `$'
                    done[n] = v.replace('$$', '$')
                else:
                    done[n] = v

    # do variable interpolation here
    variables = list(notdone.keys())

    # Variables with a 'PY_' prefix in the makefile. These need to
    # be made available without that prefix through sysconfig.
    # Special care is needed to ensure that variable expansion works, even
    # if the expansion uses the name without a prefix.
    renamed_variables = ('CFLAGS', 'LDFLAGS', 'CPPFLAGS')

    while len(variables) > 0:
        for name in tuple(variables):
            value = notdone[name]
            m = _findvar1_rx.search(value) or _findvar2_rx.search(value)
            if m is not None:
                n = m.group(1)
                found = True
                if n in done:
                    item = str(done[n])
                elif n in notdone:
                    # get it on a subsequent round
                    found = False
                elif n in os.environ:
                    # do it like make: fall back to environment
                    item = os.environ[n]

                elif n in renamed_variables:
                    if (name.startswith('PY_') and
                        name[3:] in renamed_variables):
                        item = """"

                    elif 'PY_' + n in notdone:
                        found = False

                    else:
                        item = str(done['PY_' + n])

                else:
                    done[n] = item = """"

                if found:
                    after = value[m.end():]
                    value = value[:m.start()] + item + after
                    if ""$"" in after:
                        notdone[name] = value
                    else:
                        try:
                            value = int(value)
                        except ValueError:
                            done[name] = value.strip()
                        else:
                            done[name] = value
                        variables.remove(name)

                        if (name.startswith('PY_') and
                            name[3:] in renamed_variables):

                            name = name[3:]
                            if name not in done:
                                done[name] = value

            else:
                # bogus variable reference (e.g. ""prefix=$/opt/python"");
                # just drop it since we can't deal
                done[name] = value
                variables.remove(name)

    # strip spurious spaces
    for k, v in done.items():
        if isinstance(v, str):
            done[k] = v.strip()

    # save the results in the global dictionary
    vars.update(done)
    return vars


def get_makefile_filename():
    """"""Return the path of the Makefile.""""""
    if _PYTHON_BUILD:
        return os.path.join(_PROJECT_BASE, ""Makefile"")
    if hasattr(sys, 'abiflags'):
        config_dir_name = 'config-%s%s' % (_PY_VERSION_SHORT, sys.abiflags)
    else:
        config_dir_name = 'config'
    return os.path.join(get_path('stdlib'), config_dir_name, 'Makefile')


def _init_posix(vars):
    """"""Initialize the module as appropriate for POSIX systems.""""""
    # load the installed Makefile:
    makefile = get_makefile_filename()
    try:
        _parse_makefile(makefile, vars)
    except IOError as e:
        msg = ""invalid Python installation: unable to open %s"" % makefile
        if hasattr(e, ""strerror""):
            msg = msg + "" (%s)"" % e.strerror
        raise IOError(msg)
    # load the installed pyconfig.h:
    config_h = get_config_h_filename()
    try:
        with open(config_h) as f:
            parse_config_h(f, vars)
    except IOError as e:
        msg = ""invalid Python installation: unable to open %s"" % config_h
        if hasattr(e, ""strerror""):
            msg = msg + "" (%s)"" % e.strerror
        raise IOError(msg)
    # On AIX, there are wrong paths to the linker scripts in the Makefile
    # -- these paths are relative to the Python source, but when installed
    # the scripts are in another directory.
    if _PYTHON_BUILD:
        vars['LDSHARED'] = vars['BLDSHARED']


def _init_non_posix(vars):
    """"""Initialize the module as appropriate for NT""""""
    # set basic install directories
    vars['LIBDEST'] = get_path('stdlib')
    vars['BINLIBDEST'] = get_path('platstdlib')
    vars['INCLUDEPY'] = get_path('include')
    vars['SO'] = '.pyd'
    vars['EXE'] = '.exe'
    vars['VERSION'] = _PY_VERSION_SHORT_NO_DOT
    vars['BINDIR'] = os.path.dirname(_safe_realpath(sys.executable))

#
# public APIs
#


def parse_config_h(fp, vars=None):
    """"""Parse a config.h-style file.

    A dictionary containing name/value pairs is returned.  If an
    optional dictionary is passed in as the second argument, it is
    used instead of a new dictionary.
    """"""
    if vars is None:
        vars = {}
    define_rx = re.compile(""#define ([A-Z][A-Za-z0-9_]+) (.*)\n"")
    undef_rx = re.compile(""/[*] #undef ([A-Z][A-Za-z0-9_]+) [*]/\n"")

    while True:
        line = fp.readline()
        if not line:
            break
        m = define_rx.match(line)
        if m:
            n, v = m.group(1, 2)
            try:
                v = int(v)
            except ValueError:
                pass
            vars[n] = v
        else:
            m = undef_rx.match(line)
            if m:
                vars[m.group(1)] = 0
    return vars


def get_config_h_filename():
    """"""Return the path of pyconfig.h.""""""
    if _PYTHON_BUILD:
        if os.name == ""nt"":
            inc_dir = os.path.join(_PROJECT_BASE, ""PC"")
        else:
            inc_dir = _PROJECT_BASE
    else:
        inc_dir = get_path('platinclude')
    return os.path.join(inc_dir, 'pyconfig.h')


def get_scheme_names():
    """"""Return a tuple containing the schemes names.""""""
    return tuple(sorted(_SCHEMES.sections()))


def get_path_names():
    """"""Return a tuple containing the paths names.""""""
    # xxx see if we want a static list
    return _SCHEMES.options('posix_prefix')


def get_paths(scheme=_get_default_scheme(), vars=None, expand=True):
    """"""Return a mapping containing an install scheme.

    ``scheme`` is the install scheme name. If not provided, it will
    return the default scheme for the current platform.
    """"""
    _ensure_cfg_read()
    if expand:
        return _expand_vars(scheme, vars)
    else:
        return dict(_SCHEMES.items(scheme))


def get_path(name, scheme=_get_default_scheme(), vars=None, expand=True):
    """"""Return a path corresponding to the scheme.

    ``scheme`` is the install scheme name.
    """"""
    return get_paths(scheme, vars, expand)[name]


def get_config_vars(*args):
    """"""With no arguments, return a dictionary of all configuration
    variables relevant for the current platform.

    On Unix, this means every variable defined in Python's installed Makefile;
    On Windows and Mac OS it's a much smaller set.

    With arguments, return a list of values that result from looking up
    each argument in the configuration variable dictionary.
    """"""
    global _CONFIG_VARS
    if _CONFIG_VARS is None:
        _CONFIG_VARS = {}
        # Normalized versions of prefix and exec_prefix are handy to have;
        # in fact, these are the standard versions used most places in the
        # distutils2 module.
        _CONFIG_VARS['prefix'] = _PREFIX
        _CONFIG_VARS['exec_prefix'] = _EXEC_PREFIX
        _CONFIG_VARS['py_version'] = _PY_VERSION
        _CONFIG_VARS['py_version_short'] = _PY_VERSION_SHORT
        _CONFIG_VARS['py_version_nodot'] = _PY_VERSION[0] + _PY_VERSION[2]
        _CONFIG_VARS['base'] = _PREFIX
        _CONFIG_VARS['platbase'] = _EXEC_PREFIX
        _CONFIG_VARS['projectbase'] = _PROJECT_BASE
        try:
            _CONFIG_VARS['abiflags'] = sys.abiflags
        except AttributeError:
            # sys.abiflags may not be defined on all platforms.
            _CONFIG_VARS['abiflags'] = ''

        if os.name in ('nt', 'os2'):
            _init_non_posix(_CONFIG_VARS)
        if os.name == 'posix':
            _init_posix(_CONFIG_VARS)
        # Setting 'userbase' is done below the call to the
        # init function to enable using 'get_config_var' in
        # the init-function.
        if sys.version >= '2.6':
            _CONFIG_VARS['userbase'] = _getuserbase()

        if 'srcdir' not in _CONFIG_VARS:
            _CONFIG_VARS['srcdir'] = _PROJECT_BASE
        else:
            _CONFIG_VARS['srcdir'] = _safe_realpath(_CONFIG_VARS['srcdir'])

        # Convert srcdir into an absolute path if it appears necessary.
        # Normally it is relative to the build directory.  However, during
        # testing, for example, we might be running a non-installed python
        # from a different directory.
        if _PYTHON_BUILD and os.name == ""posix"":
            base = _PROJECT_BASE
            try:
                cwd = os.getcwd()
            except OSError:
                cwd = None
            if (not os.path.isabs(_CONFIG_VARS['srcdir']) and
                base != cwd):
                # srcdir is relative and we are not in the same directory
                # as the executable. Assume executable is in the build
                # directory and make srcdir absolute.
                srcdir = os.path.join(base, _CONFIG_VARS['srcdir'])
                _CONFIG_VARS['srcdir'] = os.path.normpath(srcdir)

        if sys.platform == 'darwin':
            kernel_version = os.uname()[2]  # Kernel version (8.4.3)
            major_version = int(kernel_version.split('.')[0])

            if major_version < 8:
                # On macOS before 10.4, check if -arch and -isysroot
                # are in CFLAGS or LDFLAGS and remove them if they are.
                # This is needed when building extensions on a 10.3 system
                # using a universal build of python.
                for key in ('LDFLAGS', 'BASECFLAGS',
                        # a number of derived variables. These need to be
                        # patched up as well.
                        'CFLAGS', 'PY_CFLAGS', 'BLDSHARED'):
                    flags = _CONFIG_VARS[key]
                    flags = re.sub('-arch\s+\w+\s', ' ', flags)
                    flags = re.sub('-isysroot [^ \t]*', ' ', flags)
                    _CONFIG_VARS[key] = flags
            else:
                # Allow the user to override the architecture flags using
                # an environment variable.
                # NOTE: This name was introduced by Apple in OSX 10.5 and
                # is used by several scripting languages distributed with
                # that OS release.
                if 'ARCHFLAGS' in os.environ:
                    arch = os.environ['ARCHFLAGS']
                    for key in ('LDFLAGS', 'BASECFLAGS',
                        # a number of derived variables. These need to be
                        # patched up as well.
                        'CFLAGS', 'PY_CFLAGS', 'BLDSHARED'):

                        flags = _CONFIG_VARS[key]
                        flags = re.sub('-arch\s+\w+\s', ' ', flags)
                        flags = flags + ' ' + arch
                        _CONFIG_VARS[key] = flags

                # If we're on OSX 10.5 or later and the user tries to
                # compiles an extension using an SDK that is not present
                # on the current machine it is better to not use an SDK
                # than to fail.
                #
                # The major usecase for this is users using a Python.org
                # binary installer  on OSX 10.6: that installer uses
                # the 10.4u SDK, but that SDK is not installed by default
                # when you install Xcode.
                #
                CFLAGS = _CONFIG_VARS.get('CFLAGS', '')
                m = re.search('-isysroot\s+(\S+)', CFLAGS)
                if m is not None:
                    sdk = m.group(1)
                    if not os.path.exists(sdk):
                        for key in ('LDFLAGS', 'BASECFLAGS',
                             # a number of derived variables. These need to be
                             # patched up as well.
                            'CFLAGS', 'PY_CFLAGS', 'BLDSHARED'):

                            flags = _CONFIG_VARS[key]
                            flags = re.sub('-isysroot\s+\S+(\s|$)', ' ', flags)
                            _CONFIG_VARS[key] = flags

    if args:
        vals = []
        for name in args:
            vals.append(_CONFIG_VARS.get(name))
        return vals
    else:
        return _CONFIG_VARS


def get_config_var(name):
    """"""Return the value of a single variable using the dictionary returned by
    'get_config_vars()'.

    Equivalent to get_config_vars().get(name)
    """"""
    return get_config_vars().get(name)


def get_platform():
    """"""Return a string that identifies the current platform.

    This is used mainly to distinguish platform-specific build directories and
    platform-specific built distributions.  Typically includes the OS name
    and version and the architecture (as supplied by 'os.uname()'),
    although the exact information included depends on the OS; eg. for IRIX
    the architecture isn't particularly important (IRIX only runs on SGI
    hardware), but for Linux the kernel version isn't particularly
    important.

    Examples of returned values:
       linux-i586
       linux-alpha (?)
       solaris-2.6-sun4u
       irix-5.3
       irix64-6.2

    Windows will return one of:
       win-amd64 (64bit Windows on AMD64 (aka x86_64, Intel64, EM64T, etc)
       win-ia64 (64bit Windows on Itanium)
       win32 (all others - specifically, sys.platform is returned)

    For other non-POSIX platforms, currently just returns 'sys.platform'.
    """"""
    if os.name == 'nt':
        # sniff sys.version for architecture.
        prefix = "" bit (""
        i = sys.version.find(prefix)
        if i == -1:
            return sys.platform
        j = sys.version.find("")"", i)
        look = sys.version[i+len(prefix):j].lower()
        if look == 'amd64':
            return 'win-amd64'
        if look == 'itanium':
            return 'win-ia64'
        return sys.platform

    if os.name != ""posix"" or not hasattr(os, 'uname'):
        # XXX what about the architecture? NT is Intel or Alpha,
        # Mac OS is M68k or PPC, etc.
        return sys.platform

    # Try to distinguish various flavours of Unix
    osname, host, release, version, machine = os.uname()

    # Convert the OS name to lowercase, remove '/' characters
    # (to accommodate BSD/OS), and translate spaces (for ""Power Macintosh"")
    osname = osname.lower().replace('/', '')
    machine = machine.replace(' ', '_')
    machine = machine.replace('/', '-')

    if osname[:5] == ""linux"":
        # At least on Linux/Intel, 'machine' is the processor --
        # i386, etc.
        # XXX what about Alpha, SPARC, etc?
        return  ""%s-%s"" % (osname, machine)
    elif osname[:5] == ""sunos"":
        if release[0] >= ""5"":           # SunOS 5 == Solaris 2
            osname = ""solaris""
            release = ""%d.%s"" % (int(release[0]) - 3, release[2:])
        # fall through to standard osname-release-machine representation
    elif osname[:4] == ""irix"":              # could be ""irix64""!
        return ""%s-%s"" % (osname, release)
    elif osname[:3] == ""aix"":
        return ""%s-%s.%s"" % (osname, version, release)
    elif osname[:6] == ""cygwin"":
        osname = ""cygwin""
        rel_re = re.compile(r'[\d.]+')
        m = rel_re.match(release)
        if m:
            release = m.group()
    elif osname[:6] == ""darwin"":
        #
        # For our purposes, we'll assume that the system version from
        # distutils' perspective is what MACOSX_DEPLOYMENT_TARGET is set
        # to. This makes the compatibility story a bit more sane because the
        # machine is going to compile and link as if it were
        # MACOSX_DEPLOYMENT_TARGET.
        cfgvars = get_config_vars()
        macver = cfgvars.get('MACOSX_DEPLOYMENT_TARGET')

        if True:
            # Always calculate the release of the running machine,
            # needed to determine if we can build fat binaries or not.

            macrelease = macver
            # Get the system version. Reading this plist is a documented
            # way to get the system version (see the documentation for
            # the Gestalt Manager)
            try:
                f = open('/System/Library/CoreServices/SystemVersion.plist')
            except IOError:
                # We're on a plain darwin box, fall back to the default
                # behaviour.
                pass
            else:
                try:
                    m = re.search(r'<key>ProductUserVisibleVersion</key>\s*'
                                  r'<string>(.*?)</string>', f.read())
                finally:
                    f.close()
                if m is not None:
                    macrelease = '.'.join(m.group(1).split('.')[:2])
                # else: fall back to the default behaviour

        if not macver:
            macver = macrelease

        if macver:
            release = macver
            osname = ""macosx""

            if ((macrelease + '.') >= '10.4.' and
                '-arch' in get_config_vars().get('CFLAGS', '').strip()):
                # The universal build will build fat binaries, but not on
                # systems before 10.4
                #
                # Try to detect 4-way universal builds, those have machine-type
                # 'universal' instead of 'fat'.

                machine = 'fat'
                cflags = get_config_vars().get('CFLAGS')

                archs = re.findall('-arch\s+(\S+)', cflags)
                archs = tuple(sorted(set(archs)))

                if len(archs) == 1:
                    machine = archs[0]
                elif archs == ('i386', 'ppc'):
                    machine = 'fat'
                elif archs == ('i386', 'x86_64'):
                    machine = 'intel'
                elif archs == ('i386', 'ppc', 'x86_64'):
                    machine = 'fat3'
                elif archs == ('ppc64', 'x86_64'):
                    machine = 'fat64'
                elif archs == ('i386', 'ppc', 'ppc64', 'x86_64'):
                    machine = 'universal'
                else:
                    raise ValueError(
                       ""Don't know machine value for archs=%r"" % (archs,))

            elif machine == 'i386':
                # On OSX the machine type returned by uname is always the
                # 32-bit variant, even if the executable architecture is
                # the 64-bit variant
                if sys.maxsize >= 2**32:
                    machine = 'x86_64'

            elif machine in ('PowerPC', 'Power_Macintosh'):
                # Pick a sane name for the PPC architecture.
                # See 'i386' case
                if sys.maxsize >= 2**32:
                    machine = 'ppc64'
                else:
                    machine = 'ppc'

    return ""%s-%s-%s"" % (osname, release, machine)


def get_python_version():
    return _PY_VERSION_SHORT


def _print_dict(title, data):
    for index, (key, value) in enumerate(sorted(data.items())):
        if index == 0:
            print('%s: ' % (title))
        print('\t%s = ""%s""' % (key, value))


def _main():
    """"""Display all information sysconfig detains.""""""
    print('Platform: ""%s""' % get_platform())
    print('Python version: ""%s""' % get_python_version())
    print('Current installation scheme: ""%s""' % _get_default_scheme())
    print()
    _print_dict('Paths', get_paths())
    print()
    _print_dict('Variables', get_config_vars())


if __name__ == '__main__':
    _main()
",sysconfig,en,27743,python,code,{}
py,""""""" Python 'unicode-escape' Codec


Written by Marc-Andre Lemburg (mal@lemburg.com).

(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.

""""""
import codecs

### Codec APIs

class Codec(codecs.Codec):

    # Note: Binding these as C functions will result in the class not
    # converting them to methods. This is intended.
    encode = codecs.unicode_escape_encode
    decode = codecs.unicode_escape_decode

class IncrementalEncoder(codecs.IncrementalEncoder):
    def encode(self, input, final=False):
        return codecs.unicode_escape_encode(input, self.errors)[0]

class IncrementalDecoder(codecs.IncrementalDecoder):
    def decode(self, input, final=False):
        return codecs.unicode_escape_decode(input, self.errors)[0]

class StreamWriter(Codec,codecs.StreamWriter):
    pass

class StreamReader(Codec,codecs.StreamReader):
    pass

### encodings module API

def getregentry():
    return codecs.CodecInfo(
        name='unicode-escape',
        encode=Codec.encode,
        decode=Codec.decode,
        incrementalencoder=IncrementalEncoder,
        incrementaldecoder=IncrementalDecoder,
        streamwriter=StreamWriter,
        streamreader=StreamReader,
    )
",unicode_escape,en,1229,python,code,{}
ts,"import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { ToastrModule } from 'ngx-toastr';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { HttpClientModule } from '@angular/common/http';
import { NgIdleKeepaliveModule } from '@ng-idle/keepalive';

import { AppRoutingModule } from './app-routing.module';
import { ConfigurationModule } from '../configuration/configuration.module';
import { AttorneyApiModule } from '../webservices/attorney.services';
import { AppComponent } from './app.component';

import { MastersService } from '../shared/services/master.service';
import { TextPairHelperService } from '../shared/services/text-pair-helper.service';
import { IdleTimeoutService } from '../shared/security/idle-timeout.service';
import { StorageHelper } from '../shared/providers/storage/storageHelper';

import { PhoneNumberPipe } from '../shared/pipes/phone-number.pipe';
import { AllowOnlyDirective } from '../shared/directives/allow-only.directive';

import { AppInterceptor } from '../shared/interceptors/app.interceptor';
import { CanActivateRouteGuard } from '../shared/providers/route-guards/can-activate-route-guard.provider';

import { HeaderComponent } from '../shared/component/header/header.component';
import { FooterComponent } from '../shared/component/footer/footer.component';

import { LoginComponent } from '../app/Home/Login/Login.component';
@NgModule({
  declarations: [
    AppComponent,
    LoginComponent,
    HeaderComponent,
    FooterComponent,
    PhoneNumberPipe,
    AllowOnlyDirective
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    ConfigurationModule,
    HttpClientModule,
    AttorneyApiModule,
    BrowserAnimationsModule,
    ToastrModule.forRoot(),
    NgIdleKeepaliveModule.forRoot()
  ],
  providers: [{
    provide: HTTP_INTERCEPTORS,
    useClass: AppInterceptor,
    multi: true
  }, MastersService, StorageHelper, CanActivateRouteGuard, IdleTimeoutService, TextPairHelperService],
  exports: [HeaderComponent, FooterComponent, AllowOnlyDirective],
  entryComponents: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
",app.module,en,2302,typescript,code,{}
ts,"import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';
import { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';
import { format } from 'date-fns';  
import { EntidadService } from 'app/services/entidad.service';
import { EstadoService } from 'app/services/estado.service';
import { ReferenciaService } from 'app/services/referencia.service';
import { SeguroplanService } from 'app/services/seguroplan.service';
import { ProductoService } from 'app/services/producto.service';
import { CitamedicaService } from 'app/services/citamedica.service';
import { SedeService } from 'app/services/sede.service';
import { Utils } from 'app/services/utils'; 
import { CitamedicaModel } from './citamedica.model';
import { EntidadFormComponent } from 'app/components/entidad/entidad-form/entidad-form.component';

@Component({
  selector: 'app-citamedica-form',
  templateUrl: './citamedica-form.component.html',
  styleUrls: ['./citamedica-form.component.scss'],
  encapsulation: ViewEncapsulation.None
})
export class CitamedicaFormComponent implements OnInit {

  dialogRef: any;
    action: string;
    citamedica: any;
    citamedicaForm: FormGroup;
    citamedicaResponse: any;
    dialogTitle: string;
    estadoscita: any[] = [{ idestadodocumento: 4, nombre: 'Pendiente' }, { idestadodocumento: 5, nombre: 'Confirmada' }];
    referencias: any[] = [];
    atenciones: any[] = [];
    segurosplanes: any[] = [];
    productos: any[] = [];
    sedes: any[] = [];

    disponibles: any[] = []; // Médicos y horas
    disponibleMedicos: any[] = []; // Solo médicos
    disponibleHoras: any[] = []; // Solo horas

    searchResult: any[] = [];
    isLoadingSearch = false;

    idsededefault: number;
    timedefault: number;
    clientedefault: any;
    newPaciente = true;

    submitted = false;

    constructor(
        public matDialogRef: MatDialogRef<CitamedicaFormComponent>,
        @Inject(MAT_DIALOG_DATA) private _data: any,
        private _entidadService: EntidadService,
        private _estadoService: EstadoService,
        private _referenciaService: ReferenciaService,
        private _seguroplanService: SeguroplanService,
        private _productoService: ProductoService,
        private _citamedicaService: CitamedicaService,
        private _sedeService: SedeService,
        private _utils: Utils,
        private _matDialog: MatDialog,
    ) {
        this.action = _data.action;
        this.idsededefault = _data.idsede || '';
        this.timedefault = _data.time || '';
        this.clientedefault = _data.cliente || '';

        console.log(this.idsededefault, this.timedefault, this.clientedefault);

        if (this.action === 'edit') {
            this.dialogTitle = 'Modificar cita';
            this.show();
        } else {
            this.dialogTitle = 'Nueva cita';
        }
    }

    ngOnInit(): void {

        this.citamedicaForm = this.createEventForm();
        this.indexReferencias();
        this.indexAtenciones();
        this.indexSegurosplanes();
        this.indexProductos();
        this.indexSedes();

        if (this.action === 'new') {
            this.citamedicaForm.controls['idestado'].setValue(4); // Pendiente
        }

        this.citamedicaForm.controls['cliente'].valueChanges
            .pipe(
                debounceTime(300),
                tap(() => this.isLoadingSearch = true),
                switchMap(data => {
                    if (typeof data === 'object') {
                        this.newPaciente = false;
                    } else {
                        this.newPaciente = true;
                    }

                    if (data && typeof data === 'string') {
                        const param = {
                            idempresa: this._entidadService.usuario.idempresa,
                            page: 1,
                            pageSize: 10,
                            orderName: 'entidad',
                            orderSort: 'asc',
                            likeEntidad: data
                        };
                        return this._entidadService.index(param)
                            .pipe(
                                finalize(() => this.isLoadingSearch = false),
                            );
                    } else {
                        this.isLoadingSearch = false;
                        return [];
                    }
                })
            )
            .subscribe((data: any) => {
                this.searchResult = data;
            });

        // Tanto fecha como idsede  invocan cita disponibles
        this.citamedicaForm.controls['fecha'].valueChanges
            .subscribe(data => {
                console.log('fecha valueChanges', data);
                if (data) {
                    this.citasDisponibles();
                }
            });

        // this.citamedicaForm.controls['idsede'].valueChanges
        //     .subscribe(data => {
        //         console.log('idsede valueChanges', data);
        //         if (data) {
        //             this.citasDisponibles();
        //         }
        //     });

        this.citamedicaForm.controls['inicio'].valueChanges
            .subscribe(data => {
                this.citamedicaForm.controls['idmedico'].setValue('');
                this.disponibleMedicos = [];
                if (data) {
                    console.log('inicio valueChanges', data, this.disponibles);
                    this.disponibles.forEach(item => {
                        item.horas.forEach(hora => {
                            if (hora.inicio === data) {
                                this.disponibleMedicos.push({
                                    idmedico: item.idmedico,
                                    entidad: item.nombre,
                                });
                            }
                        });
                    });

                    if (this.disponibleMedicos.length === 1) {
                        this.citamedicaForm.controls['idmedico'].setValue(this.disponibleMedicos[0].idmedico);
                    }
                }
            });
    }

    displayFn(user?): string | undefined {
        return user ? user.entidad : undefined;
    }

    createEventForm(): FormGroup {
        // sede = new FormControl({ value: 'OSI CHACARILLA', disabled: true }, [Validators.required]);
        return new FormGroup({
            idcitamedica: new FormControl(''),
            idsede: new FormControl('', [Validators.required]),
            fecha: new FormControl(this.timedefault || '', [Validators.required]),
            inicio: new FormControl('', [Validators.required]),
            idmedico: new FormControl('', [Validators.required]),
            idestado: new FormControl('', [Validators.required]),
            idreferencia: new FormControl('', [Validators.required]),
            idatencion: new FormControl('', [Validators.required]),
            idaseguradoraplan: new FormControl(''),
            idproducto: new FormControl(''),
            descripcion: new FormControl(''),
            costocero: new FormControl(false),
            validation_fechavencida: new FormControl(false),
            cliente: new FormControl({ value: this.clientedefault || '', disabled: this.action === 'edit' }, [Validators.required])
        });
    }

    citasDisponibles(): void {
        setTimeout(() => {
            let param;
            param = Object.assign({}, this.citamedicaForm.value);
            param.fecha = format(param.fecha, 'YYYY-MM-DD');

            this.disponibles = [];
            this.disponibleHoras = [];
            this._citamedicaService.disponibilidad(param.idsede, { fecha: param.fecha })
                .subscribe((data: any): void => {
                    this.disponibles = this.disponibilidad(data.data);
                    this.disponibleHoras = this.disponibilidadHoras(this.disponibles);

                    // Valores por defecto
                    if (this.action === 'new' && this.disponibleMedicos.length === 1) {
                        this.citamedicaForm.controls['idmedico'].setValue(this.disponibleMedicos[0].idmedico);
                    }

                    if (this.action === 'new' && this.timedefault) {
                        const inicio = format(this.timedefault, 'HH:mm:ss');
                        this.disponibleHoras.forEach(item => {
                            if (inicio === item.idhora) {
                                this.citamedicaForm.controls['inicio'].setValue(inicio);
                            }
                        });
                    }

                    if (this.action === 'new' && this.disponibleHoras.length === 1 && this.citamedicaForm.controls['inicio'].value === '') {
                        this.citamedicaForm.controls['inicio'].setValue(this.disponibleHoras[0].idhora);
                    }
                });
        }, 100);
    }

    // Mostrar cita médica
    show(): void {
        const param = {
            conRecurso: 'paciente, medico'
        };
        this._citamedicaService.show(this._data.citamedica.idcitamedica, param)
            .subscribe((data: any) => {

                this.citamedicaResponse = Object.assign({}, data.data);

                let citamedica: any;
                citamedica = Object.assign({}, data.data);
                citamedica.fecha = this._utils.convertDate(citamedica.fecha);
                citamedica.cliente = { identidad: citamedica.paciente.identidad, entidad: citamedica.paciente.entidad };
                citamedica.validation_fechavencida = false;
                citamedica.costocero = citamedica.costocero === '1' ? true : false;

                this.citamedicaForm.setValue(new CitamedicaModel(citamedica));

                // Añadir hora a listado 
                if (!this._utils.existValue(this.disponibleHoras, 'idhora', this.citamedicaResponse.inicio)) {
                    console.log('Existe hora show');
                    this.disponibleHoras.push({
                        idhora: this.citamedicaResponse.inicio,
                        nombre: this._utils.convertDate(this.citamedicaResponse.fecha, this.citamedicaResponse.inicio)
                    });
                }

                // Añadir médico a listado 
                if (!this._utils.existValue(this.disponibleMedicos, 'idmedico', this.citamedicaResponse.idmedico)) {
                    console.log('Existe medico show');
                    this.disponibleMedicos.push({
                        idmedico: this.citamedicaResponse.idmedico,
                        entidad: this.citamedicaResponse.medico.entidad
                    });
                }

            });
    }

    // Guardar cambios de formulario
    save(): void {
        let param;
        param = this.citamedicaForm.getRawValue();

        const fecha = format(param.fecha, 'YYYY-MM-DD');
        const fin = format(this._utils.sumDate(this._utils.convertDate(fecha, param.inicio), '00:14:00'), 'HH:mm:ss');

        param.fecha = fecha;
        param.fin = fin;
        param.costocero = param.costocero ? '1' : '0';
        param.validation = { fechavencida: param.validation_fechavencida ? '1' : '0', ncitaspendientes: '0' };

        this.submitted = true;

        if (this.action === 'new') {
            param.idpaciente = param.cliente.identidad;
            param.idestadopago = 72; // Pago pendiente  
            this._citamedicaService.create(param).subscribe((data) => {
                this.matDialogRef.close(data.data);
            }, error => {
                const message = this._utils.convertError(error.error.error);
                this.submitted = false;
                swal('Upss!', message, 'error');
            });
        }

        if (this.action === 'edit') {
            this._citamedicaService.update(param.idcitamedica, param).subscribe((data) => {
                this.matDialogRef.close(data.data);
            }, error => {
                const message = this._utils.convertError(error.error.error);
                this.submitted = false;
                swal('Upss!', message, 'error');
            });
        }
    }

    newEntidad(): void {
        this.dialogRef = this._matDialog.open(EntidadFormComponent, {
            panelClass: 'entidad-form-dialog',
            data: {
                action: 'new',
                dialogTitle: 'Nuevo paciente',
                tipo: 'cliente',
                tabPaciente: false
            },
            autoFocus: false
        });

        this.dialogRef.afterClosed()
            .subscribe((response: any) => {
                if (!response) {
                    return;
                }
                this.citamedicaForm.controls['cliente'].setValue({ identidad: response.identidad, entidad: response.entidad });
            });
    }

    editEntidad(entidad): void {
        this.dialogRef = this._matDialog.open(EntidadFormComponent, {
            panelClass: 'entidad-form-dialog',
            data: {
                action: 'edit',
                dialogTitle: 'Modificar paciente',
                tipo: 'cliente',
                tabPaciente: false,
                entidad: Object.assign({}, entidad)
            },
            autoFocus: false
        });

        this.dialogRef.afterClosed()
            .subscribe(response => {
                if (!response) {
                    return;
                }
                this.citamedicaForm.controls['cliente'].setValue({ identidad: response.identidad, entidad: response.entidad });
            });
    }

    // Listado de referencias para cita
    indexReferencias(): void {

        const param = {
            idempresa: this._entidadService.usuario.idempresa,
            orderName: 'nombre',
            orderSort: 'asc'
        };

        this._referenciaService.index(param)
            .subscribe((data: any) => {
                this.referencias = data.data;
            });
    }

    // Listado de atenciones para cita
    indexAtenciones(): void {

        const param = {
            orderName: 'nombre',
            orderSort: 'asc',
            tipo: 5
        };

        this._estadoService.index(param)
            .subscribe((data: any) => {
                this.atenciones = data.data;
            });
    }

    // Listado de planes de seguros
    indexSegurosplanes(): void {
        const param = {
            orderName: 'nombre',
            orderSort: 'asc',
            conRecurso: 'seguro',
            cubierto: '1',
            reservacita: '1'
        };

        this._seguroplanService.index(param)
            .subscribe((data: any) => {
                this.segurosplanes = data.data;
            });
    }

    // Listado de productos
    indexProductos(): void {
        const param = {
            idempresa: this._entidadService.usuario.idempresa,
            orderName: 'nombre',
            orderSort: 'asc',
            idtipoproducto: 2,
            tratamientoind: '1'
        };

        this._productoService.index(param)
            .subscribe((data: any) => {
                this.productos = data.data;
            });
    }

    // Listado de sedes
    indexSedes(): void {
        const param = {
            idempresa: this._entidadService.usuario.idempresa,
            orderName: 'nombre',
            orderSort: 'asc',
            comercial: '1'
        };

        this._sedeService.index(param)
            .subscribe((data: any) => {
                this.sedes = data.data;
                if (this.action === 'new' && this.idsededefault) {
                    this.citamedicaForm.controls['idsede'].setValue(this.idsededefault);
                }

                if (this.action === 'new' && this.timedefault) {
                    this.citasDisponibles();
                }
            });
    }

    // Añadir hora de cita en caso de no existir en diponibilidad
    private disponibilidad(data): any[] {

        if (this.action === 'edit' && this.citamedicaResponse) {
            let existemedico = false;
            let existehora = false;
            let indice = 0;

            data.forEach((item, index) => {

                if (item.idmedico === this.citamedicaResponse.idmedico) {
                    existemedico = true;
                    indice = index;
                }

                item.horas.forEach(hora => {

                    if (hora.idmedico === this.citamedicaResponse.idmedico &&
                        hora.fecha === this.citamedicaResponse.fecha &&
                        hora.inicio === this.citamedicaResponse.inicio
                    ) {
                        existehora = true;
                    }
                });
            });

            const horacita = {
                idmedico: this.citamedicaResponse.idmedico,
                nombre: this.citamedicaResponse.medico.entidad,
                fecha: this.citamedicaResponse.feca,
                inicio: this.citamedicaResponse.inicio,
                fin: this.citamedicaResponse.fin
            };

            if (existemedico && !existehora) {
                data[indice].horas.push(horacita);
            }

            if (!existemedico && !existehora) {
                data.push({
                    idmedico: this.citamedicaResponse.idmedico,
                    nombre: this.citamedicaResponse.medico.entidad,
                    horas: [horacita],
                });
            }
        }

        return data;
    }

    private disponibilidadHoras(data): any[] {

        const horas = [];
        const fecha = format(this.citamedicaForm.controls['fecha'].value, 'YYYY-MM-DD');

        // Todas las horas
        let tmphorasdisp: any[] = [];

        const tmpHoras: string[] = data.map(row => row.horas.map(item => item.inicio));
        tmpHoras.forEach(val => {
            tmphorasdisp = tmphorasdisp.concat(val);
        });

        // Unique y Date
        tmphorasdisp = tmphorasdisp
            .filter((x, i, a) => x && a.indexOf(x) === i)
            .map(val => {
                return this._utils.convertDate(fecha, val);
            });

        // Ordenamiento asc
        tmphorasdisp.sort((a, b) => {
            return a - b;
        });

        // Array de objetos
        for (let index = 0; index < tmphorasdisp.length; index++) {
            const val = tmphorasdisp[index];
            horas.push({
                idhora: format(val, 'HH:mm:ss'),
                nombre: val
            });
        }

        return horas;
    }

}
",citamedica-form.component,es,19221,typescript,code,{}
ts,"export class Client {
    public id: number;
    public nom: string;
    public prenom: string;
    public email: string;
    public adresse: string;
    public ville: string;
    public telephone: string;
    public date_naissance: Date;
    public tampon: number;

    get fullname(): string{
      return (this.nom.toUpperCase() + ' ' + this.prenom);
    }

    constructor(tab: any = {}) {
      Object.assign(this, tab);
    }
}
",client,en,453,typescript,code,{}
ts,"/////////////////////////////////////
// ExportXlsx生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////

namespace configs
{
	export class CooperateRewardConfigStruct extends BaseConfig
	{
	

		id : number;
		tips : string;
		first_id : number;
		first_num : number;
		second_id : number;
		second_num : number;
		third_id : number;
		third_num : number;
		fourth_id : number;
		fourth_num : number;
		fifth_id : number;
		fifth_num : number;
		sixth_id : number;
		six_num : number;





		
	}


}",CooperateRewardConfigStruct,en,565,typescript,code,{}
ts,"import { IsNotEmpty, IsOptional } from 'class-validator';

export class CreateProductInput {
  @IsNotEmpty()
  name!: string;

  @IsOptional()
  fullname?: string;

  @IsNotEmpty()
  serial!: string;

  @IsNotEmpty()
  price!: number;

  @IsOptional()
  cost_price?: number;

  @IsOptional()
  market_price?: number;

  @IsNotEmpty()
  status!: number;

  @IsNotEmpty()
  stock!: number;

  @IsOptional()
  sort?: number;

  @IsOptional()
  description?: string;

  @IsOptional()
  content?: string;

  @IsOptional()
  brandIds?: string[] | null;

  @IsOptional()
  styleIds?: string[] | null;

  @IsOptional()
  tagIds?: string[] | null;

  @IsOptional()
  bannerIds?: string[] | null;
}
",create-product.input,en,737,typescript,code,{}
ts,"export class Item {
  _id?: string;
  itemName?: string;
  itemQuantity?: string;
  itemBought?: boolean;
}
",item,en,114,typescript,code,{}
ts,"import { Component, Input, OnInit } from '@angular/core';
import { OrderType } from '../order.model';

@Component({
  selector: 'app-order-type',
  templateUrl: './order-type.component.html',
  styleUrls: ['./order-type.component.css']
})
export class OrderTypeComponent implements OnInit {
  @Input('type') type: OrderType;
  types = OrderType;

  constructor() { }

  ngOnInit() {
  }

}
",order-type.component,en,408,typescript,code,{}
ts,"import { Component, Inject, OnInit, Renderer2 } from '@angular/core';
import { FormControl } from '@angular/forms';
import { animationsList } from ""../searchList.js"";

@Component({
  selector: 'app-search',
  templateUrl: './search.component.html',
  styleUrls: ['./search.component.css']
})
export class SearchComponent implements OnInit {

  form = new FormControl();

  public searchedList = [];
  public isDisplayAllList = false
  
  constructor(private renderer: Renderer2) {}

  ngOnInit(): void {}
  
  // タイトルから検索
  public onSearchByTitle(keyword: string) {
    let parent = this.renderer.parentNode('resultZone');
    this.renderer.removeChild(parent, 'a');
    // 表示リストを初期化
    this.searchedList = [];
    // 検索結果表示
    animationsList.forEach(animation => {
      if (animation.title.indexOf(keyword) != -1) {
        let searchedAnimation = `${animation.title}：${animation.season}`;
        this.searchedList.push(searchedAnimation);
      }
    });
  }
  
  // 放送時期から検索
  public onSearchBySeason(keyword: string) {
    // 表示リストを初期化
    this.searchedList = [];
    // 検索結果表示
    animationsList.forEach(animation => {
      if (animation.season.indexOf(keyword) != -1) {
        let searchedAnimation = `${animation.title}：${animation.season}`;
        this.searchedList.push(searchedAnimation);
      }
    });
    return;
  }

  // 一覧表示を制御
  public onDisplayAllList() {
    this.isDisplayAllList = true;
  }
  public onHiddenAllList() {
    this.isDisplayAllList = false;
  }
  
  // 表示をリセット
  public onReset() {
    this.searchedList = [];
  }

}",search.component,en,1745,typescript,code,{}
ts,"import { Injectable } from '@angular/core';
import { HttpService } from './http.service';
import { Http } from '@angular/http';


@Injectable()
export class SeatingService extends HttpService{

  constructor(public http: Http)  {
    super(http);
  }

  view(data) {
    return this.get('layout/encoding', data);
  }

  addLayout(data) {
    return this.post('layout/add', data);
  }

  editLayout(data) {
    return this.post('layout/edit', data);
  }

  deleteLayout(data) {
    return this.post('layout/delete', data);
  }
}
",seating.service,en,556,typescript,code,{}
ts,"import { SheetMusicInVersionProjection } from '../projection/sheet-music-in-version/sheet-music-in-version.projection';

export abstract class SheetMusicInVersionRepository {
  abstract save(
    projection: SheetMusicInVersionProjection,
    type: string,
    occurredAt: Date,
  ): Promise<void>;

  abstract getPrevious(): Promise<SheetMusicInVersionProjection>;
}
",sheet-music-in-version.repository,en,379,typescript,code,{}
